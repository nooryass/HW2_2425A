commit 10f3bc9d55b555565de17c1db03da6178aba9524
Author: nooryass <nooryassin059@gmail.com>
Date:   Mon Dec 30 22:43:20 2024 +0200

    Update MataMvidia.cpp

diff --git a/HW2/Wet/MataMvidia.cpp b/HW2/Wet/MataMvidia.cpp
index 6611cc9..e6d42a2 100644
--- a/HW2/Wet/MataMvidia.cpp
+++ b/HW2/Wet/MataMvidia.cpp
@@ -92,8 +92,8 @@ MataMvidia& MataMvidia::operator+=(const Matrix& additionalFrame) {
 
 // Prints Movie Details
 std::ostream& operator<<(std::ostream& outputStream, const MataMvidia& movie) {
-    outputStream << "Movie Title: " << movie.movieName << std::endl;
-    outputStream << "Creator: " << movie.authorName << std::endl;
+    outputStream << "Movie Name: " << movie.movieName << std::endl;
+    outputStream << "Author: " << movie.authorName << std::endl;
 
     for (int frameIndex = 0; frameIndex < movie.movieLength; ++frameIndex) {
         outputStream << std::endl;

commit 60ce2c61769e08a51dd78459fc84d497014512e9
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 01:49:59 2024 +0200

    Implementing MetaVidia

diff --git a/HW2/CMakeLists.txt b/HW2/CMakeLists.txt
index 77c01ca..0a61c4c 100644
--- a/HW2/CMakeLists.txt
+++ b/HW2/CMakeLists.txt
@@ -3,4 +3,4 @@ project(HW2)
 
 set(CMAKE_CXX_STANDARD 17)
 
-add_executable(HW2 Dry/main.cpp Dry/Pirate.h Dry/Pirate.cpp Wet/Matrix.cpp Wet/Matrix.h Wet/Utilities.h Wet/Utilities.cpp )
\ No newline at end of file
+add_executable(HW2 Wet/MataMvidia.h Wet/MataMvidia.cpp Wet/tests.cpp Dry/Pirate.h Dry/Pirate.cpp Wet/Matrix.cpp Wet/Matrix.h Wet/Utilities.h Wet/Utilities.cpp )
\ No newline at end of file
diff --git a/HW2/Wet/MataMvidia.cpp b/HW2/Wet/MataMvidia.cpp
new file mode 100644
index 0000000..6611cc9
--- /dev/null
+++ b/HW2/Wet/MataMvidia.cpp
@@ -0,0 +1,106 @@
+﻿#include "MataMvidia.h"
+
+// Constructor
+MataMvidia::MataMvidia(const std::string& movieTitle, const std::string& creatorName,
+                       Matrix* frameArray, int numFrames)
+    : movieName(movieTitle), authorName(creatorName), movieLength(numFrames) {
+    frames = new Matrix[numFrames];
+    for (int frameIndex = 0; frameIndex < numFrames; ++frameIndex) {
+        frames[frameIndex] = frameArray[frameIndex];
+    }
+}
+
+// Destructor
+MataMvidia::~MataMvidia() {
+    delete[] frames;
+}
+
+// Copy Constructor
+MataMvidia::MataMvidia(const MataMvidia& otherMovie)
+    : movieName(otherMovie.movieName), authorName(otherMovie.authorName), movieLength(otherMovie.movieLength) {
+    frames = new Matrix[movieLength];
+    for (int frameIndex = 0; frameIndex < movieLength; ++frameIndex) {
+        frames[frameIndex] = otherMovie.frames[frameIndex];
+    }
+}
+
+// Assignment Operator
+MataMvidia& MataMvidia::operator=(const MataMvidia& otherMovie) {
+    if (this == &otherMovie) {
+        return *this;
+    }
+
+    Matrix* newFrames = new Matrix[otherMovie.movieLength];
+    for (int frameIndex = 0; frameIndex < otherMovie.movieLength; ++frameIndex) {
+        newFrames[frameIndex] = otherMovie.frames[frameIndex];
+    }
+
+    delete[] frames;
+    movieLength = otherMovie.movieLength;
+    movieName = otherMovie.movieName;
+    authorName = otherMovie.authorName;
+    frames = newFrames;
+
+    return *this;
+}
+
+// [] Operator (Read-Only)
+const Matrix& MataMvidia::operator[](int frameIndex) const {
+    if (frameIndex < 0 || frameIndex >= movieLength) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    return frames[frameIndex];
+}
+
+// [] Operator (Read-Write)
+Matrix& MataMvidia::operator[](int frameIndex) {
+    if (frameIndex < 0 || frameIndex >= movieLength) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    return frames[frameIndex];
+}
+
+// Addition Assignment Operator (Movie + Movie)
+MataMvidia& MataMvidia::operator+=(const MataMvidia& otherMovie) {
+    for (int frameIndex = 0; frameIndex < otherMovie.movieLength; ++frameIndex) {
+        (*this) += otherMovie[frameIndex];
+    }
+    return *this;
+}
+
+// Addition Operator (Movie + Movie)
+MataMvidia operator+(const MataMvidia& firstMovie, const MataMvidia& secondMovie) {
+    MataMvidia newMovie(firstMovie);
+    newMovie += secondMovie;
+    return newMovie;
+}
+
+// Addition Assignment Operator (Movie + Matrix)
+MataMvidia& MataMvidia::operator+=(const Matrix& additionalFrame) {
+    Matrix* updatedFrames = new Matrix[movieLength + 1];
+    for (int frameIndex = 0; frameIndex < movieLength; ++frameIndex) {
+        updatedFrames[frameIndex] = frames[frameIndex];
+    }
+    updatedFrames[movieLength] = additionalFrame;
+
+    delete[] frames;
+    frames = updatedFrames;
+    movieLength++;
+
+    return *this;
+}
+
+// Prints Movie Details
+std::ostream& operator<<(std::ostream& outputStream, const MataMvidia& movie) {
+    outputStream << "Movie Title: " << movie.movieName << std::endl;
+    outputStream << "Creator: " << movie.authorName << std::endl;
+
+    for (int frameIndex = 0; frameIndex < movie.movieLength; ++frameIndex) {
+        outputStream << std::endl;
+        outputStream << "Frame " << frameIndex << ":" << std::endl;
+        outputStream << movie.frames[frameIndex];
+    }
+
+    outputStream << std::endl << "-----End of Movie-----" << std::endl;
+    return outputStream;
+}
diff --git a/HW2/Wet/MataMvidia.h b/HW2/Wet/MataMvidia.h
new file mode 100644
index 0000000..f790afa
--- /dev/null
+++ b/HW2/Wet/MataMvidia.h
@@ -0,0 +1,39 @@
+﻿
+#ifndef WET_MATAMVIDIA_H
+#define WET_MATAMVIDIA_H
+
+#include "Matrix.h"
+#include "Utilities.h"
+
+#include <string>
+#include <iostream>
+#include <ostream>
+
+
+class MataMvidia {
+
+private:
+    std::string movieName; // the name of the movie
+    std::string authorName; // who created the movie
+    int movieLength; // number of frames
+    Matrix* frames;
+
+public:
+    MataMvidia( const std::string& movieName, const std::string& creatorName,
+                 Matrix* framesArray, int movieLength );
+    ~MataMvidia();
+    MataMvidia( const MataMvidia& movie);
+
+    MataMvidia& operator=(const MataMvidia& otherMovie);
+    const Matrix& operator[](int index) const;
+    Matrix& operator[](int index);
+    MataMvidia& operator+=(const MataMvidia& otherMovie);
+    MataMvidia& operator+=(const Matrix& otherMatrix);
+
+    friend std::ostream& operator<<( std::ostream&, const MataMvidia& MataMvidia);
+
+};
+
+MataMvidia operator+(const MataMvidia& movie1, const MataMvidia& movie2);
+
+#endif //WET_MATAMVIDIA_H
diff --git a/HW2/Wet/Mvidia.exe b/HW2/Wet/Mvidia.exe
new file mode 100644
index 0000000..b653523
Binary files /dev/null and b/HW2/Wet/Mvidia.exe differ
diff --git a/HW2/Wet/test.out b/HW2/Wet/test.out
new file mode 100644
index 0000000..e69de29
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache
index 731fe49..629165a 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache
@@ -6,11 +6,33 @@
 
 #IncludeRegexTransform: 
 
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.h
+Matrix.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
 Utilities.h
 C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+string
+-
 iostream
 -
+ostream
+-
 
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
+iostream
+-
+Utilities.h
 C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
 
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/tests.cpp
+string
+-
+iostream
+-
+Matrix.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
+MataMvidia.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.h
+
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake
index aee9d86..1298371 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake
@@ -5,9 +5,10 @@ set(CMAKE_DEPENDS_LANGUAGES
 # The set of files for implicit dependencies of each language:
 set(CMAKE_DEPENDS_CHECK_CXX
   "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
-  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/main.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj"
   "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
   "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/tests.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/tests.cpp.obj"
   )
 set(CMAKE_CXX_COMPILER_ID "GNU")
 
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj
new file mode 100644
index 0000000..92a64cf
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/tests.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/tests.cpp.obj
new file mode 100644
index 0000000..2db18c4
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/tests.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make
index b587a2f..e3b6ac6 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make
@@ -76,22 +76,35 @@ include CMakeFiles/HW2.dir/progress.make
 # Include the compile flags for this target's objects.
 include CMakeFiles/HW2.dir/flags.make
 
-CMakeFiles/HW2.dir/Dry/main.cpp.obj: CMakeFiles/HW2.dir/flags.make
-CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/main.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/HW2.dir/Dry/main.cpp.obj"
-	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Dry\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp"
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: ../Wet/MataMvidia.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\MataMvidia.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\MataMvidia.cpp"
 
-CMakeFiles/HW2.dir/Dry/main.cpp.i: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Dry/main.cpp.i"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp" > CMakeFiles\HW2.dir\Dry\main.cpp.i
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\MataMvidia.cpp" > CMakeFiles\HW2.dir\Wet\MataMvidia.cpp.i
 
-CMakeFiles/HW2.dir/Dry/main.cpp.s: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Dry/main.cpp.s"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp" -o CMakeFiles\HW2.dir\Dry\main.cpp.s
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\MataMvidia.cpp" -o CMakeFiles\HW2.dir\Wet\MataMvidia.cpp.s
+
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: ../Wet/tests.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/HW2.dir/Wet/tests.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\tests.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\tests.cpp"
+
+CMakeFiles/HW2.dir/Wet/tests.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Wet/tests.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\tests.cpp" > CMakeFiles\HW2.dir\Wet\tests.cpp.i
+
+CMakeFiles/HW2.dir/Wet/tests.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Wet/tests.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\tests.cpp" -o CMakeFiles\HW2.dir\Wet\tests.cpp.s
 
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: CMakeFiles/HW2.dir/flags.make
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Building CXX object CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
 	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Dry\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\Pirate.cpp"
 
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.i: cmake_force
@@ -104,7 +117,7 @@ CMakeFiles/HW2.dir/Dry/Pirate.cpp.s: cmake_force
 
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: CMakeFiles/HW2.dir/flags.make
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Building CXX object CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_4) "Building CXX object CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
 	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\Matrix.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Matrix.cpp"
 
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.i: cmake_force
@@ -117,7 +130,7 @@ CMakeFiles/HW2.dir/Wet/Matrix.cpp.s: cmake_force
 
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: CMakeFiles/HW2.dir/flags.make
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_4) "Building CXX object CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_5) "Building CXX object CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
 	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\Utilities.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Utilities.cpp"
 
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.i: cmake_force
@@ -130,7 +143,8 @@ CMakeFiles/HW2.dir/Wet/Utilities.cpp.s: cmake_force
 
 # Object files for target HW2
 HW2_OBJECTS = \
-"CMakeFiles/HW2.dir/Dry/main.cpp.obj" \
+"CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj" \
+"CMakeFiles/HW2.dir/Wet/tests.cpp.obj" \
 "CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj" \
 "CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj" \
 "CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
@@ -138,7 +152,8 @@ HW2_OBJECTS = \
 # External object files for target HW2
 HW2_EXTERNAL_OBJECTS =
 
-HW2.exe: CMakeFiles/HW2.dir/Dry/main.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/Wet/tests.cpp.obj
 HW2.exe: CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
 HW2.exe: CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
 HW2.exe: CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
@@ -146,7 +161,7 @@ HW2.exe: CMakeFiles/HW2.dir/build.make
 HW2.exe: CMakeFiles/HW2.dir/linklibs.rsp
 HW2.exe: CMakeFiles/HW2.dir/objects1.rsp
 HW2.exe: CMakeFiles/HW2.dir/link.txt
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_5) "Linking CXX executable HW2.exe"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_6) "Linking CXX executable HW2.exe"
 	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\HW2.dir\link.txt --verbose=$(VERBOSE)
 
 # Rule to build all files generated by this target.
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake
index 29e8385..4c9cd3a 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake
@@ -1,8 +1,9 @@
 file(REMOVE_RECURSE
   "CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
-  "CMakeFiles/HW2.dir/Dry/main.cpp.obj"
+  "CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj"
   "CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
   "CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+  "CMakeFiles/HW2.dir/Wet/tests.cpp.obj"
   "HW2.exe"
   "HW2.exe.manifest"
   "HW2.pdb"
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal
index 752e346..0c91f0c 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal
@@ -4,12 +4,19 @@
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.cpp
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h
-CMakeFiles/HW2.dir/Dry/main.cpp.obj
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.cpp
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/tests.cpp
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make
index 53a86a9..87286bb 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make
@@ -4,8 +4,10 @@
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.cpp
 CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.h
 
-CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/Pirate.h
-CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/main.cpp
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: ../Wet/MataMvidia.cpp
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: ../Wet/MataMvidia.h
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: ../Wet/Matrix.h
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj: ../Wet/Utilities.h
 
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.cpp
 CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.h
@@ -13,3 +15,8 @@ CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.h
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.cpp
 CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.h
 
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: ../Wet/MataMvidia.h
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: ../Wet/Matrix.h
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: ../Wet/Utilities.h
+CMakeFiles/HW2.dir/Wet/tests.cpp.obj: ../Wet/tests.cpp
+
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a
index 804bf5f..3217fb9 100644
Binary files a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp
index 2bcbad9..81ae602 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp
@@ -1 +1 @@
-CMakeFiles/HW2.dir/Dry/main.cpp.obj CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
+CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj CMakeFiles/HW2.dir/Wet/tests.cpp.obj CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
index 33e6bff..daba7fa 100644
--- a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
@@ -3,4 +3,5 @@ CMAKE_PROGRESS_2 = 2
 CMAKE_PROGRESS_3 = 3
 CMAKE_PROGRESS_4 = 4
 CMAKE_PROGRESS_5 = 5
+CMAKE_PROGRESS_6 = 6
 
diff --git a/HW2/cmake-build-debug/CMakeFiles/Makefile2 b/HW2/cmake-build-debug/CMakeFiles/Makefile2
index 8d94d5e..b4da248 100644
--- a/HW2/cmake-build-debug/CMakeFiles/Makefile2
+++ b/HW2/cmake-build-debug/CMakeFiles/Makefile2
@@ -93,12 +93,12 @@ clean: CMakeFiles/HW2.dir/clean
 CMakeFiles/HW2.dir/all:
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/depend
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/build
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=1,2,3,4,5 "Built target HW2"
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=1,2,3,4,5,6 "Built target HW2"
 .PHONY : CMakeFiles/HW2.dir/all
 
 # Build rule for subdir invocation for target.
 CMakeFiles/HW2.dir/rule: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 5
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 6
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/HW2.dir/all
 	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 0
 .PHONY : CMakeFiles/HW2.dir/rule
diff --git a/HW2/cmake-build-debug/CMakeFiles/progress.marks b/HW2/cmake-build-debug/CMakeFiles/progress.marks
index 7ed6ff8..1e8b314 100644
--- a/HW2/cmake-build-debug/CMakeFiles/progress.marks
+++ b/HW2/cmake-build-debug/CMakeFiles/progress.marks
@@ -1 +1 @@
-5
+6
diff --git a/HW2/cmake-build-debug/HW2.cbp b/HW2/cmake-build-debug/HW2.cbp
index 735fcff..03394db 100644
--- a/HW2/cmake-build-debug/HW2.cbp
+++ b/HW2/cmake-build-debug/HW2.cbp
@@ -88,7 +88,10 @@
 		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h">
 			<Option target="HW2"/>
 		</Unit>
-		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp">
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.cpp">
+			<Option target="HW2"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/MataMvidia.h">
 			<Option target="HW2"/>
 		</Unit>
 		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp">
@@ -103,6 +106,9 @@
 		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h">
 			<Option target="HW2"/>
 		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/tests.cpp">
+			<Option target="HW2"/>
+		</Unit>
 		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/CMakeLists.txt">
 			<Option virtualFolder="CMake Files\"/>
 		</Unit>
diff --git a/HW2/cmake-build-debug/HW2.exe b/HW2/cmake-build-debug/HW2.exe
index 6406394..f92ced9 100644
Binary files a/HW2/cmake-build-debug/HW2.exe and b/HW2/cmake-build-debug/HW2.exe differ
diff --git a/HW2/cmake-build-debug/Makefile b/HW2/cmake-build-debug/Makefile
index 19321a0..e8ee3a7 100644
--- a/HW2/cmake-build-debug/Makefile
+++ b/HW2/cmake-build-debug/Makefile
@@ -169,32 +169,32 @@ Dry/Pirate.cpp.s:
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/Pirate.cpp.s
 .PHONY : Dry/Pirate.cpp.s
 
-Dry/main.obj: Dry/main.cpp.obj
+Wet/MataMvidia.obj: Wet/MataMvidia.cpp.obj
 
-.PHONY : Dry/main.obj
+.PHONY : Wet/MataMvidia.obj
 
 # target to build an object file
-Dry/main.cpp.obj:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.obj
-.PHONY : Dry/main.cpp.obj
+Wet/MataMvidia.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.obj
+.PHONY : Wet/MataMvidia.cpp.obj
 
-Dry/main.i: Dry/main.cpp.i
+Wet/MataMvidia.i: Wet/MataMvidia.cpp.i
 
-.PHONY : Dry/main.i
+.PHONY : Wet/MataMvidia.i
 
 # target to preprocess a source file
-Dry/main.cpp.i:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.i
-.PHONY : Dry/main.cpp.i
+Wet/MataMvidia.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.i
+.PHONY : Wet/MataMvidia.cpp.i
 
-Dry/main.s: Dry/main.cpp.s
+Wet/MataMvidia.s: Wet/MataMvidia.cpp.s
 
-.PHONY : Dry/main.s
+.PHONY : Wet/MataMvidia.s
 
 # target to generate assembly for a file
-Dry/main.cpp.s:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.s
-.PHONY : Dry/main.cpp.s
+Wet/MataMvidia.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/MataMvidia.cpp.s
+.PHONY : Wet/MataMvidia.cpp.s
 
 Wet/Matrix.obj: Wet/Matrix.cpp.obj
 
@@ -250,6 +250,33 @@ Wet/Utilities.cpp.s:
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Utilities.cpp.s
 .PHONY : Wet/Utilities.cpp.s
 
+Wet/tests.obj: Wet/tests.cpp.obj
+
+.PHONY : Wet/tests.obj
+
+# target to build an object file
+Wet/tests.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/tests.cpp.obj
+.PHONY : Wet/tests.cpp.obj
+
+Wet/tests.i: Wet/tests.cpp.i
+
+.PHONY : Wet/tests.i
+
+# target to preprocess a source file
+Wet/tests.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/tests.cpp.i
+.PHONY : Wet/tests.cpp.i
+
+Wet/tests.s: Wet/tests.cpp.s
+
+.PHONY : Wet/tests.s
+
+# target to generate assembly for a file
+Wet/tests.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/tests.cpp.s
+.PHONY : Wet/tests.cpp.s
+
 # Help Target
 help:
 	@echo The following are some of the valid targets for this Makefile:
@@ -262,15 +289,18 @@ help:
 	@echo ... Dry/Pirate.obj
 	@echo ... Dry/Pirate.i
 	@echo ... Dry/Pirate.s
-	@echo ... Dry/main.obj
-	@echo ... Dry/main.i
-	@echo ... Dry/main.s
+	@echo ... Wet/MataMvidia.obj
+	@echo ... Wet/MataMvidia.i
+	@echo ... Wet/MataMvidia.s
 	@echo ... Wet/Matrix.obj
 	@echo ... Wet/Matrix.i
 	@echo ... Wet/Matrix.s
 	@echo ... Wet/Utilities.obj
 	@echo ... Wet/Utilities.i
 	@echo ... Wet/Utilities.s
+	@echo ... Wet/tests.obj
+	@echo ... Wet/tests.i
+	@echo ... Wet/tests.s
 .PHONY : help
 
 

commit 85d6823b7f029eb846ac79916c9a4f237fd8d559
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 01:39:14 2024 +0200

    implementing Matrix - testing needed

diff --git a/HW2/Wet/Matrix.cpp b/HW2/Wet/Matrix.cpp
new file mode 100644
index 0000000..bbf2a00
--- /dev/null
+++ b/HW2/Wet/Matrix.cpp
@@ -0,0 +1,202 @@
+﻿#include "Matrix.h"
+#include "Utilities.h"
+#include <cmath>
+
+Matrix::Matrix() : length(0), width(0), data(nullptr) {}
+
+Matrix::Matrix(int numRows, int numCols) : length(numRows), width(numCols) {
+    if (numRows < 0 || numCols < 0) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    data = new int[numRows * numCols];
+    for (int elementIndex = 0; elementIndex < numRows * numCols; ++elementIndex) {
+        data[elementIndex] = 0;
+    }
+}
+
+Matrix::Matrix(int numRows, int numCols, int initialValue) : length(numRows), width(numCols) {
+    if (numRows < 0 || numCols < 0) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    data = new int[numRows * numCols];
+    for (int elementIndex = 0; elementIndex < numRows * numCols; ++elementIndex) {
+        data[elementIndex] = initialValue;
+    }
+}
+
+Matrix::Matrix(const Matrix& sourceMatrix) : length(sourceMatrix.length), width(sourceMatrix.width) {
+    if (sourceMatrix.data) {
+        data = new int[length * width];
+        for (int elementIndex = 0; elementIndex < length * width; ++elementIndex) {
+            data[elementIndex] = sourceMatrix.data[elementIndex];
+        }
+    } else {
+        data = nullptr;
+    }
+}
+
+Matrix::~Matrix() {
+    delete[] data;
+}
+
+Matrix& Matrix::operator=(const Matrix& sourceMatrix) {
+    if (this == &sourceMatrix) {
+        return *this;
+    }
+    int* newData = new int[sourceMatrix.length * sourceMatrix.width];
+    for (int elementIndex = 0; elementIndex < sourceMatrix.length * sourceMatrix.width; ++elementIndex) {
+        newData[elementIndex] = sourceMatrix.data[elementIndex];
+    }
+    delete[] data;
+    data = newData;
+    length = sourceMatrix.length;
+    width = sourceMatrix.width;
+    return *this;
+}
+
+int& Matrix::operator()(int rowIndex, int colIndex) {
+    if (rowIndex < 0 || rowIndex >= length || colIndex < 0 || colIndex >= width) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    return data[width * rowIndex + colIndex];
+}
+
+const int& Matrix::operator()(int rowIndex, int colIndex) const {
+    if (rowIndex < 0 || rowIndex >= length || colIndex < 0 || colIndex >= width) {
+        exitWithError(MatamErrorType::OutOfBounds);
+    }
+    return data[width * rowIndex + colIndex];
+}
+
+Matrix& Matrix::operator+=(const Matrix& otherMatrix) {
+    if (otherMatrix.length != length || otherMatrix.width != width) {
+        exitWithError(MatamErrorType::UnmatchedSizes);
+    }
+    for (int elementIndex = 0; elementIndex < length * width; ++elementIndex) {
+        data[elementIndex] += otherMatrix.data[elementIndex];
+    }
+    return *this;
+}
+
+Matrix& Matrix::operator-=(const Matrix& otherMatrix) {
+    return *this += -otherMatrix;
+}
+
+Matrix& Matrix::operator*=(const Matrix& otherMatrix) {
+    if (width != otherMatrix.length) {
+        exitWithError(MatamErrorType::UnmatchedSizes);
+    }
+    Matrix resultMatrix(length, otherMatrix.width);
+    for (int rowIndex = 0; rowIndex < length; ++rowIndex) {
+        for (int colIndex = 0; colIndex < otherMatrix.width; ++colIndex) {
+            for (int commonIndex = 0; commonIndex < width; ++commonIndex) {
+                resultMatrix(rowIndex, colIndex) += (*this)(rowIndex, commonIndex) * otherMatrix(commonIndex, colIndex);
+            }
+        }
+    }
+    *this = resultMatrix;
+    return *this;
+}
+
+Matrix& Matrix::operator*=(int scalarValue) {
+    for (int elementIndex = 0; elementIndex < length * width; ++elementIndex) {
+        data[elementIndex] *= scalarValue;
+    }
+    return *this;
+}
+
+Matrix Matrix::operator-() const {
+    return *this * -1;
+}
+
+Matrix Matrix::rotateClockwise() const {
+    Matrix turned_matrix_clockwise(width, length);
+    for (int j = 0; j < width; j++)
+        for (int i = length - 1, a = 0; i >= 0; i--, a++) {
+            turned_matrix_clockwise(j, a) = this->operator()(i, j);
+        }
+    return turned_matrix_clockwise;
+}
+
+Matrix Matrix::rotateCounterClockwise() const {
+    return this->rotateClockwise().rotateClockwise().rotateClockwise();
+}
+
+Matrix Matrix::transpose() const {
+    Matrix transposedMatrix(width, length);
+    for (int rowIndex = 0; rowIndex < length; ++rowIndex) {
+        for (int colIndex = 0; colIndex < width; ++colIndex) {
+            transposedMatrix(colIndex, rowIndex) = (*this)(rowIndex, colIndex);
+        }
+    }
+    return transposedMatrix;
+}
+
+double Matrix::CalcFrobeniusNorm(const Matrix& matrix) {
+    double sumOfSquares = 0.0;
+    for (int rowIndex = 0; rowIndex < matrix.length; ++rowIndex) {
+        for (int colIndex = 0; colIndex < matrix.width; ++colIndex) {
+            sumOfSquares += std::pow(matrix(rowIndex, colIndex), 2);
+        }
+    }
+    return std::sqrt(sumOfSquares);
+}
+
+Matrix operator+(const Matrix& matrix1, const Matrix& matrix2) {
+    return Matrix(matrix1) += matrix2;
+}
+
+Matrix operator-(const Matrix& matrix1, const Matrix& matrix2) {
+    return Matrix(matrix1) -= matrix2;
+}
+
+Matrix operator*(const Matrix& matrix1, const Matrix& matrix2) {
+    return Matrix(matrix1) *= matrix2;
+}
+
+Matrix operator*(const Matrix& matrix, int scalarValue) {
+    return Matrix(matrix) *= scalarValue;
+}
+
+Matrix operator*(int scalarValue, const Matrix& matrix) {
+    return matrix * scalarValue;
+}
+
+bool operator==(const Matrix& matrix1, const Matrix& matrix2) {
+    if (matrix1.length != matrix2.length || matrix1.width != matrix2.width) {
+        return false;
+    }
+    for (int i = 0; i < matrix1.length; ++i) {
+        for (int j = 0; j < matrix1.width; ++j) {
+            if (matrix1(i, j) != matrix2(i, j)) {
+                return false;
+            }
+        }
+    }
+    return true;
+}
+
+bool operator!=(const Matrix& matrix1, const Matrix& matrix2) {
+    return !(matrix1 == matrix2);
+}
+
+Matrix turnToScalarMatrix(int scalarValue, int numRows, int numCols) {
+    Matrix scalarMatrix(numRows, numCols);
+    for (int diagonalIndex = 0; diagonalIndex < numRows; ++diagonalIndex) {
+        scalarMatrix(diagonalIndex, diagonalIndex) = scalarValue;
+    }
+    return scalarMatrix;
+}
+
+std::ostream& operator<<(std::ostream& outputStream, const Matrix& matrix) {
+    if (matrix.length == 0 || matrix.width == 0) {
+        return outputStream;
+    }
+    for (int rowIndex = 0; rowIndex < matrix.length; ++rowIndex) {
+        for (int colIndex = 0; colIndex < matrix.width; ++colIndex) {
+            outputStream << "|" << matrix(rowIndex, colIndex);
+        }
+        outputStream << "|" << std::endl;
+    }
+    return outputStream;
+}
diff --git a/HW2/Wet/Matrix.h b/HW2/Wet/Matrix.h
new file mode 100644
index 0000000..4c93118
--- /dev/null
+++ b/HW2/Wet/Matrix.h
@@ -0,0 +1,103 @@
+﻿//
+// Created by Nataly Haddad on 09/07/2024.
+//
+
+#ifndef WET_Matrix_H
+#define WET_Matrix_H
+
+#include <iostream>
+#include "Utilities.h"
+
+class Matrix {
+
+private:
+
+    int length; // number of rows
+    int width; // number of columns
+    int* data; // one-dimensional array to store Matrix elements
+
+public:
+    
+    // constructor that initializes a matrix with initValue
+    Matrix(int n, int m, int initialValue); 
+
+    // constructor that initializes a matrix with zeroes
+    Matrix( int n, int m );
+
+    // default constructor that initializes a 0x0 Matrix
+    Matrix();
+
+    // copy constructor
+    Matrix(const Matrix& matrix);
+
+    // assignment operator
+    Matrix& operator=(const Matrix& matrix);
+
+    // destructor
+    ~Matrix();
+
+    // operator () for accessing elements in the matrix (non-const version)
+    int& operator()(int row, int column);
+
+    // operator () for accessing elements in the matrix (const version)
+    const int& operator()(int row, int column) const;
+
+    // addition assignment operator
+    Matrix& operator+=(const Matrix& matrix);
+
+    // subtractions assignment operator
+    Matrix& operator-=(const Matrix& matrix);
+
+    // multiplication assignment operator
+    Matrix& operator*=(const Matrix& matrix);
+
+    // unary minus operator
+    Matrix operator-() const;
+
+    // multiplication by scalar assignment operator
+    Matrix& operator*=(const int scalar);
+
+    // returns rotated matrix clockwise
+    Matrix rotateClockwise() const;
+
+    // returns rotated matrix counterclockwise
+    Matrix rotateCounterClockwise() const;
+
+    // returns transposed matrix
+    Matrix transpose() const;
+
+    // prints matrix
+    friend std::ostream& operator<<(std::ostream& os, const Matrix& Matrix);
+
+    // equality operator
+    friend bool operator==(const Matrix& matrix1, const Matrix& matrix2);
+
+    static double CalcFrobeniusNorm(const Matrix& matrix);
+
+};
+
+// matrix addition operator
+Matrix operator+(const Matrix& matrix1, const Matrix& matrix2);
+
+// matrix subtraction operator
+Matrix operator-(const Matrix& matrix1, const Matrix& matrix2);
+
+// matrix multiplication operator
+Matrix operator*(const Matrix& matrix1, const Matrix& matrix2);
+
+// multiplication by scalar operator
+Matrix operator*(const int scalar, const Matrix& matrix);
+
+// multiplication by scalar operator
+Matrix operator*(const Matrix& matrix, const int scalar);
+
+// inequality operator
+bool operator!=(const Matrix& matrix1, const Matrix& matrix2);
+
+// turns a scalar to a scalar matrix
+Matrix turnToScalarMatrix(int scalar, int length, int width);
+
+// Method to calculate Frobenius norm of the current matrix
+
+
+#endif //WET_Matrix_H

commit d0389d3568806ff6c7e1e1f487da1013fb811696
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 01:36:48 2024 +0200

    reordering repository

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..7d442ff
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,3 @@
+
+*.xml
+*.xml
diff --git a/dry/.idea/dry.iml b/HW2/.idea/HW2.iml
similarity index 100%
rename from dry/.idea/dry.iml
rename to HW2/.idea/HW2.iml
diff --git a/HW2/CMakeLists.txt b/HW2/CMakeLists.txt
new file mode 100644
index 0000000..77c01ca
--- /dev/null
+++ b/HW2/CMakeLists.txt
@@ -0,0 +1,6 @@
+cmake_minimum_required(VERSION 3.17)
+project(HW2)
+
+set(CMAKE_CXX_STANDARD 17)
+
+add_executable(HW2 Dry/main.cpp Dry/Pirate.h Dry/Pirate.cpp Wet/Matrix.cpp Wet/Matrix.h Wet/Utilities.h Wet/Utilities.cpp )
\ No newline at end of file
diff --git a/dry/Pirate.cpp b/HW2/Dry/Pirate.cpp
similarity index 100%
rename from dry/Pirate.cpp
rename to HW2/Dry/Pirate.cpp
diff --git a/dry/Pirate.h b/HW2/Dry/Pirate.h
similarity index 100%
rename from dry/Pirate.h
rename to HW2/Dry/Pirate.h
diff --git a/dry/main.cpp b/HW2/Dry/main.cpp
similarity index 100%
rename from dry/main.cpp
rename to HW2/Dry/main.cpp
diff --git a/HW2/Wet/Utilities.cpp b/HW2/Wet/Utilities.cpp
new file mode 100644
index 0000000..0fb8a17
--- /dev/null
+++ b/HW2/Wet/Utilities.cpp
@@ -0,0 +1,23 @@
+﻿
+#include "Utilities.h"
+
+#include <iostream>
+
+using std::cerr;
+
+
+void exitWithError(MatamErrorType error) {
+    std::cerr << "Matam Error: ";
+    switch (error) {
+    case MatamErrorType::UnmatchedSizes:
+        std::cerr << "Unmatched matrices" << std::endl;
+        break;
+    case MatamErrorType::OutOfBounds:
+        std::cerr << "Out of bounds" << std::endl;
+        break;
+    case MatamErrorType::NotSquareMatrix:
+        std::cerr << "Matrix must be square to calculate determinant" << std::endl;
+        break;
+    }
+    exit(1);
+}
\ No newline at end of file
diff --git a/wet/Utilities.h b/HW2/Wet/Utilities.h
old mode 100755
new mode 100644
similarity index 89%
rename from wet/Utilities.h
rename to HW2/Wet/Utilities.h
index c07958d..c5d43f3
--- a/wet/Utilities.h
+++ b/HW2/Wet/Utilities.h
@@ -1,5 +1,4 @@
-
-#pragma once
+﻿#pragma once
 
 enum class MatamErrorType {
     UnmatchedSizes,
diff --git a/wet/tests.cpp b/HW2/Wet/tests.cpp
old mode 100755
new mode 100644
similarity index 100%
rename from wet/tests.cpp
rename to HW2/Wet/tests.cpp
diff --git a/dry/cmake-build-debug/CMakeCache.txt b/HW2/cmake-build-debug/CMakeCache.txt
similarity index 99%
rename from dry/cmake-build-debug/CMakeCache.txt
rename to HW2/cmake-build-debug/CMakeCache.txt
index d275abe..031a08a 100644
--- a/dry/cmake-build-debug/CMakeCache.txt
+++ b/HW2/cmake-build-debug/CMakeCache.txt
@@ -1,5 +1,5 @@
 # This is the CMakeCache file.
-# For build in directory: c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+# For build in directory: c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug
 # It was generated by CMake: C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
 # You can edit this file to change values found and used by cmake.
 # If you do not want to change any of the values, simply exit the editor.
@@ -118,7 +118,7 @@ CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
 CMAKE_GNUtoMS:BOOL=OFF
 
 //Install path prefix, prepended onto install directories.
-CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/dry
+CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/HW2
 
 //Path to a program.
 CMAKE_LINKER:FILEPATH=C:/TDM-GCC-64/bin/ld.exe
@@ -162,7 +162,7 @@ CMAKE_PROJECT_DESCRIPTION:STATIC=
 CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
 
 //Value Computed by CMake
-CMAKE_PROJECT_NAME:STATIC=dry
+CMAKE_PROJECT_NAME:STATIC=HW2
 
 //Path to a program.
 CMAKE_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/ranlib.exe
@@ -245,10 +245,10 @@ CMAKE_STRIP:FILEPATH=C:/TDM-GCC-64/bin/strip.exe
 CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
 
 //Value Computed by CMake
-dry_BINARY_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+HW2_BINARY_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug
 
 //Value Computed by CMake
-dry_SOURCE_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+HW2_SOURCE_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2
 
 
 ########################
@@ -260,7 +260,7 @@ CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_AR
 CMAKE_AR-ADVANCED:INTERNAL=1
 //This is the directory where this CMakeCache.txt was created
-CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug
 //Major version of cmake used to create the current loaded cache
 CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
 //Minor version of cmake used to create the current loaded cache
@@ -345,7 +345,7 @@ CMAKE_GENERATOR_PLATFORM:INTERNAL=
 CMAKE_GENERATOR_TOOLSET:INTERNAL=
 //Source directory with the top level CMakeLists.txt file for this
 // project
-CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2
 //ADVANCED property for variable: CMAKE_LINKER
 CMAKE_LINKER-ADVANCED:INTERNAL=1
 //ADVANCED property for variable: CMAKE_MAKE_PROGRAM
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
similarity index 99%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
index f7af6b7..ec1884b 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin and b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
similarity index 99%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
index b5667a8..33f7be6 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin and b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
similarity index 99%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
index 48eb81c..2eb97e1 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe and b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
similarity index 99%
rename from dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
rename to HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
index abb28bf..2ac40d1 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe and b/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake b/HW2/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
similarity index 86%
rename from dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
rename to HW2/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
index 7511877..990eb1e 100644
--- a/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
+++ b/HW2/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -2,8 +2,8 @@
 # Generated by "MinGW Makefiles" Generator, CMake Version 3.17
 
 # Relative path conversion top directories.
-set(CMAKE_RELATIVE_PATH_TOP_SOURCE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry")
-set(CMAKE_RELATIVE_PATH_TOP_BINARY "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug")
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug")
 
 # Force unix paths in dependencies.
 set(CMAKE_FORCE_UNIX_PATHS 1)
diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log b/HW2/cmake-build-debug/CMakeFiles/CMakeOutput.log
similarity index 82%
rename from dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
rename to HW2/cmake-build-debug/CMakeFiles/CMakeOutput.log
index e32660a..df0ce2a 100644
--- a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
+++ b/HW2/cmake-build-debug/CMakeFiles/CMakeOutput.log
@@ -10,7 +10,7 @@ The output was:
 
 Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
 
-The C compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe"
+The C compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe"
 
 Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
 Compiler: C:/TDM-GCC-64/bin/g++.exe 
@@ -23,39 +23,39 @@ The output was:
 
 Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
 
-The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe"
+The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe"
 
 Determining if the C compiler works passed with the following output:
-Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_5e170/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_5e170.dir\build.make CMakeFiles/cmTC_5e170.dir/build
-mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building C object CMakeFiles/cmTC_5e170.dir/testCCompiler.c.obj
-C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_5e170.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
-Linking C executable cmTC_5e170.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_5e170.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_5e170.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_5e170.dir/objects.a @CMakeFiles\cmTC_5e170.dir\objects1.rsp
-C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_5e170.dir/objects.a -Wl,--no-whole-archive  -o cmTC_5e170.exe -Wl,--out-implib,libcmTC_5e170.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_5e170.dir\linklibs.rsp
-mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_65a75/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_65a75.dir\build.make CMakeFiles/cmTC_65a75.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building C object CMakeFiles/cmTC_65a75.dir/testCCompiler.c.obj
+C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_65a75.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
+Linking C executable cmTC_65a75.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_65a75.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_65a75.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_65a75.dir/objects.a @CMakeFiles\cmTC_65a75.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_65a75.dir/objects.a -Wl,--no-whole-archive  -o cmTC_65a75.exe -Wl,--out-implib,libcmTC_65a75.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_65a75.dir\linklibs.rsp
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
 
 Detecting C compiler ABI info compiled with the following output:
-Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_963e1/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_963e1.dir\build.make CMakeFiles/cmTC_963e1.dir/build
-mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building C object CMakeFiles/cmTC_963e1.dir/CMakeCCompilerABI.c.obj
-C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_4158c/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_4158c.dir\build.make CMakeFiles/cmTC_4158c.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building C object CMakeFiles/cmTC_4158c.dir/CMakeCCompilerABI.c.obj
+C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
 Target: x86_64-w64-mingw32
 Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
 Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccaMpdbf.s
 GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
 
@@ -76,17 +76,17 @@ GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 
 GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccaMpdbf.s
 GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
-Linking C executable cmTC_963e1.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_963e1.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_963e1.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_963e1.dir/objects.a @CMakeFiles\cmTC_963e1.dir\objects1.rsp
-C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_963e1.dir/objects.a -Wl,--no-whole-archive  -o cmTC_963e1.exe -Wl,--out-implib,libcmTC_963e1.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking C executable cmTC_4158c.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_4158c.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_4158c.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_4158c.dir/objects.a @CMakeFiles\cmTC_4158c.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_4158c.dir/objects.a -Wl,--no-whole-archive  -o cmTC_4158c.exe -Wl,--out-implib,libcmTC_4158c.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
 COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
@@ -96,10 +96,10 @@ Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_963e1.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a --no-whole-archive --out-implib libcmTC_963e1.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64'
-mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_4158c.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccox0xfJ.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_4158c.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_4158c.dir/objects.a --no-whole-archive --out-implib libcmTC_4158c.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_4158c.exe' '-mtune=generic' '-march=x86-64'
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
 
@@ -120,20 +120,20 @@ Parsed C implicit include dir info from above output: rv=done
 
 Parsed C implicit link information from above output:
   link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp]
   ignore line: []
-  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_963e1/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_963e1.dir\build.make CMakeFiles/cmTC_963e1.dir/build]
-  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-  ignore line: [Building C object CMakeFiles/cmTC_963e1.dir/CMakeCCompilerABI.c.obj]
-  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_4158c/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_4158c.dir\build.make CMakeFiles/cmTC_4158c.dir/build]
+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp']
+  ignore line: [Building C object CMakeFiles/cmTC_4158c.dir/CMakeCCompilerABI.c.obj]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
   ignore line: [Target: x86_64-w64-mingw32]
   ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
   ignore line: [Thread model: posix]
   ignore line: [gcc version 9.2.0 (tdm64-1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccaMpdbf.s]
   ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
   ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
   ignore line: []
@@ -154,8 +154,8 @@ Parsed C implicit link information from above output:
   ignore line: []
   ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
   ignore line: [Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccaMpdbf.s]
   ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
   ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
   ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
@@ -166,12 +166,12 @@ Parsed C implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [Linking C executable cmTC_963e1.exe]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_963e1.dir\link.txt --verbose=1]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_963e1.dir/objects.a]
-  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_963e1.dir/objects.a @CMakeFiles\cmTC_963e1.dir\objects1.rsp]
-  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a -Wl --no-whole-archive  -o cmTC_963e1.exe -Wl --out-implib libcmTC_963e1.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_4158c.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking C executable cmTC_4158c.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_4158c.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_4158c.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_4158c.dir/objects.a @CMakeFiles\cmTC_4158c.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_4158c.dir/objects.a -Wl --no-whole-archive  -o cmTC_4158c.exe -Wl --out-implib libcmTC_4158c.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
   ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
@@ -188,13 +188,13 @@ Parsed C implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64']
-  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_963e1.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a --no-whole-archive --out-implib libcmTC_963e1.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_4158c.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccox0xfJ.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_4158c.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_4158c.dir/objects.a --no-whole-archive --out-implib libcmTC_4158c.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
     arg [-plugin] ==> ignore
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
     arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccox0xfJ.res] ==> ignore
     arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
     arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
@@ -215,7 +215,7 @@ Parsed C implicit link information from above output:
     arg [--exclude-libs=libpthread.a] ==> ignore
     arg [-Bdynamic] ==> ignore
     arg [-o] ==> ignore
-    arg [cmTC_963e1.exe] ==> ignore
+    arg [cmTC_4158c.exe] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
@@ -225,10 +225,10 @@ Parsed C implicit link information from above output:
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
     arg [--whole-archive] ==> ignore
-    arg [CMakeFiles\cmTC_963e1.dir/objects.a] ==> ignore
+    arg [CMakeFiles\cmTC_4158c.dir/objects.a] ==> ignore
     arg [--no-whole-archive] ==> ignore
     arg [--out-implib] ==> ignore
-    arg [libcmTC_963e1.dll.a] ==> ignore
+    arg [libcmTC_4158c.dll.a] ==> ignore
     arg [--major-image-version] ==> ignore
     arg [0] ==> ignore
     arg [--minor-image-version] ==> ignore
@@ -264,36 +264,36 @@ Parsed C implicit link information from above output:
 
 
 Determining if the CXX compiler works passed with the following output:
-Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_cc2e5/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_cc2e5.dir\build.make CMakeFiles/cmTC_cc2e5.dir/build
-mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_cc2e5.dir/testCXXCompiler.cxx.obj
-C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_cc2e5.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
-Linking CXX executable cmTC_cc2e5.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_cc2e5.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_cc2e5.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_cc2e5.dir/objects.a @CMakeFiles\cmTC_cc2e5.dir\objects1.rsp
-C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_cc2e5.dir/objects.a -Wl,--no-whole-archive  -o cmTC_cc2e5.exe -Wl,--out-implib,libcmTC_cc2e5.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_cc2e5.dir\linklibs.rsp
-mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_ccedb/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_ccedb.dir\build.make CMakeFiles/cmTC_ccedb.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_ccedb.dir/testCXXCompiler.cxx.obj
+C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_ccedb.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
+Linking CXX executable cmTC_ccedb.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_ccedb.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_ccedb.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_ccedb.dir/objects.a @CMakeFiles\cmTC_ccedb.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_ccedb.dir/objects.a -Wl,--no-whole-archive  -o cmTC_ccedb.exe -Wl,--out-implib,libcmTC_ccedb.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_ccedb.dir\linklibs.rsp
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
 
 Detecting CXX compiler ABI info compiled with the following output:
-Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_db99a/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_db99a.dir\build.make CMakeFiles/cmTC_db99a.dir/build
-mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_db99a.dir/CMakeCXXCompilerABI.cpp.obj
-C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_72d9e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_72d9e.dir\build.make CMakeFiles/cmTC_72d9e.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_72d9e.dir/CMakeCXXCompilerABI.cpp.obj
+C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
 Target: x86_64-w64-mingw32
 Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
 Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccEw76V4.s
 GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
 
@@ -320,17 +320,17 @@ GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 
 GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccEw76V4.s
 GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
-Linking CXX executable cmTC_db99a.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_db99a.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_db99a.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_db99a.dir/objects.a @CMakeFiles\cmTC_db99a.dir\objects1.rsp
-C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_db99a.dir/objects.a -Wl,--no-whole-archive  -o cmTC_db99a.exe -Wl,--out-implib,libcmTC_db99a.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking CXX executable cmTC_72d9e.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_72d9e.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_72d9e.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_72d9e.dir/objects.a @CMakeFiles\cmTC_72d9e.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_72d9e.dir/objects.a -Wl,--no-whole-archive  -o cmTC_72d9e.exe -Wl,--out-implib,libcmTC_72d9e.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
 COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
@@ -340,10 +340,10 @@ Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_db99a.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a --no-whole-archive --out-implib libcmTC_db99a.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64'
-mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_72d9e.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\cclep8mm.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_72d9e.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_72d9e.dir/objects.a --no-whole-archive --out-implib libcmTC_72d9e.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_72d9e.exe' '-mtune=generic' '-march=x86-64'
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
 
@@ -370,20 +370,20 @@ Parsed CXX implicit include dir info from above output: rv=done
 
 Parsed CXX implicit link information from above output:
   link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp]
   ignore line: []
-  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_db99a/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_db99a.dir\build.make CMakeFiles/cmTC_db99a.dir/build]
-  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-  ignore line: [Building CXX object CMakeFiles/cmTC_db99a.dir/CMakeCXXCompilerABI.cpp.obj]
-  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_72d9e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_72d9e.dir\build.make CMakeFiles/cmTC_72d9e.dir/build]
+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/CMakeTmp']
+  ignore line: [Building CXX object CMakeFiles/cmTC_72d9e.dir/CMakeCXXCompilerABI.cpp.obj]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
   ignore line: [Target: x86_64-w64-mingw32]
   ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
   ignore line: [Thread model: posix]
   ignore line: [gcc version 9.2.0 (tdm64-1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccEw76V4.s]
   ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
   ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
   ignore line: []
@@ -410,8 +410,8 @@ Parsed CXX implicit link information from above output:
   ignore line: []
   ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
   ignore line: [Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccEw76V4.s]
   ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
   ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
   ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
@@ -422,12 +422,12 @@ Parsed CXX implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [Linking CXX executable cmTC_db99a.exe]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_db99a.dir\link.txt --verbose=1]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_db99a.dir/objects.a]
-  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_db99a.dir/objects.a @CMakeFiles\cmTC_db99a.dir\objects1.rsp]
-  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a -Wl --no-whole-archive  -o cmTC_db99a.exe -Wl --out-implib libcmTC_db99a.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_72d9e.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking CXX executable cmTC_72d9e.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_72d9e.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_72d9e.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_72d9e.dir/objects.a @CMakeFiles\cmTC_72d9e.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_72d9e.dir/objects.a -Wl --no-whole-archive  -o cmTC_72d9e.exe -Wl --out-implib libcmTC_72d9e.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
   ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
@@ -444,13 +444,13 @@ Parsed CXX implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64']
-  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_db99a.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a --no-whole-archive --out-implib libcmTC_db99a.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_72d9e.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\cclep8mm.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_72d9e.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_72d9e.dir/objects.a --no-whole-archive --out-implib libcmTC_72d9e.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
     arg [-plugin] ==> ignore
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
     arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\cclep8mm.res] ==> ignore
     arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
     arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
@@ -471,7 +471,7 @@ Parsed CXX implicit link information from above output:
     arg [--exclude-libs=libpthread.a] ==> ignore
     arg [-Bdynamic] ==> ignore
     arg [-o] ==> ignore
-    arg [cmTC_db99a.exe] ==> ignore
+    arg [cmTC_72d9e.exe] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
@@ -481,10 +481,10 @@ Parsed CXX implicit link information from above output:
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
     arg [--whole-archive] ==> ignore
-    arg [CMakeFiles\cmTC_db99a.dir/objects.a] ==> ignore
+    arg [CMakeFiles\cmTC_72d9e.dir/objects.a] ==> ignore
     arg [--no-whole-archive] ==> ignore
     arg [--out-implib] ==> ignore
-    arg [libcmTC_db99a.dll.a] ==> ignore
+    arg [libcmTC_72d9e.dll.a] ==> ignore
     arg [--major-image-version] ==> ignore
     arg [0] ==> ignore
     arg [--minor-image-version] ==> ignore
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache
new file mode 100644
index 0000000..731fe49
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/CXX.includecache
@@ -0,0 +1,16 @@
+#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp
+Utilities.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+iostream
+-
+
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
+
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake
new file mode 100644
index 0000000..aee9d86
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/DependInfo.cmake
@@ -0,0 +1,23 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/main.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# The include file search paths:
+set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  )
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# Fortran module output directory.
+set(CMAKE_Fortran_TARGET_MODULE_DIR "")
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
new file mode 100644
index 0000000..f8d5759
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/main.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/main.cpp.obj
new file mode 100644
index 0000000..7e2163b
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Dry/main.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
new file mode 100644
index 0000000..c9ddeec
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
new file mode 100644
index 0000000..eb21335
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make
new file mode 100644
index 0000000..b587a2f
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/build.make
@@ -0,0 +1,164 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# Delete rule output on recipe failure.
+.DELETE_ON_ERROR:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Disable VCS-based implicit rules.
+% : %,v
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%,v
+
+
+# Disable VCS-based implicit rules.
+% : SCCS/s.%
+
+
+# Disable VCS-based implicit rules.
+% : s.%
+
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Command-line flag to silence nested $(MAKE).
+$(VERBOSE)MAKESILENT = -s
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+SHELL = cmd.exe
+
+# The CMake executable.
+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
+
+# The command to remove a file.
+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2"
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug"
+
+# Include any dependencies generated for this target.
+include CMakeFiles/HW2.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/HW2.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/HW2.dir/flags.make
+
+CMakeFiles/HW2.dir/Dry/main.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/main.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/HW2.dir/Dry/main.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Dry\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp"
+
+CMakeFiles/HW2.dir/Dry/main.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Dry/main.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp" > CMakeFiles\HW2.dir\Dry\main.cpp.i
+
+CMakeFiles/HW2.dir/Dry/main.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Dry/main.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\main.cpp" -o CMakeFiles\HW2.dir\Dry\main.cpp.s
+
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Dry\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\Pirate.cpp"
+
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Dry/Pirate.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\Pirate.cpp" > CMakeFiles\HW2.dir\Dry\Pirate.cpp.i
+
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Dry/Pirate.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Dry\Pirate.cpp" -o CMakeFiles\HW2.dir\Dry\Pirate.cpp.s
+
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Building CXX object CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\Matrix.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Matrix.cpp"
+
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Wet/Matrix.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Matrix.cpp" > CMakeFiles\HW2.dir\Wet\Matrix.cpp.i
+
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Wet/Matrix.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Matrix.cpp" -o CMakeFiles\HW2.dir\Wet\Matrix.cpp.s
+
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: CMakeFiles/HW2.dir/flags.make
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_4) "Building CXX object CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\HW2.dir\Wet\Utilities.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Utilities.cpp"
+
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/HW2.dir/Wet/Utilities.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Utilities.cpp" > CMakeFiles\HW2.dir\Wet\Utilities.cpp.i
+
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/HW2.dir/Wet/Utilities.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\Wet\Utilities.cpp" -o CMakeFiles\HW2.dir\Wet\Utilities.cpp.s
+
+# Object files for target HW2
+HW2_OBJECTS = \
+"CMakeFiles/HW2.dir/Dry/main.cpp.obj" \
+"CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj" \
+"CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj" \
+"CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+
+# External object files for target HW2
+HW2_EXTERNAL_OBJECTS =
+
+HW2.exe: CMakeFiles/HW2.dir/Dry/main.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
+HW2.exe: CMakeFiles/HW2.dir/build.make
+HW2.exe: CMakeFiles/HW2.dir/linklibs.rsp
+HW2.exe: CMakeFiles/HW2.dir/objects1.rsp
+HW2.exe: CMakeFiles/HW2.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_5) "Linking CXX executable HW2.exe"
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\HW2.dir\link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/HW2.dir/build: HW2.exe
+
+.PHONY : CMakeFiles/HW2.dir/build
+
+CMakeFiles/HW2.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles\HW2.dir\cmake_clean.cmake
+.PHONY : CMakeFiles/HW2.dir/clean
+
+CMakeFiles/HW2.dir/depend:
+	$(CMAKE_COMMAND) -E cmake_depends "MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles\HW2.dir\DependInfo.cmake" --color=$(COLOR)
+.PHONY : CMakeFiles/HW2.dir/depend
+
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake
new file mode 100644
index 0000000..29e8385
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/cmake_clean.cmake
@@ -0,0 +1,15 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj"
+  "CMakeFiles/HW2.dir/Dry/main.cpp.obj"
+  "CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj"
+  "CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj"
+  "HW2.exe"
+  "HW2.exe.manifest"
+  "HW2.pdb"
+  "libHW2.dll.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/HW2.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal
new file mode 100644
index 0000000..752e346
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.internal
@@ -0,0 +1,15 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.cpp
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h
+CMakeFiles/HW2.dir/Dry/main.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make
new file mode 100644
index 0000000..53a86a9
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/depend.make
@@ -0,0 +1,15 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.cpp
+CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj: ../Dry/Pirate.h
+
+CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/Pirate.h
+CMakeFiles/HW2.dir/Dry/main.cpp.obj: ../Dry/main.cpp
+
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.cpp
+CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj: ../Wet/Matrix.h
+
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.cpp
+CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj: ../Wet/Utilities.h
+
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/flags.make
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
rename to HW2/cmake-build-debug/CMakeFiles/HW2.dir/flags.make
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/link.txt b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/link.txt
new file mode 100644
index 0000000..6052ad0
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/link.txt
@@ -0,0 +1,3 @@
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\HW2.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\HW2.dir/objects.a @CMakeFiles\HW2.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe -g   -Wl,--whole-archive CMakeFiles\HW2.dir/objects.a -Wl,--no-whole-archive  -o HW2.exe -Wl,--out-implib,libHW2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\HW2.dir\linklibs.rsp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/linklibs.rsp
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
rename to HW2/cmake-build-debug/CMakeFiles/HW2.dir/linklibs.rsp
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a
new file mode 100644
index 0000000..804bf5f
Binary files /dev/null and b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects.a differ
diff --git a/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp
new file mode 100644
index 0000000..2bcbad9
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/objects1.rsp
@@ -0,0 +1 @@
+CMakeFiles/HW2.dir/Dry/main.cpp.obj CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
similarity index 60%
rename from dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
rename to HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
index 6a9dc74..33e6bff 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
+++ b/HW2/cmake-build-debug/CMakeFiles/HW2.dir/progress.make
@@ -1,4 +1,6 @@
 CMAKE_PROGRESS_1 = 1
 CMAKE_PROGRESS_2 = 2
 CMAKE_PROGRESS_3 = 3
+CMAKE_PROGRESS_4 = 4
+CMAKE_PROGRESS_5 = 5
 
diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile.cmake b/HW2/cmake-build-debug/CMakeFiles/Makefile.cmake
similarity index 98%
rename from dry/cmake-build-debug/CMakeFiles/Makefile.cmake
rename to HW2/cmake-build-debug/CMakeFiles/Makefile.cmake
index 75be321..b9cf814 100644
--- a/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
+++ b/HW2/cmake-build-debug/CMakeFiles/Makefile.cmake
@@ -53,5 +53,5 @@ set(CMAKE_MAKEFILE_PRODUCTS
 
 # Dependency information for all targets:
 set(CMAKE_DEPEND_INFO_FILES
-  "CMakeFiles/dry.dir/DependInfo.cmake"
+  "CMakeFiles/HW2.dir/DependInfo.cmake"
   )
diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile2 b/HW2/cmake-build-debug/CMakeFiles/Makefile2
similarity index 75%
rename from dry/cmake-build-debug/CMakeFiles/Makefile2
rename to HW2/cmake-build-debug/CMakeFiles/Makefile2
index bbf8d8a..8d94d5e 100644
--- a/dry/cmake-build-debug/CMakeFiles/Makefile2
+++ b/HW2/cmake-build-debug/CMakeFiles/Makefile2
@@ -63,16 +63,16 @@ RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2"
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug"
 
 #=============================================================================
 # Directory level rules for the build root directory
 
 # The main recursive "all" target.
-all: CMakeFiles/dry.dir/all
+all: CMakeFiles/HW2.dir/all
 
 .PHONY : all
 
@@ -82,36 +82,36 @@ preinstall:
 .PHONY : preinstall
 
 # The main recursive "clean" target.
-clean: CMakeFiles/dry.dir/clean
+clean: CMakeFiles/HW2.dir/clean
 
 .PHONY : clean
 
 #=============================================================================
-# Target rules for target CMakeFiles/dry.dir
+# Target rules for target CMakeFiles/HW2.dir
 
 # All Build rule for target.
-CMakeFiles/dry.dir/all:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/depend
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=1,2,3 "Built target dry"
-.PHONY : CMakeFiles/dry.dir/all
+CMakeFiles/HW2.dir/all:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/depend
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" --progress-num=1,2,3,4,5 "Built target HW2"
+.PHONY : CMakeFiles/HW2.dir/all
 
 # Build rule for subdir invocation for target.
-CMakeFiles/dry.dir/rule: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 3
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/dry.dir/all
-	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
-.PHONY : CMakeFiles/dry.dir/rule
+CMakeFiles/HW2.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 5
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/HW2.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 0
+.PHONY : CMakeFiles/HW2.dir/rule
 
 # Convenience name for target.
-dry: CMakeFiles/dry.dir/rule
+HW2: CMakeFiles/HW2.dir/rule
 
-.PHONY : dry
+.PHONY : HW2
 
 # clean rule for target.
-CMakeFiles/dry.dir/clean:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/clean
-.PHONY : CMakeFiles/dry.dir/clean
+CMakeFiles/HW2.dir/clean:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/clean
+.PHONY : CMakeFiles/HW2.dir/clean
 
 #=============================================================================
 # Special targets to cleanup operation of make.
diff --git a/HW2/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/HW2/cmake-build-debug/CMakeFiles/TargetDirectories.txt
new file mode 100644
index 0000000..a37cd42
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/TargetDirectories.txt
@@ -0,0 +1,3 @@
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/HW2.dir
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/edit_cache.dir
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/CMakeFiles/rebuild_cache.dir
diff --git a/dry/cmake-build-debug/CMakeFiles/clion-environment.txt b/HW2/cmake-build-debug/CMakeFiles/clion-environment.txt
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/clion-environment.txt
rename to HW2/cmake-build-debug/CMakeFiles/clion-environment.txt
diff --git a/dry/cmake-build-debug/CMakeFiles/clion-log.txt b/HW2/cmake-build-debug/CMakeFiles/clion-log.txt
similarity index 82%
rename from dry/cmake-build-debug/CMakeFiles/clion-log.txt
rename to HW2/cmake-build-debug/CMakeFiles/clion-log.txt
index a544d62..6d2a384 100644
--- a/dry/cmake-build-debug/CMakeFiles/clion-log.txt
+++ b/HW2/cmake-build-debug/CMakeFiles/clion-log.txt
@@ -1,4 +1,4 @@
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2"
 -- Configuring done
 -- Generating done
--- Build files have been written to: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+-- Build files have been written to: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug
diff --git a/dry/cmake-build-debug/CMakeFiles/cmake.check_cache b/HW2/cmake-build-debug/CMakeFiles/cmake.check_cache
similarity index 100%
rename from dry/cmake-build-debug/CMakeFiles/cmake.check_cache
rename to HW2/cmake-build-debug/CMakeFiles/cmake.check_cache
diff --git a/HW2/cmake-build-debug/CMakeFiles/progress.marks b/HW2/cmake-build-debug/CMakeFiles/progress.marks
new file mode 100644
index 0000000..7ed6ff8
--- /dev/null
+++ b/HW2/cmake-build-debug/CMakeFiles/progress.marks
@@ -0,0 +1 @@
+5
diff --git a/dry/cmake-build-debug/dry.cbp b/HW2/cmake-build-debug/HW2.cbp
similarity index 62%
rename from dry/cmake-build-debug/dry.cbp
rename to HW2/cmake-build-debug/HW2.cbp
index 6929279..735fcff 100644
--- a/dry/cmake-build-debug/dry.cbp
+++ b/HW2/cmake-build-debug/HW2.cbp
@@ -2,24 +2,24 @@
 <CodeBlocks_project_file>
 	<FileVersion major="1" minor="6"/>
 	<Project>
-		<Option title="dry"/>
+		<Option title="HW2"/>
 		<Option makefile_is_custom="1"/>
 		<Option compiler="gcc"/>
 		<Option virtualFolders="CMake Files\;"/>
 		<Build>
 			<Target title="all">
-				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug"/>
 				<Option type="4"/>
 				<MakeCommands>
-					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
-					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
 				</MakeCommands>
 			</Target>
-			<Target title="dry">
-				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
-				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+			<Target title="HW2">
+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/HW2.exe" prefix_auto="0" extension_auto="0"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug"/>
 				<Option object_output="./"/>
 				<Option type="1"/>
 				<Option compiler="gcc"/>
@@ -33,15 +33,15 @@
 					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
 				</Compiler>
 				<MakeCommands>
-					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry"/>
-					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 HW2"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
 				</MakeCommands>
 			</Target>
-			<Target title="dry/fast">
-				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
-				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+			<Target title="HW2/fast">
+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/HW2.exe" prefix_auto="0" extension_auto="0"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug"/>
 				<Option object_output="./"/>
 				<Option type="1"/>
 				<Option compiler="gcc"/>
@@ -55,43 +55,55 @@
 					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
 				</Compiler>
 				<MakeCommands>
-					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry/fast"/>
-					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 HW2/fast"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
 				</MakeCommands>
 			</Target>
 			<Target title="edit_cache">
-				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug"/>
 				<Option type="4"/>
 				<MakeCommands>
-					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
-					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
 				</MakeCommands>
 			</Target>
 			<Target title="rebuild_cache">
-				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug"/>
 				<Option type="4"/>
 				<MakeCommands>
-					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
-					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
 				</MakeCommands>
 			</Target>
 		</Build>
-		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp">
-			<Option target="dry"/>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.cpp">
+			<Option target="HW2"/>
 		</Unit>
-		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h">
-			<Option target="dry"/>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/Pirate.h">
+			<Option target="HW2"/>
 		</Unit>
-		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp">
-			<Option target="dry"/>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Dry/main.cpp">
+			<Option target="HW2"/>
 		</Unit>
-		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/CMakeLists.txt">
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.cpp">
+			<Option target="HW2"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Matrix.h">
+			<Option target="HW2"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.cpp">
+			<Option target="HW2"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/Wet/Utilities.h">
+			<Option target="HW2"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/CMakeLists.txt">
 			<Option virtualFolder="CMake Files\"/>
 		</Unit>
 	</Project>
diff --git a/HW2/cmake-build-debug/HW2.exe b/HW2/cmake-build-debug/HW2.exe
new file mode 100644
index 0000000..6406394
Binary files /dev/null and b/HW2/cmake-build-debug/HW2.exe differ
diff --git a/dry/cmake-build-debug/Makefile b/HW2/cmake-build-debug/Makefile
similarity index 57%
rename from dry/cmake-build-debug/Makefile
rename to HW2/cmake-build-debug/Makefile
index d181146..19321a0 100644
--- a/dry/cmake-build-debug/Makefile
+++ b/HW2/cmake-build-debug/Makefile
@@ -67,10 +67,10 @@ RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E
 EQUALS = =
 
 # The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2"
 
 # The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug"
 
 #=============================================================================
 # Targets provided globally by CMake.
@@ -99,9 +99,9 @@ rebuild_cache/fast: rebuild_cache
 
 # The main all target
 all: cmake_check_build_system
-	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\progress.marks"
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles\progress.marks"
 	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 all
-	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\HW2\cmake-build-debug\CMakeFiles" 0
 .PHONY : all
 
 # The main clean target
@@ -130,71 +130,125 @@ depend:
 .PHONY : depend
 
 #=============================================================================
-# Target rules for targets named dry
+# Target rules for targets named HW2
 
 # Build rule for target.
-dry: cmake_check_build_system
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 dry
-.PHONY : dry
+HW2: cmake_check_build_system
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 HW2
+.PHONY : HW2
 
 # fast build rule for target.
-dry/fast:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
-.PHONY : dry/fast
+HW2/fast:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/build
+.PHONY : HW2/fast
 
-Pirate.obj: Pirate.cpp.obj
+Dry/Pirate.obj: Dry/Pirate.cpp.obj
 
-.PHONY : Pirate.obj
+.PHONY : Dry/Pirate.obj
 
 # target to build an object file
-Pirate.cpp.obj:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.obj
-.PHONY : Pirate.cpp.obj
+Dry/Pirate.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/Pirate.cpp.obj
+.PHONY : Dry/Pirate.cpp.obj
 
-Pirate.i: Pirate.cpp.i
+Dry/Pirate.i: Dry/Pirate.cpp.i
 
-.PHONY : Pirate.i
+.PHONY : Dry/Pirate.i
 
 # target to preprocess a source file
-Pirate.cpp.i:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.i
-.PHONY : Pirate.cpp.i
+Dry/Pirate.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/Pirate.cpp.i
+.PHONY : Dry/Pirate.cpp.i
 
-Pirate.s: Pirate.cpp.s
+Dry/Pirate.s: Dry/Pirate.cpp.s
 
-.PHONY : Pirate.s
+.PHONY : Dry/Pirate.s
 
 # target to generate assembly for a file
-Pirate.cpp.s:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.s
-.PHONY : Pirate.cpp.s
+Dry/Pirate.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/Pirate.cpp.s
+.PHONY : Dry/Pirate.cpp.s
 
-main.obj: main.cpp.obj
+Dry/main.obj: Dry/main.cpp.obj
 
-.PHONY : main.obj
+.PHONY : Dry/main.obj
 
 # target to build an object file
-main.cpp.obj:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.obj
-.PHONY : main.cpp.obj
+Dry/main.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.obj
+.PHONY : Dry/main.cpp.obj
 
-main.i: main.cpp.i
+Dry/main.i: Dry/main.cpp.i
 
-.PHONY : main.i
+.PHONY : Dry/main.i
 
 # target to preprocess a source file
-main.cpp.i:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.i
-.PHONY : main.cpp.i
+Dry/main.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.i
+.PHONY : Dry/main.cpp.i
 
-main.s: main.cpp.s
+Dry/main.s: Dry/main.cpp.s
 
-.PHONY : main.s
+.PHONY : Dry/main.s
 
 # target to generate assembly for a file
-main.cpp.s:
-	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.s
-.PHONY : main.cpp.s
+Dry/main.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Dry/main.cpp.s
+.PHONY : Dry/main.cpp.s
+
+Wet/Matrix.obj: Wet/Matrix.cpp.obj
+
+.PHONY : Wet/Matrix.obj
+
+# target to build an object file
+Wet/Matrix.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Matrix.cpp.obj
+.PHONY : Wet/Matrix.cpp.obj
+
+Wet/Matrix.i: Wet/Matrix.cpp.i
+
+.PHONY : Wet/Matrix.i
+
+# target to preprocess a source file
+Wet/Matrix.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Matrix.cpp.i
+.PHONY : Wet/Matrix.cpp.i
+
+Wet/Matrix.s: Wet/Matrix.cpp.s
+
+.PHONY : Wet/Matrix.s
+
+# target to generate assembly for a file
+Wet/Matrix.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Matrix.cpp.s
+.PHONY : Wet/Matrix.cpp.s
+
+Wet/Utilities.obj: Wet/Utilities.cpp.obj
+
+.PHONY : Wet/Utilities.obj
+
+# target to build an object file
+Wet/Utilities.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Utilities.cpp.obj
+.PHONY : Wet/Utilities.cpp.obj
+
+Wet/Utilities.i: Wet/Utilities.cpp.i
+
+.PHONY : Wet/Utilities.i
+
+# target to preprocess a source file
+Wet/Utilities.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Utilities.cpp.i
+.PHONY : Wet/Utilities.cpp.i
+
+Wet/Utilities.s: Wet/Utilities.cpp.s
+
+.PHONY : Wet/Utilities.s
+
+# target to generate assembly for a file
+Wet/Utilities.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\HW2.dir\build.make CMakeFiles/HW2.dir/Wet/Utilities.cpp.s
+.PHONY : Wet/Utilities.cpp.s
 
 # Help Target
 help:
@@ -204,13 +258,19 @@ help:
 	@echo ... depend
 	@echo ... edit_cache
 	@echo ... rebuild_cache
-	@echo ... dry
-	@echo ... Pirate.obj
-	@echo ... Pirate.i
-	@echo ... Pirate.s
-	@echo ... main.obj
-	@echo ... main.i
-	@echo ... main.s
+	@echo ... HW2
+	@echo ... Dry/Pirate.obj
+	@echo ... Dry/Pirate.i
+	@echo ... Dry/Pirate.s
+	@echo ... Dry/main.obj
+	@echo ... Dry/main.i
+	@echo ... Dry/main.s
+	@echo ... Wet/Matrix.obj
+	@echo ... Wet/Matrix.i
+	@echo ... Wet/Matrix.s
+	@echo ... Wet/Utilities.obj
+	@echo ... Wet/Utilities.i
+	@echo ... Wet/Utilities.s
 .PHONY : help
 
 
diff --git a/dry/cmake-build-debug/cmake_install.cmake b/HW2/cmake-build-debug/cmake_install.cmake
similarity index 89%
rename from dry/cmake-build-debug/cmake_install.cmake
rename to HW2/cmake-build-debug/cmake_install.cmake
index 472ee00..f38fd87 100644
--- a/dry/cmake-build-debug/cmake_install.cmake
+++ b/HW2/cmake-build-debug/cmake_install.cmake
@@ -1,8 +1,8 @@
-# Install script for directory: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+# Install script for directory: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2
 
 # Set the install prefix
 if(NOT DEFINED CMAKE_INSTALL_PREFIX)
-  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/dry")
+  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/HW2")
 endif()
 string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
 
@@ -40,5 +40,5 @@ endif()
 
 string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
        "${CMAKE_INSTALL_MANIFEST_FILES}")
-file(WRITE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
+file(WRITE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/HW2/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
      "${CMAKE_INSTALL_MANIFEST_CONTENT}")
diff --git a/dry/.idea/misc.xml b/dry/.idea/misc.xml
deleted file mode 100644
index 79b3c94..0000000
--- a/dry/.idea/misc.xml
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
-</project>
\ No newline at end of file
diff --git a/dry/.idea/modules.xml b/dry/.idea/modules.xml
deleted file mode 100644
index 4700199..0000000
--- a/dry/.idea/modules.xml
+++ /dev/null
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/dry.iml" filepath="$PROJECT_DIR$/.idea/dry.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
diff --git a/dry/.idea/vcs.xml b/dry/.idea/vcs.xml
deleted file mode 100644
index 6c0b863..0000000
--- a/dry/.idea/vcs.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
diff --git a/dry/.idea/workspace.xml b/dry/.idea/workspace.xml
deleted file mode 100644
index d5fe9c4..0000000
--- a/dry/.idea/workspace.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="CMakeSettings">
-    <configurations>
-      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
-    </configurations>
-  </component>
-  <component name="RunManager">
-    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
-      <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
-    <configuration name="dry" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="dry" TARGET_NAME="dry" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="dry" RUN_TARGET_NAME="dry">
-      <method v="2">
-        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
-      <method v="2">
-        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
-  </component>
-</project>
\ No newline at end of file
diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
deleted file mode 100644
index 6a08078..0000000
--- a/dry/CMakeLists.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-cmake_minimum_required(VERSION 3.17)
-project(dry)
-
-set(CMAKE_CXX_STANDARD 17)
-
-add_executable(dry main.cpp Pirate.cpp Pirate.h)
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
deleted file mode 100644
index 3e82961..0000000
--- a/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/edit_cache.dir
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/rebuild_cache.dir
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
deleted file mode 100644
index dcff284..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+++ /dev/null
@@ -1,24 +0,0 @@
-#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
-
-#IncludeRegexScan: ^.*$
-
-#IncludeRegexComplain: ^$
-
-#IncludeRegexTransform: 
-
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-Pirate.h
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-iostream
--
-
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
-iostream
--
-Pirate.h
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-cstring
--
-
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
deleted file mode 100644
index 0f0b9bc..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
+++ /dev/null
@@ -1,21 +0,0 @@
-# The set of languages for which implicit dependencies are needed:
-set(CMAKE_DEPENDS_LANGUAGES
-  "CXX"
-  )
-# The set of files for implicit dependencies of each language:
-set(CMAKE_DEPENDS_CHECK_CXX
-  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj"
-  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj"
-  )
-set(CMAKE_CXX_COMPILER_ID "GNU")
-
-# The include file search paths:
-set(CMAKE_CXX_TARGET_INCLUDE_PATH
-  )
-
-# Targets to which this target links.
-set(CMAKE_TARGET_LINKED_INFO_FILES
-  )
-
-# Fortran module output directory.
-set(CMAKE_Fortran_TARGET_MODULE_DIR "")
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
deleted file mode 100644
index 62c9b3e..0000000
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj and /dev/null differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
deleted file mode 100644
index 7086ad8..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
+++ /dev/null
@@ -1,134 +0,0 @@
-# CMAKE generated file: DO NOT EDIT!
-# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-
-# Delete rule output on recipe failure.
-.DELETE_ON_ERROR:
-
-
-#=============================================================================
-# Special targets provided by cmake.
-
-# Disable implicit rules so canonical targets will work.
-.SUFFIXES:
-
-
-# Disable VCS-based implicit rules.
-% : %,v
-
-
-# Disable VCS-based implicit rules.
-% : RCS/%
-
-
-# Disable VCS-based implicit rules.
-% : RCS/%,v
-
-
-# Disable VCS-based implicit rules.
-% : SCCS/s.%
-
-
-# Disable VCS-based implicit rules.
-% : s.%
-
-
-.SUFFIXES: .hpux_make_needs_suffix_list
-
-
-# Command-line flag to silence nested $(MAKE).
-$(VERBOSE)MAKESILENT = -s
-
-# Suppress display of executed commands.
-$(VERBOSE).SILENT:
-
-
-# A target that is always out of date.
-cmake_force:
-
-.PHONY : cmake_force
-
-#=============================================================================
-# Set environment variables for the build.
-
-SHELL = cmd.exe
-
-# The CMake executable.
-CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
-
-# The command to remove a file.
-RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
-
-# Escaping for special characters.
-EQUALS = =
-
-# The top-level source directory on which CMake was run.
-CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
-
-# The top-level build directory on which CMake was run.
-CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
-
-# Include any dependencies generated for this target.
-include CMakeFiles/dry.dir/depend.make
-
-# Include the progress variables for this target.
-include CMakeFiles/dry.dir/progress.make
-
-# Include the compile flags for this target's objects.
-include CMakeFiles/dry.dir/flags.make
-
-CMakeFiles/dry.dir/main.cpp.obj: CMakeFiles/dry.dir/flags.make
-CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/dry.dir/main.cpp.obj"
-	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp"
-
-CMakeFiles/dry.dir/main.cpp.i: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/main.cpp.i"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" > CMakeFiles\dry.dir\main.cpp.i
-
-CMakeFiles/dry.dir/main.cpp.s: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/main.cpp.s"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" -o CMakeFiles\dry.dir\main.cpp.s
-
-CMakeFiles/dry.dir/Pirate.cpp.obj: CMakeFiles/dry.dir/flags.make
-CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/dry.dir/Pirate.cpp.obj"
-	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp"
-
-CMakeFiles/dry.dir/Pirate.cpp.i: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/Pirate.cpp.i"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" > CMakeFiles\dry.dir\Pirate.cpp.i
-
-CMakeFiles/dry.dir/Pirate.cpp.s: cmake_force
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/Pirate.cpp.s"
-	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" -o CMakeFiles\dry.dir\Pirate.cpp.s
-
-# Object files for target dry
-dry_OBJECTS = \
-"CMakeFiles/dry.dir/main.cpp.obj" \
-"CMakeFiles/dry.dir/Pirate.cpp.obj"
-
-# External object files for target dry
-dry_EXTERNAL_OBJECTS =
-
-dry.exe: CMakeFiles/dry.dir/main.cpp.obj
-dry.exe: CMakeFiles/dry.dir/Pirate.cpp.obj
-dry.exe: CMakeFiles/dry.dir/build.make
-dry.exe: CMakeFiles/dry.dir/linklibs.rsp
-dry.exe: CMakeFiles/dry.dir/objects1.rsp
-dry.exe: CMakeFiles/dry.dir/link.txt
-	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Linking CXX executable dry.exe"
-	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\dry.dir\link.txt --verbose=$(VERBOSE)
-
-# Rule to build all files generated by this target.
-CMakeFiles/dry.dir/build: dry.exe
-
-.PHONY : CMakeFiles/dry.dir/build
-
-CMakeFiles/dry.dir/clean:
-	$(CMAKE_COMMAND) -P CMakeFiles\dry.dir\cmake_clean.cmake
-.PHONY : CMakeFiles/dry.dir/clean
-
-CMakeFiles/dry.dir/depend:
-	$(CMAKE_COMMAND) -E cmake_depends "MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\dry.dir\DependInfo.cmake" --color=$(COLOR)
-.PHONY : CMakeFiles/dry.dir/depend
-
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
deleted file mode 100644
index d58f6e3..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
+++ /dev/null
@@ -1,13 +0,0 @@
-file(REMOVE_RECURSE
-  "CMakeFiles/dry.dir/Pirate.cpp.obj"
-  "CMakeFiles/dry.dir/main.cpp.obj"
-  "dry.exe"
-  "dry.exe.manifest"
-  "dry.pdb"
-  "libdry.dll.a"
-)
-
-# Per-language clean rules from dependency scanning.
-foreach(lang CXX)
-  include(CMakeFiles/dry.dir/cmake_clean_${lang}.cmake OPTIONAL)
-endforeach()
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
deleted file mode 100644
index d191e23..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+++ /dev/null
@@ -1,9 +0,0 @@
-# CMAKE generated file: DO NOT EDIT!
-# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-
-CMakeFiles/dry.dir/Pirate.cpp.obj
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-CMakeFiles/dry.dir/main.cpp.obj
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
deleted file mode 100644
index 19c8fb9..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+++ /dev/null
@@ -1,9 +0,0 @@
-# CMAKE generated file: DO NOT EDIT!
-# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-
-CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
-CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
-
-CMakeFiles/dry.dir/main.cpp.obj: ../Pirate.h
-CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
-
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
deleted file mode 100644
index 81d1196..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
+++ /dev/null
@@ -1,3 +0,0 @@
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\dry.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\dry.dir/objects.a @CMakeFiles\dry.dir\objects1.rsp
-C:\TDM-GCC-64\bin\g++.exe -g   -Wl,--whole-archive CMakeFiles\dry.dir/objects.a -Wl,--no-whole-archive  -o dry.exe -Wl,--out-implib,libdry.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\dry.dir\linklibs.rsp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
deleted file mode 100644
index a85a708..0000000
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj and /dev/null differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
deleted file mode 100644
index 573a4d5..0000000
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a and /dev/null differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
deleted file mode 100644
index a83fd1c..0000000
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
+++ /dev/null
@@ -1 +0,0 @@
-CMakeFiles/dry.dir/main.cpp.obj CMakeFiles/dry.dir/Pirate.cpp.obj
diff --git a/dry/cmake-build-debug/CMakeFiles/progress.marks b/dry/cmake-build-debug/CMakeFiles/progress.marks
deleted file mode 100644
index 00750ed..0000000
--- a/dry/cmake-build-debug/CMakeFiles/progress.marks
+++ /dev/null
@@ -1 +0,0 @@
-3
diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
deleted file mode 100644
index c2bf35d..0000000
Binary files a/dry/cmake-build-debug/dry.exe and /dev/null differ
diff --git a/dry/log.txt b/dry/log.txt
deleted file mode 100644
index ea22256..0000000
--- a/dry/log.txt
+++ /dev/null
@@ -1,4407 +0,0 @@
-commit 6aab0ebca949f9d5671e40b3c8fd1b71379a4908
-Merge: b3ba67d 67a9926
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sun Dec 29 00:16:45 2024 +0200
-
-    Merge branch 'devil_fruit'
-
-commit b3ba67d97db771e212417253b02af29f761b363f
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sun Dec 29 00:00:44 2024 +0200
-
-    3.3 - extending the program
-
-diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
-index c96892e..fc56fe0 100755
---- a/dry/Pirate.cpp
-+++ b/dry/Pirate.cpp
-@@ -2,20 +2,27 @@
- #include "Pirate.h"
- 
- 
--Pirate::Pirate(const string& name): name(name) {}
-+Pirate::Pirate(const string& name,int bounty): name(name) ,bounty(bounty){}
- 
- 
- void Pirate::setName(const string& name){
-     this->name = name;
- }
- 
-+void Pirate::setBounty(int bounty) {
-+    this->bounty = bounty;
-+}
-+
-+int Pirate::getBounty() const {
-+    return bounty;
-+}
- 
- std::string Pirate::getName(){
-     return name;
- }
- 
- 
--std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
--    os << pirate.name;
-+std::ostream &operator<<(std::ostream &os, const Pirate &pirate) {
-+    os << "Pirate: " << pirate.name << ", Bounty: " << pirate.bounty; // Updated output
-     return os;
- }
-diff --git a/dry/Pirate.h b/dry/Pirate.h
-index 39a883a..2ec3a2d 100755
---- a/dry/Pirate.h
-+++ b/dry/Pirate.h
-@@ -8,9 +8,11 @@ using std::string;
- class Pirate {
- private:
-     string name;
-+    int bounty;
-+
- 
- public:
--    Pirate(const string& name);
-+    Pirate(const string& name,int bounty);
- 
-     Pirate() = default;
- 
-@@ -19,6 +21,8 @@ public:
-     void setName(const string& name);
- 
-     string getName();
-+    void setBounty(int bounty);
- 
-+    int getBounty() const;
-     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
- };
-diff --git a/dry/main.cpp b/dry/main.cpp
-index ea71e37..9261be1 100755
---- a/dry/main.cpp
-+++ b/dry/main.cpp
-@@ -7,8 +7,8 @@ using std::cout, std::endl;
- 
- int main() {
- 
--    Pirate luffy("Luffy");
--    Pirate zoro("Zoro");
-+    Pirate luffy("Luffy",1000000);
-+    Pirate zoro("Zoro",500000);
- 
-     const int crewSize = 2;
- 
-
-commit 5fdae2d23c4f337cd61a9eaf0c1eef526a1ec88c
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sat Dec 28 23:51:00 2024 +0200
-
-    switching to c++ 17
-
-diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
-index 1d63d19..6a08078 100644
---- a/dry/CMakeLists.txt
-+++ b/dry/CMakeLists.txt
-@@ -1,6 +1,6 @@
- cmake_minimum_required(VERSION 3.17)
- project(dry)
- 
--set(CMAKE_CXX_STANDARD 14)
-+set(CMAKE_CXX_STANDARD 17)
- 
- add_executable(dry main.cpp Pirate.cpp Pirate.h)
-\ No newline at end of file
-diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
-deleted file mode 100644
-index 7b4d68d..0000000
---- a/dry/cmake-build-debug/CMakeFiles/Progress/1
-+++ /dev/null
-@@ -1 +0,0 @@
--empty
-\ No newline at end of file
-diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
-deleted file mode 100644
-index 00750ed..0000000
---- a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
-+++ /dev/null
-@@ -1 +0,0 @@
--3
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-index 1842398..dcff284 100644
---- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-@@ -6,6 +6,10 @@
- 
- #IncludeRegexTransform: 
- 
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-+Pirate.h
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
- iostream
- -
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
-index 458c3e0..656acfb 100644
-Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
-index dee4354..d1f851f 100644
---- a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
-@@ -2,7 +2,7 @@
- # Generated by "MinGW Makefiles" Generator, CMake Version 3.17
- 
- # compile CXX with C:/TDM-GCC-64/bin/g++.exe
--CXX_FLAGS = -g   -std=gnu++14
-+CXX_FLAGS = -g   -std=gnu++17
- 
- CXX_DEFINES = 
- 
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
-new file mode 100644
-index 0000000..8b64ffd
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
-index 7fd194a..0a3d353 100644
-Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
-diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
-index 768c9c7..795c51e 100644
-Binary files a/dry/cmake-build-debug/dry.exe and b/dry/cmake-build-debug/dry.exe differ
-
-commit ada39baffc007a678dc86423012942a6990f86e2
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sat Dec 28 23:50:51 2024 +0200
-
-    first fix - adding default cto'r
-
-diff --git a/dry/Pirate.h b/dry/Pirate.h
-index 7769667..39a883a 100755
---- a/dry/Pirate.h
-+++ b/dry/Pirate.h
-@@ -12,6 +12,8 @@ private:
- public:
-     Pirate(const string& name);
- 
-+    Pirate() = default;
-+
-     ~Pirate() = default;
- 
-     void setName(const string& name);
-
-commit 3d05a61fb9c3223fd7d16e60b9ba9884924e19e6
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sat Dec 28 23:48:25 2024 +0200
-
-    revert changes in main
-
-diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
-new file mode 100644
-index 0000000..7b4d68d
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/Progress/1
-@@ -0,0 +1 @@
-+empty
-\ No newline at end of file
-diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
-new file mode 100644
-index 0000000..00750ed
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
-@@ -0,0 +1 @@
-+3
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-index 79f3388..1842398 100644
---- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-@@ -6,11 +6,15 @@
- 
- #IncludeRegexTransform: 
- 
--C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
--Pirate.h
- C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+iostream
-+-
- 
--C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
- iostream
- -
-+Pirate.h
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+cstring
-+-
- 
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
-index 51eeb9b..d191e23 100644
---- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
-@@ -5,4 +5,5 @@ CMakeFiles/dry.dir/Pirate.cpp.obj
-  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
- CMakeFiles/dry.dir/main.cpp.obj
-+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
-index 3b9c994..19c8fb9 100644
---- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
-@@ -4,5 +4,6 @@
- CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
- CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
- 
-+CMakeFiles/dry.dir/main.cpp.obj: ../Pirate.h
- CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
- 
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
-deleted file mode 100644
-index 052a66b..0000000
-Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj and /dev/null differ
-diff --git a/dry/main.cpp b/dry/main.cpp
-index bc8f460..ea71e37 100755
---- a/dry/main.cpp
-+++ b/dry/main.cpp
-@@ -1,6 +1,25 @@
- #include <iostream>
-+#include "Pirate.h"
-+#include <cstring>
-+
-+using std::cout, std::endl;
-+
- 
- int main() {
--    std::cout << "Hello, World!" << std::endl;
-+
-+    Pirate luffy("Luffy");
-+    Pirate zoro("Zoro");
-+
-+    const int crewSize = 2;
-+
-+    Pirate strawHatCrew[2];
-+    strawHatCrew[0] = luffy;
-+    strawHatCrew[1] = zoro;
-+
-+    cout << "Straw Hat crew contains:" << endl;
-+    for (int i = 0; i < crewSize; i++) {
-+        cout << strawHatCrew[i] << endl;
-+    }
-+
-     return 0;
--}
-+}
-\ No newline at end of file
-
-commit e7b2c938044dcdb20c43620a9c9810694ad6c907
-Author: nooryass <nooryassin059@gmail.com>
-Date:   Sat Dec 28 23:46:11 2024 +0200
-
-    init
-
-diff --git a/.idea/HW2_2425A.iml b/.idea/HW2_2425A.iml
-new file mode 100644
-index 0000000..bc2cd87
---- /dev/null
-+++ b/.idea/HW2_2425A.iml
-@@ -0,0 +1,8 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<module type="CPP_MODULE" version="4">
-+  <component name="NewModuleRootManager">
-+    <content url="file://$MODULE_DIR$" />
-+    <orderEntry type="inheritedJdk" />
-+    <orderEntry type="sourceFolder" forTests="false" />
-+  </component>
-+</module>
-\ No newline at end of file
-diff --git a/.idea/modules.xml b/.idea/modules.xml
-new file mode 100644
-index 0000000..9c699dc
---- /dev/null
-+++ b/.idea/modules.xml
-@@ -0,0 +1,8 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="ProjectModuleManager">
-+    <modules>
-+      <module fileurl="file://$PROJECT_DIR$/.idea/HW2_2425A.iml" filepath="$PROJECT_DIR$/.idea/HW2_2425A.iml" />
-+    </modules>
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/.idea/vcs.xml b/.idea/vcs.xml
-new file mode 100644
-index 0000000..94a25f7
---- /dev/null
-+++ b/.idea/vcs.xml
-@@ -0,0 +1,6 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="VcsDirectoryMappings">
-+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/.idea/workspace.xml b/.idea/workspace.xml
-new file mode 100644
-index 0000000..681113a
---- /dev/null
-+++ b/.idea/workspace.xml
-@@ -0,0 +1,68 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
-+    <generated />
-+  </component>
-+  <component name="CMakeSettings">
-+    <configurations>
-+      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
-+    </configurations>
-+  </component>
-+  <component name="ChangeListManager">
-+    <list default="true" id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
-+    <option name="SHOW_DIALOG" value="false" />
-+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-+    <option name="LAST_RESOLUTION" value="IGNORE" />
-+  </component>
-+  <component name="ClangdSettings">
-+    <option name="formatViaClangd" value="false" />
-+  </component>
-+  <component name="Git.Settings">
-+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
-+  </component>
-+  <component name="ProjectId" id="2qrXyuysjftbJsYtr5fXKioj3ZV" />
-+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
-+  <component name="ProjectViewState">
-+    <option name="hideEmptyMiddlePackages" value="true" />
-+    <option name="showLibraryContents" value="true" />
-+  </component>
-+  <component name="PropertiesComponent">
-+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
-+    <property name="WebServerToolWindowFactoryState" value="false" />
-+    <property name="cf.first.check.clang-format" value="false" />
-+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
-+  </component>
-+  <component name="RunManager">
-+    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
-+      <method v="2">
-+        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-+      </method>
-+    </configuration>
-+  </component>
-+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-+  <component name="TaskManager">
-+    <task active="true" id="Default" summary="Default task">
-+      <changelist id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
-+      <created>1735421926159</created>
-+      <option name="number" value="Default" />
-+      <option name="presentableId" value="Default" />
-+      <updated>1735421926159</updated>
-+      <workItem from="1735421929242" duration="213000" />
-+    </task>
-+    <servers />
-+  </component>
-+  <component name="TypeScriptGeneratedFilesManager">
-+    <option name="version" value="3" />
-+  </component>
-+  <component name="WindowStateProjectService">
-+    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1735421978514">
-+      <screen x="0" y="0" width="1536" height="824" />
-+    </state>
-+    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1536.824@0.0.1536.824" timestamp="1735421978514" />
-+    <state x="549" y="153" key="FileChooserDialogImpl" timestamp="1735422132361">
-+      <screen x="0" y="0" width="1536" height="824" />
-+    </state>
-+    <state x="549" y="153" key="FileChooserDialogImpl/0.0.1536.824@0.0.1536.824" timestamp="1735422132361" />
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/dry/.idea/.gitignore b/dry/.idea/.gitignore
-new file mode 100644
-index 0000000..634d575
---- /dev/null
-+++ b/dry/.idea/.gitignore
-@@ -0,0 +1,8 @@
-+# Default ignored files
-+/shelf/
-+/workspace.xml
-+# Datasource local storage ignored files
-+/../../../../../../../../../:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\.idea/dataSources/
-+/dataSources.local.xml
-+# Editor-based HTTP Client requests
-+/httpRequests/
-diff --git a/dry/.idea/dry.iml b/dry/.idea/dry.iml
-new file mode 100644
-index 0000000..f08604b
---- /dev/null
-+++ b/dry/.idea/dry.iml
-@@ -0,0 +1,2 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<module classpath="CMake" type="CPP_MODULE" version="4" />
-\ No newline at end of file
-diff --git a/dry/.idea/misc.xml b/dry/.idea/misc.xml
-new file mode 100644
-index 0000000..79b3c94
---- /dev/null
-+++ b/dry/.idea/misc.xml
-@@ -0,0 +1,4 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
-+</project>
-\ No newline at end of file
-diff --git a/dry/.idea/modules.xml b/dry/.idea/modules.xml
-new file mode 100644
-index 0000000..4700199
---- /dev/null
-+++ b/dry/.idea/modules.xml
-@@ -0,0 +1,8 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="ProjectModuleManager">
-+    <modules>
-+      <module fileurl="file://$PROJECT_DIR$/.idea/dry.iml" filepath="$PROJECT_DIR$/.idea/dry.iml" />
-+    </modules>
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/dry/.idea/vcs.xml b/dry/.idea/vcs.xml
-new file mode 100644
-index 0000000..6c0b863
---- /dev/null
-+++ b/dry/.idea/vcs.xml
-@@ -0,0 +1,6 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<project version="4">
-+  <component name="VcsDirectoryMappings">
-+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
-+  </component>
-+</project>
-\ No newline at end of file
-diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
-new file mode 100644
-index 0000000..1d63d19
---- /dev/null
-+++ b/dry/CMakeLists.txt
-@@ -0,0 +1,6 @@
-+cmake_minimum_required(VERSION 3.17)
-+project(dry)
-+
-+set(CMAKE_CXX_STANDARD 14)
-+
-+add_executable(dry main.cpp Pirate.cpp Pirate.h)
-\ No newline at end of file
-diff --git a/dry/cmake-build-debug/CMakeCache.txt b/dry/cmake-build-debug/CMakeCache.txt
-new file mode 100644
-index 0000000..d275abe
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeCache.txt
-@@ -0,0 +1,420 @@
-+# This is the CMakeCache file.
-+# For build in directory: c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
-+# It was generated by CMake: C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
-+# You can edit this file to change values found and used by cmake.
-+# If you do not want to change any of the values, simply exit the editor.
-+# If you do want to change a value, simply edit, save, and exit the editor.
-+# The syntax for the file is as follows:
-+# KEY:TYPE=VALUE
-+# KEY is the name of a variable in the cache.
-+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
-+# VALUE is the current value for the KEY.
-+
-+########################
-+# EXTERNAL cache entries
-+########################
-+
-+//Path to a program.
-+CMAKE_ADDR2LINE:FILEPATH=C:/TDM-GCC-64/bin/addr2line.exe
-+
-+//Path to a program.
-+CMAKE_AR:FILEPATH=C:/TDM-GCC-64/bin/ar.exe
-+
-+//Choose the type of build, options are: None Debug Release RelWithDebInfo
-+// MinSizeRel ...
-+CMAKE_BUILD_TYPE:STRING=Debug
-+
-+//Id string of the compiler for the CodeBlocks IDE. Automatically
-+// detected when left empty
-+CMAKE_CODEBLOCKS_COMPILER_ID:STRING=
-+
-+//The CodeBlocks executable
-+CMAKE_CODEBLOCKS_EXECUTABLE:FILEPATH=CMAKE_CODEBLOCKS_EXECUTABLE-NOTFOUND
-+
-+//Additional command line arguments when CodeBlocks invokes make.
-+// Enter e.g. -j<some_number> to get parallel builds
-+CMAKE_CODEBLOCKS_MAKE_ARGUMENTS:STRING=
-+
-+//Enable/Disable color output during build.
-+CMAKE_COLOR_MAKEFILE:BOOL=ON
-+
-+//CXX compiler
-+CMAKE_CXX_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/g++.exe
-+
-+//A wrapper around 'ar' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_CXX_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
-+
-+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
-+
-+//Flags used by the CXX compiler during all build types.
-+CMAKE_CXX_FLAGS:STRING=
-+
-+//Flags used by the CXX compiler during DEBUG builds.
-+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the CXX compiler during MINSIZEREL builds.
-+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELEASE builds.
-+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//Libraries linked by default with all C++ applications.
-+CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
-+
-+//C compiler
-+CMAKE_C_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/gcc.exe
-+
-+//A wrapper around 'ar' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_C_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
-+
-+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
-+// for the GCC compiler
-+CMAKE_C_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
-+
-+//Flags used by the C compiler during all build types.
-+CMAKE_C_FLAGS:STRING=
-+
-+//Flags used by the C compiler during DEBUG builds.
-+CMAKE_C_FLAGS_DEBUG:STRING=-g
-+
-+//Flags used by the C compiler during MINSIZEREL builds.
-+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
-+
-+//Flags used by the C compiler during RELEASE builds.
-+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
-+
-+//Flags used by the C compiler during RELWITHDEBINFO builds.
-+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
-+
-+//Libraries linked by default with all C applications.
-+CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
-+
-+//Path to a program.
-+CMAKE_DLLTOOL:FILEPATH=C:/TDM-GCC-64/bin/dlltool.exe
-+
-+//Flags used by the linker during all build types.
-+CMAKE_EXE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during DEBUG builds.
-+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during MINSIZEREL builds.
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during RELEASE builds.
-+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during RELWITHDEBINFO builds.
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Convert GNU import libraries to MS format (requires Visual Studio)
-+CMAKE_GNUtoMS:BOOL=OFF
-+
-+//Install path prefix, prepended onto install directories.
-+CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/dry
-+
-+//Path to a program.
-+CMAKE_LINKER:FILEPATH=C:/TDM-GCC-64/bin/ld.exe
-+
-+//Path to a program.
-+CMAKE_MAKE_PROGRAM:FILEPATH=C:/TDM-GCC-64/bin/mingw32-make.exe
-+
-+//Flags used by the linker during the creation of modules during
-+// all build types.
-+CMAKE_MODULE_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// DEBUG builds.
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// MINSIZEREL builds.
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELEASE builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of modules during
-+// RELWITHDEBINFO builds.
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_NM:FILEPATH=C:/TDM-GCC-64/bin/nm.exe
-+
-+//Path to a program.
-+CMAKE_OBJCOPY:FILEPATH=C:/TDM-GCC-64/bin/objcopy.exe
-+
-+//Path to a program.
-+CMAKE_OBJDUMP:FILEPATH=C:/TDM-GCC-64/bin/objdump.exe
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_DESCRIPTION:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
-+
-+//Value Computed by CMake
-+CMAKE_PROJECT_NAME:STATIC=dry
-+
-+//Path to a program.
-+CMAKE_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/ranlib.exe
-+
-+//RC compiler
-+CMAKE_RC_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/windres.exe
-+
-+//Flags for Windows Resource Compiler during all build types.
-+CMAKE_RC_FLAGS:STRING=
-+
-+//Flags for Windows Resource Compiler during DEBUG builds.
-+CMAKE_RC_FLAGS_DEBUG:STRING=
-+
-+//Flags for Windows Resource Compiler during MINSIZEREL builds.
-+CMAKE_RC_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags for Windows Resource Compiler during RELEASE builds.
-+CMAKE_RC_FLAGS_RELEASE:STRING=
-+
-+//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
-+CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_READELF:FILEPATH=C:/TDM-GCC-64/bin/readelf.exe
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during all build types.
-+CMAKE_SHARED_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during DEBUG builds.
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during MINSIZEREL builds.
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELEASE builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of shared libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//If set, runtime paths are not added when installing shared libraries,
-+// but are added when building.
-+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
-+
-+//If set, runtime paths are not added when using shared libraries.
-+CMAKE_SKIP_RPATH:BOOL=NO
-+
-+//Flags used by the linker during the creation of static libraries
-+// during all build types.
-+CMAKE_STATIC_LINKER_FLAGS:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during DEBUG builds.
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during MINSIZEREL builds.
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELEASE builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
-+
-+//Flags used by the linker during the creation of static libraries
-+// during RELWITHDEBINFO builds.
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
-+
-+//Path to a program.
-+CMAKE_STRIP:FILEPATH=C:/TDM-GCC-64/bin/strip.exe
-+
-+//If this value is on, makefiles will be generated without the
-+// .SILENT directive, and all commands will be echoed to the console
-+// during the make.  This is useful for debugging only. With Visual
-+// Studio IDE projects all commands are done without /nologo.
-+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
-+
-+//Value Computed by CMake
-+dry_BINARY_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
-+
-+//Value Computed by CMake
-+dry_SOURCE_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
-+
-+
-+########################
-+# INTERNAL cache entries
-+########################
-+
-+//ADVANCED property for variable: CMAKE_ADDR2LINE
-+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_AR
-+CMAKE_AR-ADVANCED:INTERNAL=1
-+//This is the directory where this CMakeCache.txt was created
-+CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
-+//Major version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
-+//Minor version of cmake used to create the current loaded cache
-+CMAKE_CACHE_MINOR_VERSION:INTERNAL=17
-+//Patch version of cmake used to create the current loaded cache
-+CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
-+//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
-+CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
-+//Path to CMake executable.
-+CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
-+//Path to cpack program executable.
-+CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cpack.exe
-+//Path to ctest program executable.
-+CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/ctest.exe
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER
-+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
-+CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
-+CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS
-+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
-+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
-+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
-+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
-+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
-+CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER
-+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER_AR
-+CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
-+CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS
-+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
-+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
-+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
-+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
-+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
-+CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_DLLTOOL
-+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
-+//Executable file format
-+CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
-+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
-+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
-+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//Name of external makefile project generator.
-+CMAKE_EXTRA_GENERATOR:INTERNAL=CodeBlocks
-+//CXX compiler system defined macros
-+CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1;__STDC__;1;__cplusplus;201402L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__GNUG__;9;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_WEAK__;1;__DEPRECATED;1;__GXX_RTTI;1;__cpp_rtti;199711;__GXX_EXPERIMENTAL_CXX0X__;1;__cpp_binary_literals;201304;__cpp_hex_float;201603;__cpp_runtime_arrays;198712;__cpp_unicode_characters;200704;__cpp_raw_strings;200710;__cpp_unicode_literals;200710;__cpp_user_defined_literals;200809;__cpp_lambdas;200907;__cpp_range_based_for;200907;__cpp_static_assert;200410;__cpp_decltype;200707;__cpp_attributes;200809;__cpp_rvalue_reference;200610;__cpp_rvalue_references;200610;__cpp_variadic_templates;200704;__cpp_initializer_lists;200806;__cpp_delegating_constructors;200604;__cpp_nsdmi;200809;__cpp_inheriting_constructors;201511;__cpp_ref_qualifiers;200710;__cpp_alias_templates;200704;__cpp_return_type_deduction;201304;__cpp_init_captures;201304;__cpp_generic_lambdas;201304;__cpp_constexpr;201304;__cpp_decltype_auto;201304;__cpp_aggregate_nsdmi;201304;__cpp_variable_templates;201304;__cpp_digit_separators;201309;__cpp_sized_deallocation;201309;__cpp_threadsafe_static_init;200806;__EXCEPTIONS;1;__cpp_exceptions;199711;__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__GLIBCXX_TYPE_INT_N_0;__int128;__GLIBCXX_BITSIZE_INT_N_0;128;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;double(1.79769313486231570814527423731704357e+308L);__DBL_MIN__;double(2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;double(2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;double(4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__WCHAR_UNSIGNED__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
-+//CXX compiler system include directories
-+CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
-+//C compiler system defined macros
-+CMAKE_EXTRA_GENERATOR_C_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
-+//C compiler system include directories
-+CMAKE_EXTRA_GENERATOR_C_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
-+//Name of generator.
-+CMAKE_GENERATOR:INTERNAL=MinGW Makefiles
-+//Generator instance identifier.
-+CMAKE_GENERATOR_INSTANCE:INTERNAL=
-+//Name of generator platform.
-+CMAKE_GENERATOR_PLATFORM:INTERNAL=
-+//Name of generator toolset.
-+CMAKE_GENERATOR_TOOLSET:INTERNAL=
-+//Source directory with the top level CMakeLists.txt file for this
-+// project
-+CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
-+//ADVANCED property for variable: CMAKE_LINKER
-+CMAKE_LINKER-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
-+CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
-+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
-+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
-+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
-+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_NM
-+CMAKE_NM-ADVANCED:INTERNAL=1
-+//number of local generators
-+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJCOPY
-+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_OBJDUMP
-+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
-+//Platform information initialized
-+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RANLIB
-+CMAKE_RANLIB-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_COMPILER
-+CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
-+CMAKE_RC_COMPILER_WORKS:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS
-+CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
-+CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
-+CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
-+CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
-+CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_READELF
-+CMAKE_READELF-ADVANCED:INTERNAL=1
-+//Path to CMake installation.
-+CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
-+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
-+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
-+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
-+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
-+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_SKIP_RPATH
-+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
-+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
-+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
-+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
-+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
-+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_STRIP
-+CMAKE_STRIP-ADVANCED:INTERNAL=1
-+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
-+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
-new file mode 100644
-index 0000000..3b86b58
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
-@@ -0,0 +1,76 @@
-+set(CMAKE_C_COMPILER "C:/TDM-GCC-64/bin/gcc.exe")
-+set(CMAKE_C_COMPILER_ARG1 "")
-+set(CMAKE_C_COMPILER_ID "GNU")
-+set(CMAKE_C_COMPILER_VERSION "9.2.0")
-+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_C_COMPILER_WRAPPER "")
-+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")
-+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert")
-+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
-+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
-+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
-+
-+set(CMAKE_C_PLATFORM_ID "MinGW")
-+set(CMAKE_C_SIMULATE_ID "")
-+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")
-+set(CMAKE_C_SIMULATE_VERSION "")
-+
-+
-+
-+set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
-+set(CMAKE_C_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
-+set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
-+set(CMAKE_C_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
-+set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
-+set(CMAKE_MT "")
-+set(CMAKE_COMPILER_IS_GNUCC 1)
-+set(CMAKE_C_COMPILER_LOADED 1)
-+set(CMAKE_C_COMPILER_WORKS TRUE)
-+set(CMAKE_C_ABI_COMPILED TRUE)
-+set(CMAKE_COMPILER_IS_MINGW 1)
-+set(CMAKE_COMPILER_IS_CYGWIN )
-+if(CMAKE_COMPILER_IS_CYGWIN)
-+  set(CYGWIN 1)
-+  set(UNIX 1)
-+endif()
-+
-+set(CMAKE_C_COMPILER_ENV_VAR "CC")
-+
-+if(CMAKE_COMPILER_IS_MINGW)
-+  set(MINGW 1)
-+endif()
-+set(CMAKE_C_COMPILER_ID_RUN 1)
-+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
-+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+set(CMAKE_C_LINKER_PREFERENCE 10)
-+
-+# Save compiler ABI information.
-+set(CMAKE_C_SIZEOF_DATA_PTR "8")
-+set(CMAKE_C_COMPILER_ABI "")
-+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_C_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_C_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_C_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
-+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
-+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
-+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
-new file mode 100644
-index 0000000..89fc1fb
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
-@@ -0,0 +1,88 @@
-+set(CMAKE_CXX_COMPILER "C:/TDM-GCC-64/bin/g++.exe")
-+set(CMAKE_CXX_COMPILER_ARG1 "")
-+set(CMAKE_CXX_COMPILER_ID "GNU")
-+set(CMAKE_CXX_COMPILER_VERSION "9.2.0")
-+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
-+set(CMAKE_CXX_COMPILER_WRAPPER "")
-+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
-+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20")
-+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
-+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
-+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
-+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
-+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
-+
-+set(CMAKE_CXX_PLATFORM_ID "MinGW")
-+set(CMAKE_CXX_SIMULATE_ID "")
-+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")
-+set(CMAKE_CXX_SIMULATE_VERSION "")
-+
-+
-+
-+set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
-+set(CMAKE_CXX_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
-+set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
-+set(CMAKE_CXX_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
-+set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
-+set(CMAKE_MT "")
-+set(CMAKE_COMPILER_IS_GNUCXX 1)
-+set(CMAKE_CXX_COMPILER_LOADED 1)
-+set(CMAKE_CXX_COMPILER_WORKS TRUE)
-+set(CMAKE_CXX_ABI_COMPILED TRUE)
-+set(CMAKE_COMPILER_IS_MINGW 1)
-+set(CMAKE_COMPILER_IS_CYGWIN )
-+if(CMAKE_COMPILER_IS_CYGWIN)
-+  set(CYGWIN 1)
-+  set(UNIX 1)
-+endif()
-+
-+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
-+
-+if(CMAKE_COMPILER_IS_MINGW)
-+  set(MINGW 1)
-+endif()
-+set(CMAKE_CXX_COMPILER_ID_RUN 1)
-+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)
-+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
-+
-+foreach (lang C OBJC OBJCXX)
-+  if (CMAKE_${lang}_COMPILER_ID_RUN)
-+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
-+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
-+    endforeach()
-+  endif()
-+endforeach()
-+
-+set(CMAKE_CXX_LINKER_PREFERENCE 30)
-+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
-+
-+# Save compiler ABI information.
-+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
-+set(CMAKE_CXX_COMPILER_ABI "")
-+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
-+
-+if(CMAKE_CXX_SIZEOF_DATA_PTR)
-+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
-+endif()
-+
-+if(CMAKE_CXX_COMPILER_ABI)
-+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
-+endif()
-+
-+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
-+  set(CMAKE_LIBRARY_ARCHITECTURE "")
-+endif()
-+
-+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
-+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
-+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
-+endif()
-+
-+
-+
-+
-+
-+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
-+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
-+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
-+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
-new file mode 100644
-index 0000000..7fab13b
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
-new file mode 100644
-index 0000000..2ac5395
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
-new file mode 100644
-index 0000000..dde22c8
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
-@@ -0,0 +1,6 @@
-+set(CMAKE_RC_COMPILER "C:/TDM-GCC-64/bin/windres.exe")
-+set(CMAKE_RC_COMPILER_ARG1 "")
-+set(CMAKE_RC_COMPILER_LOADED 1)
-+set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)
-+set(CMAKE_RC_OUTPUT_EXTENSION .obj)
-+set(CMAKE_RC_COMPILER_ENV_VAR "RC")
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
-new file mode 100644
-index 0000000..909db20
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
-@@ -0,0 +1,15 @@
-+set(CMAKE_HOST_SYSTEM "Windows-10.0.19045")
-+set(CMAKE_HOST_SYSTEM_NAME "Windows")
-+set(CMAKE_HOST_SYSTEM_VERSION "10.0.19045")
-+set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")
-+
-+
-+
-+set(CMAKE_SYSTEM "Windows-10.0.19045")
-+set(CMAKE_SYSTEM_NAME "Windows")
-+set(CMAKE_SYSTEM_VERSION "10.0.19045")
-+set(CMAKE_SYSTEM_PROCESSOR "AMD64")
-+
-+set(CMAKE_CROSSCOMPILING "FALSE")
-+
-+set(CMAKE_SYSTEM_LOADED 1)
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
-new file mode 100644
-index 0000000..d884b50
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
-@@ -0,0 +1,671 @@
-+#ifdef __cplusplus
-+# error "A C++ compiler has been selected for C."
-+#endif
-+
-+#if defined(__18CXX)
-+# define ID_VOID_MAIN
-+#endif
-+#if defined(__CLASSIC_C__)
-+/* cv-qualifiers did not exist in K&R C */
-+# define const
-+# define volatile
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+# if defined(__INTEL_COMPILER_UPDATE)
-+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+# else
-+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_C)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_C >= 0x5100
-+   /* __SUNPRO_C = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
-+# endif
-+
-+#elif defined(__HP_cc)
-+# define COMPILER_ID "HP"
-+  /* __HP_cc = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
-+
-+#elif defined(__DECC)
-+# define COMPILER_ID "Compaq"
-+  /* __DECC_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
-+
-+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMC__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
-+# define COMPILER_ID "Fujitsu"
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__TINYC__)
-+# define COMPILER_ID "TinyCC"
-+
-+#elif defined(__BCC__)
-+# define COMPILER_ID "Bruce"
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__GNUC__)
-+# define COMPILER_ID "GNU"
-+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VISUALDSPVERSION__)
-+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
-+# define COMPILER_ID "SDCC"
-+# if defined(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
-+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
-+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
-+# else
-+  /* SDCC = VRP */
-+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
-+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
-+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXE) || defined(__CRAYXC)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef COMPILER_VERSION_MAJOR
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+
-+#if !defined(__STDC__)
-+# if (defined(_MSC_VER) && !defined(__clang__)) \
-+  || (defined(__ibmxl__) || defined(__IBMC__))
-+#  define C_DIALECT "90"
-+# else
-+#  define C_DIALECT
-+# endif
-+#elif __STDC_VERSION__ >= 201000L
-+# define C_DIALECT "11"
-+#elif __STDC_VERSION__ >= 199901L
-+# define C_DIALECT "99"
-+#else
-+# define C_DIALECT "90"
-+#endif
-+const char* info_language_dialect_default =
-+  "INFO" ":" "dialect_default[" C_DIALECT "]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+#ifdef ID_VOID_MAIN
-+void main() {}
-+#else
-+# if defined(__CLASSIC_C__)
-+int main(argc, argv) int argc; char *argv[];
-+# else
-+int main(int argc, char* argv[])
-+# endif
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+  require += info_arch[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXE) || defined(__CRAYXC)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_dialect_default[argc];
-+  (void)argv;
-+  return require;
-+}
-+#endif
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
-new file mode 100644
-index 0000000..df42f13
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
-new file mode 100644
-index 0000000..69cfdba
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
-@@ -0,0 +1,660 @@
-+/* This source file must have a .cpp extension so that all C++ compilers
-+   recognize the extension without flags.  Borland does not know .cxx for
-+   example.  */
-+#ifndef __cplusplus
-+# error "A C compiler has been selected for C++."
-+#endif
-+
-+
-+/* Version number components: V=Version, R=Revision, P=Patch
-+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
-+
-+#if defined(__COMO__)
-+# define COMPILER_ID "Comeau"
-+  /* __COMO_VERSION__ = VRR */
-+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
-+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
-+
-+#elif defined(__INTEL_COMPILER) || defined(__ICC)
-+# define COMPILER_ID "Intel"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_ID "GNU"
-+# endif
-+  /* __INTEL_COMPILER = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
-+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
-+# if defined(__INTEL_COMPILER_UPDATE)
-+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
-+# else
-+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
-+# endif
-+# if defined(__INTEL_COMPILER_BUILD_DATE)
-+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
-+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
-+# endif
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# if defined(__GNUC__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
-+# elif defined(__GNUG__)
-+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__PATHCC__)
-+# define COMPILER_ID "PathScale"
-+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
-+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
-+# if defined(__PATHCC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
-+# define COMPILER_ID "Embarcadero"
-+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
-+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
-+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
-+
-+#elif defined(__BORLANDC__)
-+# define COMPILER_ID "Borland"
-+  /* __BORLANDC__ = 0xVRR */
-+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
-+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
-+
-+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
-+# define COMPILER_ID "Watcom"
-+   /* __WATCOMC__ = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# define COMPILER_ID "OpenWatcom"
-+   /* __WATCOMC__ = VVRP + 1100 */
-+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
-+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
-+# if (__WATCOMC__ % 10) > 0
-+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
-+# endif
-+
-+#elif defined(__SUNPRO_CC)
-+# define COMPILER_ID "SunPro"
-+# if __SUNPRO_CC >= 0x5100
-+   /* __SUNPRO_CC = 0xVRRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# else
-+   /* __SUNPRO_CC = 0xVRP */
-+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
-+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
-+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
-+# endif
-+
-+#elif defined(__HP_aCC)
-+# define COMPILER_ID "HP"
-+  /* __HP_aCC = VVRRPP */
-+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
-+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
-+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
-+
-+#elif defined(__DECCXX)
-+# define COMPILER_ID "Compaq"
-+  /* __DECCXX_VER = VVRRTPPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
-+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
-+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
-+
-+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
-+# define COMPILER_ID "zOS"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__ibmxl__) && defined(__clang__)
-+# define COMPILER_ID "XLClang"
-+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
-+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
-+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
-+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
-+
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
-+# define COMPILER_ID "XL"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
-+# define COMPILER_ID "VisualAge"
-+  /* __IBMCPP__ = VRP */
-+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
-+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
-+
-+#elif defined(__PGI)
-+# define COMPILER_ID "PGI"
-+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
-+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
-+# if defined(__PGIC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_CRAYC)
-+# define COMPILER_ID "Cray"
-+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
-+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
-+
-+#elif defined(__TI_COMPILER_VERSION__)
-+# define COMPILER_ID "TI"
-+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
-+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
-+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
-+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
-+
-+#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
-+# define COMPILER_ID "Fujitsu"
-+
-+#elif defined(__ghs__)
-+# define COMPILER_ID "GHS"
-+/* __GHS_VERSION_NUMBER = VVVVRP */
-+# ifdef __GHS_VERSION_NUMBER
-+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
-+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
-+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
-+# endif
-+
-+#elif defined(__SCO_VERSION__)
-+# define COMPILER_ID "SCO"
-+
-+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
-+# define COMPILER_ID "ARMCC"
-+#if __ARMCC_VERSION >= 1000000
-+  /* __ARMCC_VERSION = VRRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
-+#else
-+  /* __ARMCC_VERSION = VRPPPP */
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
-+#endif
-+
-+
-+#elif defined(__clang__) && defined(__apple_build_version__)
-+# define COMPILER_ID "AppleClang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
-+
-+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
-+# define COMPILER_ID "ARMClang"
-+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
-+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
-+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
-+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
-+
-+#elif defined(__clang__)
-+# define COMPILER_ID "Clang"
-+# if defined(_MSC_VER)
-+#  define SIMULATE_ID "MSVC"
-+# endif
-+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
-+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
-+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
-+# if defined(_MSC_VER)
-+   /* _MSC_VER = VVRR */
-+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
-+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
-+# endif
-+
-+#elif defined(__GNUC__) || defined(__GNUG__)
-+# define COMPILER_ID "GNU"
-+# if defined(__GNUC__)
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
-+# else
-+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
-+# endif
-+# if defined(__GNUC_MINOR__)
-+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
-+# endif
-+# if defined(__GNUC_PATCHLEVEL__)
-+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
-+# endif
-+
-+#elif defined(_MSC_VER)
-+# define COMPILER_ID "MSVC"
-+  /* _MSC_VER = VVRR */
-+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
-+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
-+# if defined(_MSC_FULL_VER)
-+#  if _MSC_VER >= 1400
-+    /* _MSC_FULL_VER = VVRRPPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
-+#  else
-+    /* _MSC_FULL_VER = VVRRPPPP */
-+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
-+#  endif
-+# endif
-+# if defined(_MSC_BUILD)
-+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
-+# endif
-+
-+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
-+# define COMPILER_ID "ADSP"
-+#if defined(__VISUALDSPVERSION__)
-+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
-+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
-+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
-+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
-+#endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# define COMPILER_ID "IAR"
-+# if defined(__VER__) && defined(__ICCARM__)
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
-+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
-+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
-+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
-+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
-+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
-+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
-+# endif
-+
-+
-+/* These compilers are either not known or too old to define an
-+  identification macro.  Try to identify the platform and guess that
-+  it is the native compiler.  */
-+#elif defined(__hpux) || defined(__hpua)
-+# define COMPILER_ID "HP"
-+
-+#else /* unknown compiler */
-+# define COMPILER_ID ""
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
-+#ifdef SIMULATE_ID
-+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
-+#endif
-+
-+#ifdef __QNXNTO__
-+char const* qnxnto = "INFO" ":" "qnxnto[]";
-+#endif
-+
-+#if defined(__CRAYXE) || defined(__CRAYXC)
-+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
-+#endif
-+
-+#define STRINGIFY_HELPER(X) #X
-+#define STRINGIFY(X) STRINGIFY_HELPER(X)
-+
-+/* Identify known platforms by name.  */
-+#if defined(__linux) || defined(__linux__) || defined(linux)
-+# define PLATFORM_ID "Linux"
-+
-+#elif defined(__CYGWIN__)
-+# define PLATFORM_ID "Cygwin"
-+
-+#elif defined(__MINGW32__)
-+# define PLATFORM_ID "MinGW"
-+
-+#elif defined(__APPLE__)
-+# define PLATFORM_ID "Darwin"
-+
-+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
-+# define PLATFORM_ID "Windows"
-+
-+#elif defined(__FreeBSD__) || defined(__FreeBSD)
-+# define PLATFORM_ID "FreeBSD"
-+
-+#elif defined(__NetBSD__) || defined(__NetBSD)
-+# define PLATFORM_ID "NetBSD"
-+
-+#elif defined(__OpenBSD__) || defined(__OPENBSD)
-+# define PLATFORM_ID "OpenBSD"
-+
-+#elif defined(__sun) || defined(sun)
-+# define PLATFORM_ID "SunOS"
-+
-+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
-+# define PLATFORM_ID "AIX"
-+
-+#elif defined(__hpux) || defined(__hpux__)
-+# define PLATFORM_ID "HP-UX"
-+
-+#elif defined(__HAIKU__)
-+# define PLATFORM_ID "Haiku"
-+
-+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
-+# define PLATFORM_ID "BeOS"
-+
-+#elif defined(__QNX__) || defined(__QNXNTO__)
-+# define PLATFORM_ID "QNX"
-+
-+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
-+# define PLATFORM_ID "Tru64"
-+
-+#elif defined(__riscos) || defined(__riscos__)
-+# define PLATFORM_ID "RISCos"
-+
-+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
-+# define PLATFORM_ID "SINIX"
-+
-+#elif defined(__UNIX_SV__)
-+# define PLATFORM_ID "UNIX_SV"
-+
-+#elif defined(__bsdos__)
-+# define PLATFORM_ID "BSDOS"
-+
-+#elif defined(_MPRAS) || defined(MPRAS)
-+# define PLATFORM_ID "MP-RAS"
-+
-+#elif defined(__osf) || defined(__osf__)
-+# define PLATFORM_ID "OSF1"
-+
-+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
-+# define PLATFORM_ID "SCO_SV"
-+
-+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
-+# define PLATFORM_ID "ULTRIX"
-+
-+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
-+# define PLATFORM_ID "Xenix"
-+
-+#elif defined(__WATCOMC__)
-+# if defined(__LINUX__)
-+#  define PLATFORM_ID "Linux"
-+
-+# elif defined(__DOS__)
-+#  define PLATFORM_ID "DOS"
-+
-+# elif defined(__OS2__)
-+#  define PLATFORM_ID "OS2"
-+
-+# elif defined(__WINDOWS__)
-+#  define PLATFORM_ID "Windows3x"
-+
-+# else /* unknown platform */
-+#  define PLATFORM_ID
-+# endif
-+
-+#elif defined(__INTEGRITY)
-+# if defined(INT_178B)
-+#  define PLATFORM_ID "Integrity178"
-+
-+# else /* regular Integrity */
-+#  define PLATFORM_ID "Integrity"
-+# endif
-+
-+#else /* unknown platform */
-+# define PLATFORM_ID
-+
-+#endif
-+
-+/* For windows compilers MSVC and Intel we can determine
-+   the architecture of the compiler being used.  This is because
-+   the compilers do not have flags that can change the architecture,
-+   but rather depend on which compiler is being used
-+*/
-+#if defined(_WIN32) && defined(_MSC_VER)
-+# if defined(_M_IA64)
-+#  define ARCHITECTURE_ID "IA64"
-+
-+# elif defined(_M_X64) || defined(_M_AMD64)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# elif defined(_M_ARM64)
-+#  define ARCHITECTURE_ID "ARM64"
-+
-+# elif defined(_M_ARM)
-+#  if _M_ARM == 4
-+#   define ARCHITECTURE_ID "ARMV4I"
-+#  elif _M_ARM == 5
-+#   define ARCHITECTURE_ID "ARMV5I"
-+#  else
-+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
-+#  endif
-+
-+# elif defined(_M_MIPS)
-+#  define ARCHITECTURE_ID "MIPS"
-+
-+# elif defined(_M_SH)
-+#  define ARCHITECTURE_ID "SHx"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__WATCOMC__)
-+# if defined(_M_I86)
-+#  define ARCHITECTURE_ID "I86"
-+
-+# elif defined(_M_IX86)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
-+# if defined(__ICCARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__ICCRX__)
-+#  define ARCHITECTURE_ID "RX"
-+
-+# elif defined(__ICCRH850__)
-+#  define ARCHITECTURE_ID "RH850"
-+
-+# elif defined(__ICCRL78__)
-+#  define ARCHITECTURE_ID "RL78"
-+
-+# elif defined(__ICCRISCV__)
-+#  define ARCHITECTURE_ID "RISCV"
-+
-+# elif defined(__ICCAVR__)
-+#  define ARCHITECTURE_ID "AVR"
-+
-+# elif defined(__ICC430__)
-+#  define ARCHITECTURE_ID "MSP430"
-+
-+# elif defined(__ICCV850__)
-+#  define ARCHITECTURE_ID "V850"
-+
-+# elif defined(__ICC8051__)
-+#  define ARCHITECTURE_ID "8051"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+
-+#elif defined(__ghs__)
-+# if defined(__PPC64__)
-+#  define ARCHITECTURE_ID "PPC64"
-+
-+# elif defined(__ppc__)
-+#  define ARCHITECTURE_ID "PPC"
-+
-+# elif defined(__ARM__)
-+#  define ARCHITECTURE_ID "ARM"
-+
-+# elif defined(__x86_64__)
-+#  define ARCHITECTURE_ID "x64"
-+
-+# elif defined(__i386__)
-+#  define ARCHITECTURE_ID "X86"
-+
-+# else /* unknown architecture */
-+#  define ARCHITECTURE_ID ""
-+# endif
-+#else
-+#  define ARCHITECTURE_ID
-+#endif
-+
-+/* Convert integer to decimal digit literals.  */
-+#define DEC(n)                   \
-+  ('0' + (((n) / 10000000)%10)), \
-+  ('0' + (((n) / 1000000)%10)),  \
-+  ('0' + (((n) / 100000)%10)),   \
-+  ('0' + (((n) / 10000)%10)),    \
-+  ('0' + (((n) / 1000)%10)),     \
-+  ('0' + (((n) / 100)%10)),      \
-+  ('0' + (((n) / 10)%10)),       \
-+  ('0' +  ((n) % 10))
-+
-+/* Convert integer to hex digit literals.  */
-+#define HEX(n)             \
-+  ('0' + ((n)>>28 & 0xF)), \
-+  ('0' + ((n)>>24 & 0xF)), \
-+  ('0' + ((n)>>20 & 0xF)), \
-+  ('0' + ((n)>>16 & 0xF)), \
-+  ('0' + ((n)>>12 & 0xF)), \
-+  ('0' + ((n)>>8  & 0xF)), \
-+  ('0' + ((n)>>4  & 0xF)), \
-+  ('0' + ((n)     & 0xF))
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef COMPILER_VERSION_MAJOR
-+char const info_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
-+  COMPILER_VERSION_MAJOR,
-+# ifdef COMPILER_VERSION_MINOR
-+  '.', COMPILER_VERSION_MINOR,
-+#  ifdef COMPILER_VERSION_PATCH
-+   '.', COMPILER_VERSION_PATCH,
-+#   ifdef COMPILER_VERSION_TWEAK
-+    '.', COMPILER_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the internal version number. */
-+#ifdef COMPILER_VERSION_INTERNAL
-+char const info_version_internal[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
-+  'i','n','t','e','r','n','a','l','[',
-+  COMPILER_VERSION_INTERNAL,']','\0'};
-+#endif
-+
-+/* Construct a string literal encoding the version number components. */
-+#ifdef SIMULATE_VERSION_MAJOR
-+char const info_simulate_version[] = {
-+  'I', 'N', 'F', 'O', ':',
-+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
-+  SIMULATE_VERSION_MAJOR,
-+# ifdef SIMULATE_VERSION_MINOR
-+  '.', SIMULATE_VERSION_MINOR,
-+#  ifdef SIMULATE_VERSION_PATCH
-+   '.', SIMULATE_VERSION_PATCH,
-+#   ifdef SIMULATE_VERSION_TWEAK
-+    '.', SIMULATE_VERSION_TWEAK,
-+#   endif
-+#  endif
-+# endif
-+  ']','\0'};
-+#endif
-+
-+/* Construct the string literal in pieces to prevent the source from
-+   getting matched.  Store it in a pointer rather than an array
-+   because some compilers will just produce instructions to fill the
-+   array rather than assigning a pointer to a static array.  */
-+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
-+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
-+
-+
-+
-+
-+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
-+#  if defined(__INTEL_CXX11_MODE__)
-+#    if defined(__cpp_aggregate_nsdmi)
-+#      define CXX_STD 201402L
-+#    else
-+#      define CXX_STD 201103L
-+#    endif
-+#  else
-+#    define CXX_STD 199711L
-+#  endif
-+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
-+#  define CXX_STD _MSVC_LANG
-+#else
-+#  define CXX_STD __cplusplus
-+#endif
-+
-+const char* info_language_dialect_default = "INFO" ":" "dialect_default["
-+#if CXX_STD > 201703L
-+  "20"
-+#elif CXX_STD >= 201703L
-+  "17"
-+#elif CXX_STD >= 201402L
-+  "14"
-+#elif CXX_STD >= 201103L
-+  "11"
-+#else
-+  "98"
-+#endif
-+"]";
-+
-+/*--------------------------------------------------------------------------*/
-+
-+int main(int argc, char* argv[])
-+{
-+  int require = 0;
-+  require += info_compiler[argc];
-+  require += info_platform[argc];
-+#ifdef COMPILER_VERSION_MAJOR
-+  require += info_version[argc];
-+#endif
-+#ifdef COMPILER_VERSION_INTERNAL
-+  require += info_version_internal[argc];
-+#endif
-+#ifdef SIMULATE_ID
-+  require += info_simulate[argc];
-+#endif
-+#ifdef SIMULATE_VERSION_MAJOR
-+  require += info_simulate_version[argc];
-+#endif
-+#if defined(__CRAYXE) || defined(__CRAYXC)
-+  require += info_cray[argc];
-+#endif
-+  require += info_language_dialect_default[argc];
-+  (void)argv;
-+  return require;
-+}
-diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
-new file mode 100644
-index 0000000..916985a
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
-new file mode 100644
-index 0000000..7511877
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
-@@ -0,0 +1,16 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# Relative path conversion top directories.
-+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry")
-+set(CMAKE_RELATIVE_PATH_TOP_BINARY "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug")
-+
-+# Force unix paths in dependencies.
-+set(CMAKE_FORCE_UNIX_PATHS 1)
-+
-+
-+# The C and CXX include file regular expressions for this directory.
-+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
-+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
-+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
-+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
-diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
-new file mode 100644
-index 0000000..6b7a874
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
-@@ -0,0 +1,524 @@
-+The system is: Windows - 10.0.19045 - AMD64
-+Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
-+Compiler: C:/TDM-GCC-64/bin/gcc.exe 
-+Build flags: 
-+Id flags:  
-+
-+The output was:
-+0
-+
-+
-+Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
-+
-+The C compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe"
-+
-+Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
-+Compiler: C:/TDM-GCC-64/bin/g++.exe 
-+Build flags: 
-+Id flags:  
-+
-+The output was:
-+0
-+
-+
-+Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
-+
-+The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe"
-+
-+Determining if the C compiler works passed with the following output:
-+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_16a13/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_16a13.dir\build.make CMakeFiles/cmTC_16a13.dir/build
-+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+Building C object CMakeFiles/cmTC_16a13.dir/testCCompiler.c.obj
-+C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_16a13.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
-+Linking C executable cmTC_16a13.exe
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_16a13.dir\link.txt --verbose=1
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_16a13.dir/objects.a
-+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_16a13.dir/objects.a @CMakeFiles\cmTC_16a13.dir\objects1.rsp
-+C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_16a13.dir/objects.a -Wl,--no-whole-archive  -o cmTC_16a13.exe -Wl,--out-implib,libcmTC_16a13.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_16a13.dir\linklibs.rsp
-+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+
-+
-+
-+Detecting C compiler ABI info compiled with the following output:
-+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build
-+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj
-+C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
-+Using built-in specs.
-+COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
-+Target: x86_64-w64-mingw32
-+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
-+Thread model: posix
-+gcc version 9.2.0 (tdm64-1) 
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
-+GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
-+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
-+#include "..." search starts here:
-+#include <...> search starts here:
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
-+End of search list.
-+GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
-+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
-+GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
-+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
-+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
-+Linking C executable cmTC_882c2.exe
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a
-+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp
-+C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl,--no-whole-archive  -o cmTC_882c2.exe -Wl,--out-implib,libcmTC_882c2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
-+Using built-in specs.
-+COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
-+COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
-+Target: x86_64-w64-mingw32
-+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
-+Thread model: posix
-+gcc version 9.2.0 (tdm64-1) 
-+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
-+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
-+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+
-+
-+
-+Parsed C implicit include dir info from above output: rv=done
-+  found start of include info
-+  found start of implicit include info
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
-+  end of search list found
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
-+  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
-+
-+
-+Parsed C implicit link information from above output:
-+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
-+  ignore line: []
-+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build]
-+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-+  ignore line: [Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj]
-+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
-+  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
-+  ignore line: [#include "..." search starts here:]
-+  ignore line: [#include <...> search starts here:]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
-+  ignore line: [End of search list.]
-+  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
-+  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
-+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [Linking C executable cmTC_882c2.exe]
-+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1]
-+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a]
-+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp]
-+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl --no-whole-archive  -o cmTC_882c2.exe -Wl --out-implib libcmTC_882c2.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
-+  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
-+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64']
-+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
-+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
-+    arg [-plugin] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
-+    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
-+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-m] ==> ignore
-+    arg [i386pep] ==> ignore
-+    arg [--exclude-libs=libpthread.a] ==> ignore
-+    arg [-Bdynamic] ==> ignore
-+    arg [-o] ==> ignore
-+    arg [cmTC_882c2.exe] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
-+    arg [--whole-archive] ==> ignore
-+    arg [CMakeFiles\cmTC_882c2.dir/objects.a] ==> ignore
-+    arg [--no-whole-archive] ==> ignore
-+    arg [--out-implib] ==> ignore
-+    arg [libcmTC_882c2.dll.a] ==> ignore
-+    arg [--major-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [--minor-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [-lpthread] ==> lib [pthread]
-+    arg [-ladvapi32] ==> lib [advapi32]
-+    arg [-lshell32] ==> lib [shell32]
-+    arg [-luser32] ==> lib [user32]
-+    arg [-lkernel32] ==> lib [kernel32]
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
-+  remove lib [msvcrt]
-+  remove lib [msvcrt]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
-+  implicit libs: [mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
-+  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
-+  implicit fwks: []
-+
-+
-+Determining if the CXX compiler works passed with the following output:
-+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_6e85e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_6e85e.dir\build.make CMakeFiles/cmTC_6e85e.dir/build
-+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+Building CXX object CMakeFiles/cmTC_6e85e.dir/testCXXCompiler.cxx.obj
-+C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_6e85e.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
-+Linking CXX executable cmTC_6e85e.exe
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_6e85e.dir\link.txt --verbose=1
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_6e85e.dir/objects.a
-+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_6e85e.dir/objects.a @CMakeFiles\cmTC_6e85e.dir\objects1.rsp
-+C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_6e85e.dir/objects.a -Wl,--no-whole-archive  -o cmTC_6e85e.exe -Wl,--out-implib,libcmTC_6e85e.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_6e85e.dir\linklibs.rsp
-+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+
-+
-+
-+Detecting CXX compiler ABI info compiled with the following output:
-+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
-+
-+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build
-+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj
-+C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
-+Using built-in specs.
-+COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
-+Target: x86_64-w64-mingw32
-+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
-+Thread model: posix
-+gcc version 9.2.0 (tdm64-1) 
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
-+GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
-+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
-+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
-+#include "..." search starts here:
-+#include <...> search starts here:
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
-+End of search list.
-+GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
-+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
-+
-+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
-+Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
-+GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
-+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
-+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
-+Linking CXX executable cmTC_bedbe.exe
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a
-+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp
-+C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl,--no-whole-archive  -o cmTC_bedbe.exe -Wl,--out-implib,libcmTC_bedbe.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
-+Using built-in specs.
-+COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
-+COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
-+Target: x86_64-w64-mingw32
-+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
-+Thread model: posix
-+gcc version 9.2.0 (tdm64-1) 
-+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
-+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
-+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
-+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-+
-+
-+
-+Parsed CXX implicit include dir info from above output: rv=done
-+  found start of include info
-+  found start of implicit include info
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
-+  end of search list found
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
-+  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
-+
-+
-+Parsed CXX implicit link information from above output:
-+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
-+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
-+  ignore line: []
-+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build]
-+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-+  ignore line: [Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj]
-+  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
-+  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
-+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
-+  ignore line: [#include "..." search starts here:]
-+  ignore line: [#include <...> search starts here:]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
-+  ignore line: [End of search list.]
-+  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
-+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
-+  ignore line: []
-+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
-+  ignore line: [Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
-+  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
-+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-+  ignore line: [Linking CXX executable cmTC_bedbe.exe]
-+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1]
-+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a]
-+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp]
-+  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl --no-whole-archive  -o cmTC_bedbe.exe -Wl --out-implib libcmTC_bedbe.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
-+  ignore line: [Using built-in specs.]
-+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
-+  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
-+  ignore line: [Target: x86_64-w64-mingw32]
-+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
-+  ignore line: [Thread model: posix]
-+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
-+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
-+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
-+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64']
-+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
-+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
-+    arg [-plugin] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
-+    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
-+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
-+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
-+    arg [-m] ==> ignore
-+    arg [i386pep] ==> ignore
-+    arg [--exclude-libs=libpthread.a] ==> ignore
-+    arg [-Bdynamic] ==> ignore
-+    arg [-o] ==> ignore
-+    arg [cmTC_bedbe.exe] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
-+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
-+    arg [--whole-archive] ==> ignore
-+    arg [CMakeFiles\cmTC_bedbe.dir/objects.a] ==> ignore
-+    arg [--no-whole-archive] ==> ignore
-+    arg [--out-implib] ==> ignore
-+    arg [libcmTC_bedbe.dll.a] ==> ignore
-+    arg [--major-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [--minor-image-version] ==> ignore
-+    arg [0] ==> ignore
-+    arg [-Bstatic] ==> ignore
-+    arg [-lstdc++] ==> lib [stdc++]
-+    arg [-Bdynamic] ==> ignore
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [-lpthread] ==> lib [pthread]
-+    arg [-ladvapi32] ==> lib [advapi32]
-+    arg [-lshell32] ==> lib [shell32]
-+    arg [-luser32] ==> lib [user32]
-+    arg [-lkernel32] ==> lib [kernel32]
-+    arg [-lmingw32] ==> lib [mingw32]
-+    arg [-lgcc] ==> lib [gcc]
-+    arg [-lmoldname] ==> lib [moldname]
-+    arg [-lmingwex] ==> lib [mingwex]
-+    arg [-lmsvcrt] ==> lib [msvcrt]
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
-+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
-+  remove lib [msvcrt]
-+  remove lib [msvcrt]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
-+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
-+  implicit libs: [stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
-+  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
-+  implicit fwks: []
-+
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile.cmake b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
-new file mode 100644
-index 0000000..75be321
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
-@@ -0,0 +1,57 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# The generator used is:
-+set(CMAKE_DEPENDS_GENERATOR "MinGW Makefiles")
-+
-+# The top level Makefile was generated from the following files:
-+set(CMAKE_MAKEFILE_DEPENDS
-+  "CMakeCache.txt"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCInformation.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCXXInformation.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCommonLanguageInclude.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeExtraGeneratorDetermineCompilerMacrosAndIncludeDirs.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeFindCodeBlocks.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeGenericSystem.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeInitializeConfigs.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeLanguageInformation.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeRCInformation.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInformation.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInitialize.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-C.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-CXX.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Internal/CMakeCheckCompilerFlag.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C-ABI.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-windres.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/WindowsPaths.cmake"
-+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/ProcessorCount.cmake"
-+  "../CMakeLists.txt"
-+  "CMakeFiles/3.17.3/CMakeCCompiler.cmake"
-+  "CMakeFiles/3.17.3/CMakeCXXCompiler.cmake"
-+  "CMakeFiles/3.17.3/CMakeRCCompiler.cmake"
-+  "CMakeFiles/3.17.3/CMakeSystem.cmake"
-+  )
-+
-+# The corresponding makefile is:
-+set(CMAKE_MAKEFILE_OUTPUTS
-+  "Makefile"
-+  "CMakeFiles/cmake.check_cache"
-+  )
-+
-+# Byproducts of CMake generate step:
-+set(CMAKE_MAKEFILE_PRODUCTS
-+  "CMakeFiles/CMakeDirectoryInformation.cmake"
-+  )
-+
-+# Dependency information for all targets:
-+set(CMAKE_DEPEND_INFO_FILES
-+  "CMakeFiles/dry.dir/DependInfo.cmake"
-+  )
-diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile2 b/dry/cmake-build-debug/CMakeFiles/Makefile2
-new file mode 100644
-index 0000000..bbf8d8a
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/Makefile2
-@@ -0,0 +1,125 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# Default target executed when no arguments are given to make.
-+default_target: all
-+
-+.PHONY : default_target
-+
-+#=============================================================================
-+# Special targets provided by cmake.
-+
-+# Disable implicit rules so canonical targets will work.
-+.SUFFIXES:
-+
-+
-+# Disable VCS-based implicit rules.
-+% : %,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : SCCS/s.%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : s.%
-+
-+
-+.SUFFIXES: .hpux_make_needs_suffix_list
-+
-+
-+# Command-line flag to silence nested $(MAKE).
-+$(VERBOSE)MAKESILENT = -s
-+
-+# Suppress display of executed commands.
-+$(VERBOSE).SILENT:
-+
-+
-+# A target that is always out of date.
-+cmake_force:
-+
-+.PHONY : cmake_force
-+
-+#=============================================================================
-+# Set environment variables for the build.
-+
-+SHELL = cmd.exe
-+
-+# The CMake executable.
-+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
-+
-+# The command to remove a file.
-+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
-+
-+# Escaping for special characters.
-+EQUALS = =
-+
-+# The top-level source directory on which CMake was run.
-+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
-+
-+# The top-level build directory on which CMake was run.
-+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
-+
-+#=============================================================================
-+# Directory level rules for the build root directory
-+
-+# The main recursive "all" target.
-+all: CMakeFiles/dry.dir/all
-+
-+.PHONY : all
-+
-+# The main recursive "preinstall" target.
-+preinstall:
-+
-+.PHONY : preinstall
-+
-+# The main recursive "clean" target.
-+clean: CMakeFiles/dry.dir/clean
-+
-+.PHONY : clean
-+
-+#=============================================================================
-+# Target rules for target CMakeFiles/dry.dir
-+
-+# All Build rule for target.
-+CMakeFiles/dry.dir/all:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/depend
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=1,2,3 "Built target dry"
-+.PHONY : CMakeFiles/dry.dir/all
-+
-+# Build rule for subdir invocation for target.
-+CMakeFiles/dry.dir/rule: cmake_check_build_system
-+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 3
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/dry.dir/all
-+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
-+.PHONY : CMakeFiles/dry.dir/rule
-+
-+# Convenience name for target.
-+dry: CMakeFiles/dry.dir/rule
-+
-+.PHONY : dry
-+
-+# clean rule for target.
-+CMakeFiles/dry.dir/clean:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/clean
-+.PHONY : CMakeFiles/dry.dir/clean
-+
-+#=============================================================================
-+# Special targets to cleanup operation of make.
-+
-+# Special rule to run CMake to check the build system integrity.
-+# No rule that depends on this can have commands that come from listfiles
-+# because they might be regenerated.
-+cmake_check_build_system:
-+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
-+.PHONY : cmake_check_build_system
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
-new file mode 100644
-index 0000000..3e82961
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
-@@ -0,0 +1,3 @@
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/edit_cache.dir
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/rebuild_cache.dir
-diff --git a/dry/cmake-build-debug/CMakeFiles/clion-environment.txt b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
-new file mode 100644
-index 0000000..59a47ca
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
-@@ -0,0 +1,4 @@
-+ToolSet: w64 7.0 (local)@C:\TDM-GCC-64
-+Options: 
-+
-+Options:
-\ No newline at end of file
-diff --git a/dry/cmake-build-debug/CMakeFiles/clion-log.txt b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
-new file mode 100644
-index 0000000..a544d62
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
-@@ -0,0 +1,4 @@
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
-+-- Configuring done
-+-- Generating done
-+-- Build files have been written to: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
-diff --git a/dry/cmake-build-debug/CMakeFiles/cmake.check_cache b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
-new file mode 100644
-index 0000000..3dccd73
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
-@@ -0,0 +1 @@
-+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-new file mode 100644
-index 0000000..79f3388
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
-@@ -0,0 +1,16 @@
-+#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
-+
-+#IncludeRegexScan: ^.*$
-+
-+#IncludeRegexComplain: ^$
-+
-+#IncludeRegexTransform: 
-+
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-+Pirate.h
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+
-+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+iostream
-+-
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
-new file mode 100644
-index 0000000..0f0b9bc
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
-@@ -0,0 +1,21 @@
-+# The set of languages for which implicit dependencies are needed:
-+set(CMAKE_DEPENDS_LANGUAGES
-+  "CXX"
-+  )
-+# The set of files for implicit dependencies of each language:
-+set(CMAKE_DEPENDS_CHECK_CXX
-+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj"
-+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj"
-+  )
-+set(CMAKE_CXX_COMPILER_ID "GNU")
-+
-+# The include file search paths:
-+set(CMAKE_CXX_TARGET_INCLUDE_PATH
-+  )
-+
-+# Targets to which this target links.
-+set(CMAKE_TARGET_LINKED_INFO_FILES
-+  )
-+
-+# Fortran module output directory.
-+set(CMAKE_Fortran_TARGET_MODULE_DIR "")
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
-new file mode 100644
-index 0000000..458c3e0
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
-new file mode 100644
-index 0000000..7086ad8
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
-@@ -0,0 +1,134 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# Delete rule output on recipe failure.
-+.DELETE_ON_ERROR:
-+
-+
-+#=============================================================================
-+# Special targets provided by cmake.
-+
-+# Disable implicit rules so canonical targets will work.
-+.SUFFIXES:
-+
-+
-+# Disable VCS-based implicit rules.
-+% : %,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : SCCS/s.%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : s.%
-+
-+
-+.SUFFIXES: .hpux_make_needs_suffix_list
-+
-+
-+# Command-line flag to silence nested $(MAKE).
-+$(VERBOSE)MAKESILENT = -s
-+
-+# Suppress display of executed commands.
-+$(VERBOSE).SILENT:
-+
-+
-+# A target that is always out of date.
-+cmake_force:
-+
-+.PHONY : cmake_force
-+
-+#=============================================================================
-+# Set environment variables for the build.
-+
-+SHELL = cmd.exe
-+
-+# The CMake executable.
-+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
-+
-+# The command to remove a file.
-+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
-+
-+# Escaping for special characters.
-+EQUALS = =
-+
-+# The top-level source directory on which CMake was run.
-+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
-+
-+# The top-level build directory on which CMake was run.
-+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
-+
-+# Include any dependencies generated for this target.
-+include CMakeFiles/dry.dir/depend.make
-+
-+# Include the progress variables for this target.
-+include CMakeFiles/dry.dir/progress.make
-+
-+# Include the compile flags for this target's objects.
-+include CMakeFiles/dry.dir/flags.make
-+
-+CMakeFiles/dry.dir/main.cpp.obj: CMakeFiles/dry.dir/flags.make
-+CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/dry.dir/main.cpp.obj"
-+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp"
-+
-+CMakeFiles/dry.dir/main.cpp.i: cmake_force
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/main.cpp.i"
-+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" > CMakeFiles\dry.dir\main.cpp.i
-+
-+CMakeFiles/dry.dir/main.cpp.s: cmake_force
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/main.cpp.s"
-+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" -o CMakeFiles\dry.dir\main.cpp.s
-+
-+CMakeFiles/dry.dir/Pirate.cpp.obj: CMakeFiles/dry.dir/flags.make
-+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/dry.dir/Pirate.cpp.obj"
-+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp"
-+
-+CMakeFiles/dry.dir/Pirate.cpp.i: cmake_force
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/Pirate.cpp.i"
-+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" > CMakeFiles\dry.dir\Pirate.cpp.i
-+
-+CMakeFiles/dry.dir/Pirate.cpp.s: cmake_force
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/Pirate.cpp.s"
-+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" -o CMakeFiles\dry.dir\Pirate.cpp.s
-+
-+# Object files for target dry
-+dry_OBJECTS = \
-+"CMakeFiles/dry.dir/main.cpp.obj" \
-+"CMakeFiles/dry.dir/Pirate.cpp.obj"
-+
-+# External object files for target dry
-+dry_EXTERNAL_OBJECTS =
-+
-+dry.exe: CMakeFiles/dry.dir/main.cpp.obj
-+dry.exe: CMakeFiles/dry.dir/Pirate.cpp.obj
-+dry.exe: CMakeFiles/dry.dir/build.make
-+dry.exe: CMakeFiles/dry.dir/linklibs.rsp
-+dry.exe: CMakeFiles/dry.dir/objects1.rsp
-+dry.exe: CMakeFiles/dry.dir/link.txt
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Linking CXX executable dry.exe"
-+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\dry.dir\link.txt --verbose=$(VERBOSE)
-+
-+# Rule to build all files generated by this target.
-+CMakeFiles/dry.dir/build: dry.exe
-+
-+.PHONY : CMakeFiles/dry.dir/build
-+
-+CMakeFiles/dry.dir/clean:
-+	$(CMAKE_COMMAND) -P CMakeFiles\dry.dir\cmake_clean.cmake
-+.PHONY : CMakeFiles/dry.dir/clean
-+
-+CMakeFiles/dry.dir/depend:
-+	$(CMAKE_COMMAND) -E cmake_depends "MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\dry.dir\DependInfo.cmake" --color=$(COLOR)
-+.PHONY : CMakeFiles/dry.dir/depend
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
-new file mode 100644
-index 0000000..d58f6e3
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
-@@ -0,0 +1,13 @@
-+file(REMOVE_RECURSE
-+  "CMakeFiles/dry.dir/Pirate.cpp.obj"
-+  "CMakeFiles/dry.dir/main.cpp.obj"
-+  "dry.exe"
-+  "dry.exe.manifest"
-+  "dry.pdb"
-+  "libdry.dll.a"
-+)
-+
-+# Per-language clean rules from dependency scanning.
-+foreach(lang CXX)
-+  include(CMakeFiles/dry.dir/cmake_clean_${lang}.cmake OPTIONAL)
-+endforeach()
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
-new file mode 100644
-index 0000000..51eeb9b
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
-@@ -0,0 +1,8 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+CMakeFiles/dry.dir/Pirate.cpp.obj
-+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
-+CMakeFiles/dry.dir/main.cpp.obj
-+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
-new file mode 100644
-index 0000000..3b9c994
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
-@@ -0,0 +1,8 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
-+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
-+
-+CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
-new file mode 100644
-index 0000000..dee4354
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
-@@ -0,0 +1,10 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# compile CXX with C:/TDM-GCC-64/bin/g++.exe
-+CXX_FLAGS = -g   -std=gnu++14
-+
-+CXX_DEFINES = 
-+
-+CXX_INCLUDES = 
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
-new file mode 100644
-index 0000000..81d1196
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
-@@ -0,0 +1,3 @@
-+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\dry.dir/objects.a
-+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\dry.dir/objects.a @CMakeFiles\dry.dir\objects1.rsp
-+C:\TDM-GCC-64\bin\g++.exe -g   -Wl,--whole-archive CMakeFiles\dry.dir/objects.a -Wl,--no-whole-archive  -o dry.exe -Wl,--out-implib,libdry.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\dry.dir\linklibs.rsp
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
-new file mode 100644
-index 0000000..8ed353a
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
-@@ -0,0 +1 @@
-+ -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
-new file mode 100644
-index 0000000..052a66b
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
-new file mode 100644
-index 0000000..7fd194a
-Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
-new file mode 100644
-index 0000000..a83fd1c
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
-@@ -0,0 +1 @@
-+CMakeFiles/dry.dir/main.cpp.obj CMakeFiles/dry.dir/Pirate.cpp.obj
-diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
-new file mode 100644
-index 0000000..6a9dc74
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
-@@ -0,0 +1,4 @@
-+CMAKE_PROGRESS_1 = 1
-+CMAKE_PROGRESS_2 = 2
-+CMAKE_PROGRESS_3 = 3
-+
-diff --git a/dry/cmake-build-debug/CMakeFiles/progress.marks b/dry/cmake-build-debug/CMakeFiles/progress.marks
-new file mode 100644
-index 0000000..00750ed
---- /dev/null
-+++ b/dry/cmake-build-debug/CMakeFiles/progress.marks
-@@ -0,0 +1 @@
-+3
-diff --git a/dry/cmake-build-debug/Makefile b/dry/cmake-build-debug/Makefile
-new file mode 100644
-index 0000000..d181146
---- /dev/null
-+++ b/dry/cmake-build-debug/Makefile
-@@ -0,0 +1,227 @@
-+# CMAKE generated file: DO NOT EDIT!
-+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
-+
-+# Default target executed when no arguments are given to make.
-+default_target: all
-+
-+.PHONY : default_target
-+
-+# Allow only one "make -f Makefile2" at a time, but pass parallelism.
-+.NOTPARALLEL:
-+
-+
-+#=============================================================================
-+# Special targets provided by cmake.
-+
-+# Disable implicit rules so canonical targets will work.
-+.SUFFIXES:
-+
-+
-+# Disable VCS-based implicit rules.
-+% : %,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : RCS/%,v
-+
-+
-+# Disable VCS-based implicit rules.
-+% : SCCS/s.%
-+
-+
-+# Disable VCS-based implicit rules.
-+% : s.%
-+
-+
-+.SUFFIXES: .hpux_make_needs_suffix_list
-+
-+
-+# Command-line flag to silence nested $(MAKE).
-+$(VERBOSE)MAKESILENT = -s
-+
-+# Suppress display of executed commands.
-+$(VERBOSE).SILENT:
-+
-+
-+# A target that is always out of date.
-+cmake_force:
-+
-+.PHONY : cmake_force
-+
-+#=============================================================================
-+# Set environment variables for the build.
-+
-+SHELL = cmd.exe
-+
-+# The CMake executable.
-+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
-+
-+# The command to remove a file.
-+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
-+
-+# Escaping for special characters.
-+EQUALS = =
-+
-+# The top-level source directory on which CMake was run.
-+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
-+
-+# The top-level build directory on which CMake was run.
-+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
-+
-+#=============================================================================
-+# Targets provided globally by CMake.
-+
-+# Special rule for the target edit_cache
-+edit_cache:
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
-+	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
-+.PHONY : edit_cache
-+
-+# Special rule for the target edit_cache
-+edit_cache/fast: edit_cache
-+
-+.PHONY : edit_cache/fast
-+
-+# Special rule for the target rebuild_cache
-+rebuild_cache:
-+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
-+	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
-+.PHONY : rebuild_cache
-+
-+# Special rule for the target rebuild_cache
-+rebuild_cache/fast: rebuild_cache
-+
-+.PHONY : rebuild_cache/fast
-+
-+# The main all target
-+all: cmake_check_build_system
-+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\progress.marks"
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 all
-+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
-+.PHONY : all
-+
-+# The main clean target
-+clean:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 clean
-+.PHONY : clean
-+
-+# The main clean target
-+clean/fast: clean
-+
-+.PHONY : clean/fast
-+
-+# Prepare targets for installation.
-+preinstall: all
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
-+.PHONY : preinstall
-+
-+# Prepare targets for installation.
-+preinstall/fast:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
-+.PHONY : preinstall/fast
-+
-+# clear depends
-+depend:
-+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
-+.PHONY : depend
-+
-+#=============================================================================
-+# Target rules for targets named dry
-+
-+# Build rule for target.
-+dry: cmake_check_build_system
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 dry
-+.PHONY : dry
-+
-+# fast build rule for target.
-+dry/fast:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
-+.PHONY : dry/fast
-+
-+Pirate.obj: Pirate.cpp.obj
-+
-+.PHONY : Pirate.obj
-+
-+# target to build an object file
-+Pirate.cpp.obj:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.obj
-+.PHONY : Pirate.cpp.obj
-+
-+Pirate.i: Pirate.cpp.i
-+
-+.PHONY : Pirate.i
-+
-+# target to preprocess a source file
-+Pirate.cpp.i:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.i
-+.PHONY : Pirate.cpp.i
-+
-+Pirate.s: Pirate.cpp.s
-+
-+.PHONY : Pirate.s
-+
-+# target to generate assembly for a file
-+Pirate.cpp.s:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.s
-+.PHONY : Pirate.cpp.s
-+
-+main.obj: main.cpp.obj
-+
-+.PHONY : main.obj
-+
-+# target to build an object file
-+main.cpp.obj:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.obj
-+.PHONY : main.cpp.obj
-+
-+main.i: main.cpp.i
-+
-+.PHONY : main.i
-+
-+# target to preprocess a source file
-+main.cpp.i:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.i
-+.PHONY : main.cpp.i
-+
-+main.s: main.cpp.s
-+
-+.PHONY : main.s
-+
-+# target to generate assembly for a file
-+main.cpp.s:
-+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.s
-+.PHONY : main.cpp.s
-+
-+# Help Target
-+help:
-+	@echo The following are some of the valid targets for this Makefile:
-+	@echo ... all (the default if no target is provided)
-+	@echo ... clean
-+	@echo ... depend
-+	@echo ... edit_cache
-+	@echo ... rebuild_cache
-+	@echo ... dry
-+	@echo ... Pirate.obj
-+	@echo ... Pirate.i
-+	@echo ... Pirate.s
-+	@echo ... main.obj
-+	@echo ... main.i
-+	@echo ... main.s
-+.PHONY : help
-+
-+
-+
-+#=============================================================================
-+# Special targets to cleanup operation of make.
-+
-+# Special rule to run CMake to check the build system integrity.
-+# No rule that depends on this can have commands that come from listfiles
-+# because they might be regenerated.
-+cmake_check_build_system:
-+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
-+.PHONY : cmake_check_build_system
-+
-diff --git a/dry/cmake-build-debug/cmake_install.cmake b/dry/cmake-build-debug/cmake_install.cmake
-new file mode 100644
-index 0000000..472ee00
---- /dev/null
-+++ b/dry/cmake-build-debug/cmake_install.cmake
-@@ -0,0 +1,44 @@
-+# Install script for directory: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
-+
-+# Set the install prefix
-+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
-+  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/dry")
-+endif()
-+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
-+
-+# Set the install configuration name.
-+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
-+  if(BUILD_TYPE)
-+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
-+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
-+  else()
-+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
-+  endif()
-+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
-+endif()
-+
-+# Set the component getting installed.
-+if(NOT CMAKE_INSTALL_COMPONENT)
-+  if(COMPONENT)
-+    message(STATUS "Install component: \"${COMPONENT}\"")
-+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
-+  else()
-+    set(CMAKE_INSTALL_COMPONENT)
-+  endif()
-+endif()
-+
-+# Is this installation the result of a crosscompile?
-+if(NOT DEFINED CMAKE_CROSSCOMPILING)
-+  set(CMAKE_CROSSCOMPILING "FALSE")
-+endif()
-+
-+if(CMAKE_INSTALL_COMPONENT)
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
-+else()
-+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
-+endif()
-+
-+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
-+       "${CMAKE_INSTALL_MANIFEST_FILES}")
-+file(WRITE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
-+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
-diff --git a/dry/cmake-build-debug/dry.cbp b/dry/cmake-build-debug/dry.cbp
-new file mode 100644
-index 0000000..6929279
---- /dev/null
-+++ b/dry/cmake-build-debug/dry.cbp
-@@ -0,0 +1,98 @@
-+<?xml version="1.0" encoding="UTF-8"?>
-+<CodeBlocks_project_file>
-+	<FileVersion major="1" minor="6"/>
-+	<Project>
-+		<Option title="dry"/>
-+		<Option makefile_is_custom="1"/>
-+		<Option compiler="gcc"/>
-+		<Option virtualFolders="CMake Files\;"/>
-+		<Build>
-+			<Target title="all">
-+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
-+				<Option type="4"/>
-+				<MakeCommands>
-+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
-+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+				</MakeCommands>
-+			</Target>
-+			<Target title="dry">
-+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
-+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
-+				<Option object_output="./"/>
-+				<Option type="1"/>
-+				<Option compiler="gcc"/>
-+				<Compiler>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
-+				</Compiler>
-+				<MakeCommands>
-+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry"/>
-+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+				</MakeCommands>
-+			</Target>
-+			<Target title="dry/fast">
-+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
-+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
-+				<Option object_output="./"/>
-+				<Option type="1"/>
-+				<Option compiler="gcc"/>
-+				<Compiler>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
-+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
-+				</Compiler>
-+				<MakeCommands>
-+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry/fast"/>
-+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+				</MakeCommands>
-+			</Target>
-+			<Target title="edit_cache">
-+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
-+				<Option type="4"/>
-+				<MakeCommands>
-+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
-+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+				</MakeCommands>
-+			</Target>
-+			<Target title="rebuild_cache">
-+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
-+				<Option type="4"/>
-+				<MakeCommands>
-+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
-+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
-+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
-+				</MakeCommands>
-+			</Target>
-+		</Build>
-+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp">
-+			<Option target="dry"/>
-+		</Unit>
-+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h">
-+			<Option target="dry"/>
-+		</Unit>
-+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp">
-+			<Option target="dry"/>
-+		</Unit>
-+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/CMakeLists.txt">
-+			<Option virtualFolder="CMake Files\"/>
-+		</Unit>
-+	</Project>
-+</CodeBlocks_project_file>
-diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
-new file mode 100644
-index 0000000..768c9c7
-Binary files /dev/null and b/dry/cmake-build-debug/dry.exe differ
-diff --git a/dry/main.cpp b/dry/main.cpp
-index 6b659a1..bc8f460 100755
---- a/dry/main.cpp
-+++ b/dry/main.cpp
-@@ -1,25 +1,6 @@
- #include <iostream>
--#include "Pirate.h"
--#include <cstring>
--
--using std::cout, std::endl;
--
- 
- int main() {
--
--    Pirate luffy("Luffy");
--    Pirate zoro("Zoro");
--
--    const int crewSize = 2;
--    
--    Pirate strawHatCrew[2];
--    strawHatCrew[0] = luffy;
--    strawHatCrew[1] = zoro;
--    
--    cout << "Straw Hat crew contains:" << endl;
--    for (int i = 0; i < crewSize; i++) {
--        cout << strawHatCrew[i] << endl;
--    }
--
-+    std::cout << "Hello, World!" << std::endl;
-     return 0;
- }
-
-commit 67a992620c204243a3c94749804df35fcebbf6d3
-Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
-Date:   Fri Dec 13 02:44:01 2024 +0200
-
-    [Feature] Add devil fruit feature
-
-diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
-index c96892e..fc3c314 100755
---- a/dry/Pirate.cpp
-+++ b/dry/Pirate.cpp
-@@ -2,7 +2,7 @@
- #include "Pirate.h"
- 
- 
--Pirate::Pirate(const string& name): name(name) {}
-+Pirate::Pirate(const string& name, DEVIL_FRUIT devilFruit): name(name), devilFruit(devilFruit) {}
- 
- 
- void Pirate::setName(const string& name){
-@@ -10,12 +10,32 @@ void Pirate::setName(const string& name){
- }
- 
- 
-+void Pirate::setDevilFruit(DEVIL_FRUIT devilFruit){
-+    this->devilFruit = devilFruit;
-+}
-+
-+
- std::string Pirate::getName(){
-     return name;
- }
- 
- 
-+DEVIL_FRUIT Pirate::getDevilFruit(){
-+    return devilFruit;
-+}
-+
-+
-+const char* const devilFruitNames[] = {
-+    "Gum Gum",
-+    "Smoke Smoke",
-+    "Flame Flame",
-+    "Rumble Rumble",
-+    "String String",
-+    "Ice Ice",
-+    "None"
-+};
-+
- std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
--    os << pirate.name;
-+    os << pirate.name << " (Devil Fruit: " << devilFruitNames[pirate.devilFruit] << ")";
-     return os;
- }
-diff --git a/dry/Pirate.h b/dry/Pirate.h
-index 7769667..4c044b1 100755
---- a/dry/Pirate.h
-+++ b/dry/Pirate.h
-@@ -5,18 +5,31 @@
- 
- using std::string;
- 
-+enum DEVIL_FRUIT {
-+    GUM_GUM_FRUIT,
-+    SMOKE_SMOKE_FRUIT,
-+    FLAME_FLAME_FRUIT,
-+    RUMBLE_RUMBLE_FRUIT,
-+    STRING_STRING_FRUIT,
-+    ICE_ICE_FRUIT,
-+    NONE
-+};
-+
- class Pirate {
- private:
-     string name;
-+    DEVIL_FRUIT devilFruit;
- 
- public:
--    Pirate(const string& name);
-+    Pirate(const string& name, DEVIL_FRUIT devilFruit = DEVIL_FRUIT::NONE);
- 
-     ~Pirate() = default;
- 
-     void setName(const string& name);
-+    void setDevilFruit(DEVIL_FRUIT devilFruit);
- 
-     string getName();
-+    DEVIL_FRUIT getDevilFruit();
- 
-     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
- };
-diff --git a/dry/main.cpp b/dry/main.cpp
-index 6b659a1..2911f71 100755
---- a/dry/main.cpp
-+++ b/dry/main.cpp
-@@ -7,7 +7,7 @@ using std::cout, std::endl;
- 
- int main() {
- 
--    Pirate luffy("Luffy");
-+    Pirate luffy("Luffy", GUM_GUM_FRUIT);
-     Pirate zoro("Zoro");
- 
-     const int crewSize = 2;
-
-commit 74f6b97bc53ce50d65642ddedae20581be903ddf
-Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
-Date:   Fri Dec 13 02:41:38 2024 +0200
-
-    Initial Commit
-
-diff --git a/README.md b/README.md
-new file mode 100644
-index 0000000..0a4b9a1
---- /dev/null
-+++ b/README.md
-@@ -0,0 +1,7 @@
-+# Matam Homework 2
-+
-+This repository contains all supplied files for the second homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
-+
-+You may find the full instructions for this assignment on the [course's website](https://webcourse.cs.technion.ac.il/02340124/Winter2024-2025).
-+
-+Good luck and have fun!
-diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
-new file mode 100755
-index 0000000..c96892e
---- /dev/null
-+++ b/dry/Pirate.cpp
-@@ -0,0 +1,21 @@
-+
-+#include "Pirate.h"
-+
-+
-+Pirate::Pirate(const string& name): name(name) {}
-+
-+
-+void Pirate::setName(const string& name){
-+    this->name = name;
-+}
-+
-+
-+std::string Pirate::getName(){
-+    return name;
-+}
-+
-+
-+std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
-+    os << pirate.name;
-+    return os;
-+}
-diff --git a/dry/Pirate.h b/dry/Pirate.h
-new file mode 100755
-index 0000000..7769667
---- /dev/null
-+++ b/dry/Pirate.h
-@@ -0,0 +1,22 @@
-+
-+#pragma once
-+
-+#include <iostream>
-+
-+using std::string;
-+
-+class Pirate {
-+private:
-+    string name;
-+
-+public:
-+    Pirate(const string& name);
-+
-+    ~Pirate() = default;
-+
-+    void setName(const string& name);
-+
-+    string getName();
-+
-+    friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
-+};
-diff --git a/dry/main.cpp b/dry/main.cpp
-new file mode 100755
-index 0000000..6b659a1
---- /dev/null
-+++ b/dry/main.cpp
-@@ -0,0 +1,25 @@
-+#include <iostream>
-+#include "Pirate.h"
-+#include <cstring>
-+
-+using std::cout, std::endl;
-+
-+
-+int main() {
-+
-+    Pirate luffy("Luffy");
-+    Pirate zoro("Zoro");
-+
-+    const int crewSize = 2;
-+    
-+    Pirate strawHatCrew[2];
-+    strawHatCrew[0] = luffy;
-+    strawHatCrew[1] = zoro;
-+    
-+    cout << "Straw Hat crew contains:" << endl;
-+    for (int i = 0; i < crewSize; i++) {
-+        cout << strawHatCrew[i] << endl;
-+    }
-+
-+    return 0;
-+}
-diff --git a/wet/Utilities.cpp b/wet/Utilities.cpp
-new file mode 100755
-index 0000000..c35944f
---- /dev/null
-+++ b/wet/Utilities.cpp
-@@ -0,0 +1,23 @@
-+
-+#include "Utilities.h"
-+
-+#include <iostream>
-+
-+using std::cerr;
-+
-+
-+void exitWithError(MatamErrorType error) {
-+    std::cerr << "Matam Error: ";
-+    switch (error) {
-+        case MatamErrorType::UnmatchedSizes:
-+            std::cerr << "Unmatched matrices" << std::endl;
-+            break;
-+        case MatamErrorType::OutOfBounds:
-+            std::cerr << "Out of bounds" << std::endl;
-+            break;
-+        case MatamErrorType::NotSquareMatrix:
-+            std::cerr << "Matrix must be square to calculate determinant" << std::endl;
-+            break;
-+    }
-+    exit(1);
-+}
-diff --git a/wet/Utilities.h b/wet/Utilities.h
-new file mode 100755
-index 0000000..c07958d
---- /dev/null
-+++ b/wet/Utilities.h
-@@ -0,0 +1,10 @@
-+
-+#pragma once
-+
-+enum class MatamErrorType {
-+    UnmatchedSizes,
-+    OutOfBounds,
-+    NotSquareMatrix
-+};
-+
-+void exitWithError(MatamErrorType error);
-diff --git a/wet/test.expected b/wet/test.expected
-new file mode 100755
-index 0000000..d107ab8
---- /dev/null
-+++ b/wet/test.expected
-@@ -0,0 +1,19 @@
-+|5|6|
-+|7|8|
-+
-+Movie Name: MataMatrix
-+Author: Baraa Egbaria
-+
-+Frame 0:
-+|1|2|
-+|3|4|
-+
-+Frame 1:
-+|5|6|
-+|7|8|
-+
-+Frame 2:
-+|1|2|
-+|3|4|
-+
-+-----End of Movie-----
-diff --git a/wet/tests.cpp b/wet/tests.cpp
-new file mode 100755
-index 0000000..d8bc5a7
---- /dev/null
-+++ b/wet/tests.cpp
-@@ -0,0 +1,130 @@
-+
-+
-+#include <string>
-+#include <iostream>
-+
-+#include "Matrix.h"
-+#include "MataMvidia.h"
-+
-+using namespace std;
-+typedef bool (*testFunc)(void);
-+
-+bool testMatrix(std::ostream& out);
-+bool testMataMvidia(std::ostream& out);
-+
-+
-+#define ASSERT_TEST(expr)                                                      \
-+do {                                                                           \
-+    if (!(expr)) {                                                             \
-+        std::cout << "\nAssertion failed at ";                                 \
-+        std::cout << __FILE__ << ":" << __LINE__ << ": " << #expr << std::endl;\
-+        exit(1);                                                               \
-+    }                                                                          \
-+} while (0)
-+
-+
-+int main() {
-+    testMatrix(std::cout);
-+    testMataMvidia(std::cout);
-+    return 0;
-+}
-+
-+bool testMatrix(std::ostream& out) {
-+    Matrix m1(2,2);
-+    Matrix m2(2,2);
-+
-+    m1(0,0) = 1;
-+    m1(0,1) = 2;
-+    m1(1,0) = 3;
-+    m1(1,1) = 4;
-+
-+    m2(0,0) = 5;
-+    m2(0,1) = 6;
-+    m2(1,0) = 7;
-+    m2(1,1) = 8;
-+
-+    Matrix m3 = m1 + m2;
-+    ASSERT_TEST(m3(0,0) == 6);
-+    ASSERT_TEST(m3(0,1) == 8);
-+    ASSERT_TEST(m3(1,0) == 10);
-+    ASSERT_TEST(m3(1,1) == 12);
-+
-+    Matrix m4 = m1 * m2;
-+    m4 *= 1;
-+    ASSERT_TEST(m4(0,0) == 19);
-+    ASSERT_TEST(m4(0,1) == 22);
-+    ASSERT_TEST(m4(1,0) == 43);
-+    ASSERT_TEST(m4(1,1) == 50);
-+
-+    m1 += m2;
-+    m1 *= m2;
-+    m1 -= m2;
-+    m1 = m3 - m2;
-+
-+    ASSERT_TEST(-m1 == -1*m1);
-+    ASSERT_TEST(-m1 == m1*-1);
-+
-+    ASSERT_TEST(m2.rotateClockwise().rotateCounterClockwise() == m2);
-+
-+    ASSERT_TEST(m1.transpose().transpose() == m1);
-+
-+    out << m2 << std::endl;
-+
-+    return true;
-+}
-+
-+bool testMataMvidia(std::ostream& out) {
-+    Matrix frame1(2,2);
-+    Matrix frame2(2,2);
-+
-+    frame1(0,0) = 1;
-+    frame1(0,1) = 2;
-+    frame1(1,0) = 3;
-+    frame1(1,1) = 4;
-+
-+    frame2(0,0) = 5;
-+    frame2(0,1) = 6;
-+    frame2(1,0) = 7;
-+    frame2(1,1) = 8;
-+
-+    Matrix array[2];
-+    array[0] = frame1;
-+    array[1] = frame2;
-+
-+    MataMvidia movie("MataMatrix","Baraa Egbaria",array, 2);
-+
-+    ASSERT_TEST(movie[0] == frame1);
-+
-+    movie += frame1;
-+
-+    ASSERT_TEST(movie[2] == frame1);
-+
-+    Matrix frame01(2,2);
-+    Matrix frame11(2,2);
-+
-+    frame01(0,0) = 10;
-+    frame01(0,1) = 20;
-+    frame01(1,0) = 30;
-+    frame01(1,1) = 40;
-+
-+    frame11(0,0) = 50;
-+    frame11(0,1) = 60;
-+    frame11(1,0) = 70;
-+    frame11(1,1) = 80;
-+
-+    Matrix array1[2];
-+    array1[0] = frame01;
-+    array1[1] = frame11;
-+
-+    MataMvidia movie1("MataMatrix and the chamber of secrets","Baraa Egbaria",array1, 2);
-+
-+    ASSERT_TEST(movie1[0] == frame01);
-+
-+    //test output
-+    out << movie;
-+
-+    MataMvidia movie2 = movie + movie1;
-+    movie += movie1;
-+
-+    return true;
-+}
diff --git a/wet/Utilities.cpp b/wet/Utilities.cpp
deleted file mode 100755
index c35944f..0000000
--- a/wet/Utilities.cpp
+++ /dev/null
@@ -1,23 +0,0 @@
-
-#include "Utilities.h"
-
-#include <iostream>
-
-using std::cerr;
-
-
-void exitWithError(MatamErrorType error) {
-    std::cerr << "Matam Error: ";
-    switch (error) {
-        case MatamErrorType::UnmatchedSizes:
-            std::cerr << "Unmatched matrices" << std::endl;
-            break;
-        case MatamErrorType::OutOfBounds:
-            std::cerr << "Out of bounds" << std::endl;
-            break;
-        case MatamErrorType::NotSquareMatrix:
-            std::cerr << "Matrix must be square to calculate determinant" << std::endl;
-            break;
-    }
-    exit(1);
-}
diff --git a/wet/test.expected b/wet/test.expected
deleted file mode 100755
index d107ab8..0000000
--- a/wet/test.expected
+++ /dev/null
@@ -1,19 +0,0 @@
-|5|6|
-|7|8|
-
-Movie Name: MataMatrix
-Author: Baraa Egbaria
-
-Frame 0:
-|1|2|
-|3|4|
-
-Frame 1:
-|5|6|
-|7|8|
-
-Frame 2:
-|1|2|
-|3|4|
-
------End of Movie-----

commit d816244a99411b135b268f0c64f68cc42834bf32
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 00:54:54 2024 +0200

    log.txt

diff --git a/dry/.idea/.gitignore b/dry/.idea/.gitignore
deleted file mode 100644
index 634d575..0000000
--- a/dry/.idea/.gitignore
+++ /dev/null
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Datasource local storage ignored files
-/../../../../../../../../../:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\.idea/dataSources/
-/dataSources.local.xml
-# Editor-based HTTP Client requests
-/httpRequests/
diff --git a/dry/.idea/workspace.xml b/dry/.idea/workspace.xml
new file mode 100644
index 0000000..d5fe9c4
--- /dev/null
+++ b/dry/.idea/workspace.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakeSettings">
+    <configurations>
+      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
+    </configurations>
+  </component>
+  <component name="RunManager">
+    <configuration default="true" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="dry" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="dry" TARGET_NAME="dry" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="dry" RUN_TARGET_NAME="dry">
+      <method v="2">
+        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
+      <method v="2">
+        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+</project>
\ No newline at end of file
diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
index 0f47da2..da7ee5c 100644
--- a/dry/Pirate.cpp
+++ b/dry/Pirate.cpp
@@ -3,7 +3,7 @@
 
 
 
-Pirate::Pirate(const string& name, DEVIL_FRUIT devilFruit): name(name),bounty(bounty), devilFruit(devilFruit) {}
+Pirate::Pirate(const string& name,int bounty, DEVIL_FRUIT devilFruit): name(name),bounty(bounty), devilFruit(devilFruit) {}
 
 
 void Pirate::setName(const string& name){
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
index 7fab13b..f7af6b7 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
index 2ac5395..b5667a8 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
index df42f13..48eb81c 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
index 916985a..abb28bf 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
index 6b7a874..e32660a 100644
--- a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
+++ b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
@@ -28,15 +28,15 @@ The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Tech
 Determining if the C compiler works passed with the following output:
 Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_16a13/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_16a13.dir\build.make CMakeFiles/cmTC_16a13.dir/build
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_5e170/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_5e170.dir\build.make CMakeFiles/cmTC_5e170.dir/build
 mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building C object CMakeFiles/cmTC_16a13.dir/testCCompiler.c.obj
-C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_16a13.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
-Linking C executable cmTC_16a13.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_16a13.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_16a13.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_16a13.dir/objects.a @CMakeFiles\cmTC_16a13.dir\objects1.rsp
-C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_16a13.dir/objects.a -Wl,--no-whole-archive  -o cmTC_16a13.exe -Wl,--out-implib,libcmTC_16a13.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_16a13.dir\linklibs.rsp
+Building C object CMakeFiles/cmTC_5e170.dir/testCCompiler.c.obj
+C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_5e170.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
+Linking C executable cmTC_5e170.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_5e170.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_5e170.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_5e170.dir/objects.a @CMakeFiles\cmTC_5e170.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_5e170.dir/objects.a -Wl,--no-whole-archive  -o cmTC_5e170.exe -Wl,--out-implib,libcmTC_5e170.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_5e170.dir\linklibs.rsp
 mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
@@ -44,18 +44,18 @@ mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Docum
 Detecting C compiler ABI info compiled with the following output:
 Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_963e1/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_963e1.dir\build.make CMakeFiles/cmTC_963e1.dir/build
 mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj
-C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
+Building C object CMakeFiles/cmTC_963e1.dir/CMakeCCompilerABI.c.obj
+C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
 Target: x86_64-w64-mingw32
 Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
 Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s
 GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
 
@@ -76,17 +76,17 @@ GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 
 GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s
 GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
-Linking C executable cmTC_882c2.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp
-C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl,--no-whole-archive  -o cmTC_882c2.exe -Wl,--out-implib,libcmTC_882c2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking C executable cmTC_963e1.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_963e1.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_963e1.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_963e1.dir/objects.a @CMakeFiles\cmTC_963e1.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_963e1.dir/objects.a -Wl,--no-whole-archive  -o cmTC_963e1.exe -Wl,--out-implib,libcmTC_963e1.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
 COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
@@ -96,9 +96,9 @@ Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_963e1.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a --no-whole-archive --out-implib libcmTC_963e1.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64'
 mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
@@ -122,18 +122,18 @@ Parsed C implicit link information from above output:
   link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
   ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
   ignore line: []
-  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build]
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_963e1/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_963e1.dir\build.make CMakeFiles/cmTC_963e1.dir/build]
   ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-  ignore line: [Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj]
-  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
+  ignore line: [Building C object CMakeFiles/cmTC_963e1.dir/CMakeCCompilerABI.c.obj]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
   ignore line: [Target: x86_64-w64-mingw32]
   ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
   ignore line: [Thread model: posix]
   ignore line: [gcc version 9.2.0 (tdm64-1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s]
   ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
   ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
   ignore line: []
@@ -154,8 +154,8 @@ Parsed C implicit link information from above output:
   ignore line: []
   ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
   ignore line: [Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\ccTVV1sK.s]
   ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
   ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
   ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
@@ -166,12 +166,12 @@ Parsed C implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [Linking C executable cmTC_882c2.exe]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a]
-  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp]
-  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl --no-whole-archive  -o cmTC_882c2.exe -Wl --out-implib libcmTC_882c2.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_963e1.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking C executable cmTC_963e1.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_963e1.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_963e1.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_963e1.dir/objects.a @CMakeFiles\cmTC_963e1.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a -Wl --no-whole-archive  -o cmTC_963e1.exe -Wl --out-implib libcmTC_963e1.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
   ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
@@ -188,13 +188,13 @@ Parsed C implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64']
-  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_963e1.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_963e1.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_963e1.dir/objects.a --no-whole-archive --out-implib libcmTC_963e1.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
     arg [-plugin] ==> ignore
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
     arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqYSODb.res] ==> ignore
     arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
     arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
@@ -215,7 +215,7 @@ Parsed C implicit link information from above output:
     arg [--exclude-libs=libpthread.a] ==> ignore
     arg [-Bdynamic] ==> ignore
     arg [-o] ==> ignore
-    arg [cmTC_882c2.exe] ==> ignore
+    arg [cmTC_963e1.exe] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
@@ -225,10 +225,10 @@ Parsed C implicit link information from above output:
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
     arg [--whole-archive] ==> ignore
-    arg [CMakeFiles\cmTC_882c2.dir/objects.a] ==> ignore
+    arg [CMakeFiles\cmTC_963e1.dir/objects.a] ==> ignore
     arg [--no-whole-archive] ==> ignore
     arg [--out-implib] ==> ignore
-    arg [libcmTC_882c2.dll.a] ==> ignore
+    arg [libcmTC_963e1.dll.a] ==> ignore
     arg [--major-image-version] ==> ignore
     arg [0] ==> ignore
     arg [--minor-image-version] ==> ignore
@@ -266,15 +266,15 @@ Parsed C implicit link information from above output:
 Determining if the CXX compiler works passed with the following output:
 Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_6e85e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_6e85e.dir\build.make CMakeFiles/cmTC_6e85e.dir/build
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_cc2e5/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_cc2e5.dir\build.make CMakeFiles/cmTC_cc2e5.dir/build
 mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_6e85e.dir/testCXXCompiler.cxx.obj
-C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_6e85e.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
-Linking CXX executable cmTC_6e85e.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_6e85e.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_6e85e.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_6e85e.dir/objects.a @CMakeFiles\cmTC_6e85e.dir\objects1.rsp
-C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_6e85e.dir/objects.a -Wl,--no-whole-archive  -o cmTC_6e85e.exe -Wl,--out-implib,libcmTC_6e85e.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_6e85e.dir\linklibs.rsp
+Building CXX object CMakeFiles/cmTC_cc2e5.dir/testCXXCompiler.cxx.obj
+C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_cc2e5.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
+Linking CXX executable cmTC_cc2e5.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_cc2e5.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_cc2e5.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_cc2e5.dir/objects.a @CMakeFiles\cmTC_cc2e5.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_cc2e5.dir/objects.a -Wl,--no-whole-archive  -o cmTC_cc2e5.exe -Wl,--out-implib,libcmTC_cc2e5.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_cc2e5.dir\linklibs.rsp
 mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
@@ -282,18 +282,18 @@ mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Docum
 Detecting CXX compiler ABI info compiled with the following output:
 Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
 
-Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_db99a/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_db99a.dir\build.make CMakeFiles/cmTC_db99a.dir/build
 mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
-Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj
-C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
+Building CXX object CMakeFiles/cmTC_db99a.dir/CMakeCXXCompilerABI.cpp.obj
+C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
 Target: x86_64-w64-mingw32
 Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
 Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s
 GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
 
@@ -320,17 +320,17 @@ GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
 
 GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
 Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s
 GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
-Linking CXX executable cmTC_bedbe.exe
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1
-"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a
-C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp
-C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl,--no-whole-archive  -o cmTC_bedbe.exe -Wl,--out-implib,libcmTC_bedbe.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking CXX executable cmTC_db99a.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_db99a.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_db99a.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_db99a.dir/objects.a @CMakeFiles\cmTC_db99a.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_db99a.dir/objects.a -Wl,--no-whole-archive  -o cmTC_db99a.exe -Wl,--out-implib,libcmTC_db99a.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
 Using built-in specs.
 COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
 COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
@@ -340,9 +340,9 @@ Thread model: posix
 gcc version 9.2.0 (tdm64-1) 
 COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
 LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
- C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
-COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_db99a.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a --no-whole-archive --out-implib libcmTC_db99a.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64'
 mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
 
 
@@ -372,18 +372,18 @@ Parsed CXX implicit link information from above output:
   link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
   ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
   ignore line: []
-  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build]
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_db99a/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_db99a.dir\build.make CMakeFiles/cmTC_db99a.dir/build]
   ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
-  ignore line: [Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj]
-  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
+  ignore line: [Building CXX object CMakeFiles/cmTC_db99a.dir/CMakeCXXCompilerABI.cpp.obj]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
   ignore line: [Target: x86_64-w64-mingw32]
   ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
   ignore line: [Thread model: posix]
   ignore line: [gcc version 9.2.0 (tdm64-1) ]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s]
   ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
   ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
   ignore line: []
@@ -410,8 +410,8 @@ Parsed CXX implicit link information from above output:
   ignore line: []
   ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
   ignore line: [Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccm1na6w.s]
   ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
   ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
   ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
@@ -422,12 +422,12 @@ Parsed CXX implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
-  ignore line: [Linking CXX executable cmTC_bedbe.exe]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1]
-  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a]
-  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp]
-  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl --no-whole-archive  -o cmTC_bedbe.exe -Wl --out-implib libcmTC_bedbe.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_db99a.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking CXX executable cmTC_db99a.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_db99a.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_db99a.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_db99a.dir/objects.a @CMakeFiles\cmTC_db99a.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a -Wl --no-whole-archive  -o cmTC_db99a.exe -Wl --out-implib libcmTC_db99a.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
   ignore line: [Using built-in specs.]
   ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
   ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
@@ -444,13 +444,13 @@ Parsed CXX implicit link information from above output:
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
   ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
-  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64']
-  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_db99a.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_db99a.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_db99a.dir/objects.a --no-whole-archive --out-implib libcmTC_db99a.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
     arg [-plugin] ==> ignore
     arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
     arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
-    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccgopUqY.res] ==> ignore
     arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
     arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
     arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
@@ -471,7 +471,7 @@ Parsed CXX implicit link information from above output:
     arg [--exclude-libs=libpthread.a] ==> ignore
     arg [-Bdynamic] ==> ignore
     arg [-o] ==> ignore
-    arg [cmTC_bedbe.exe] ==> ignore
+    arg [cmTC_db99a.exe] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
     arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
@@ -481,10 +481,10 @@ Parsed CXX implicit link information from above output:
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
     arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
     arg [--whole-archive] ==> ignore
-    arg [CMakeFiles\cmTC_bedbe.dir/objects.a] ==> ignore
+    arg [CMakeFiles\cmTC_db99a.dir/objects.a] ==> ignore
     arg [--no-whole-archive] ==> ignore
     arg [--out-implib] ==> ignore
-    arg [libcmTC_bedbe.dll.a] ==> ignore
+    arg [libcmTC_db99a.dll.a] ==> ignore
     arg [--major-image-version] ==> ignore
     arg [0] ==> ignore
     arg [--minor-image-version] ==> ignore
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
index 656acfb..62c9b3e 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
index 8b64ffd..a85a708 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
index 0a3d353..573a4d5 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
index 795c51e..c2bf35d 100644
Binary files a/dry/cmake-build-debug/dry.exe and b/dry/cmake-build-debug/dry.exe differ
diff --git a/dry/log.txt b/dry/log.txt
new file mode 100644
index 0000000..ea22256
--- /dev/null
+++ b/dry/log.txt
@@ -0,0 +1,4407 @@
+commit 6aab0ebca949f9d5671e40b3c8fd1b71379a4908
+Merge: b3ba67d 67a9926
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sun Dec 29 00:16:45 2024 +0200
+
+    Merge branch 'devil_fruit'
+
+commit b3ba67d97db771e212417253b02af29f761b363f
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sun Dec 29 00:00:44 2024 +0200
+
+    3.3 - extending the program
+
+diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
+index c96892e..fc56fe0 100755
+--- a/dry/Pirate.cpp
++++ b/dry/Pirate.cpp
+@@ -2,20 +2,27 @@
+ #include "Pirate.h"
+ 
+ 
+-Pirate::Pirate(const string& name): name(name) {}
++Pirate::Pirate(const string& name,int bounty): name(name) ,bounty(bounty){}
+ 
+ 
+ void Pirate::setName(const string& name){
+     this->name = name;
+ }
+ 
++void Pirate::setBounty(int bounty) {
++    this->bounty = bounty;
++}
++
++int Pirate::getBounty() const {
++    return bounty;
++}
+ 
+ std::string Pirate::getName(){
+     return name;
+ }
+ 
+ 
+-std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
+-    os << pirate.name;
++std::ostream &operator<<(std::ostream &os, const Pirate &pirate) {
++    os << "Pirate: " << pirate.name << ", Bounty: " << pirate.bounty; // Updated output
+     return os;
+ }
+diff --git a/dry/Pirate.h b/dry/Pirate.h
+index 39a883a..2ec3a2d 100755
+--- a/dry/Pirate.h
++++ b/dry/Pirate.h
+@@ -8,9 +8,11 @@ using std::string;
+ class Pirate {
+ private:
+     string name;
++    int bounty;
++
+ 
+ public:
+-    Pirate(const string& name);
++    Pirate(const string& name,int bounty);
+ 
+     Pirate() = default;
+ 
+@@ -19,6 +21,8 @@ public:
+     void setName(const string& name);
+ 
+     string getName();
++    void setBounty(int bounty);
+ 
++    int getBounty() const;
+     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
+ };
+diff --git a/dry/main.cpp b/dry/main.cpp
+index ea71e37..9261be1 100755
+--- a/dry/main.cpp
++++ b/dry/main.cpp
+@@ -7,8 +7,8 @@ using std::cout, std::endl;
+ 
+ int main() {
+ 
+-    Pirate luffy("Luffy");
+-    Pirate zoro("Zoro");
++    Pirate luffy("Luffy",1000000);
++    Pirate zoro("Zoro",500000);
+ 
+     const int crewSize = 2;
+ 
+
+commit 5fdae2d23c4f337cd61a9eaf0c1eef526a1ec88c
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sat Dec 28 23:51:00 2024 +0200
+
+    switching to c++ 17
+
+diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
+index 1d63d19..6a08078 100644
+--- a/dry/CMakeLists.txt
++++ b/dry/CMakeLists.txt
+@@ -1,6 +1,6 @@
+ cmake_minimum_required(VERSION 3.17)
+ project(dry)
+ 
+-set(CMAKE_CXX_STANDARD 14)
++set(CMAKE_CXX_STANDARD 17)
+ 
+ add_executable(dry main.cpp Pirate.cpp Pirate.h)
+\ No newline at end of file
+diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
+deleted file mode 100644
+index 7b4d68d..0000000
+--- a/dry/cmake-build-debug/CMakeFiles/Progress/1
++++ /dev/null
+@@ -1 +0,0 @@
+-empty
+\ No newline at end of file
+diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
+deleted file mode 100644
+index 00750ed..0000000
+--- a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
++++ /dev/null
+@@ -1 +0,0 @@
+-3
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+index 1842398..dcff284 100644
+--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+@@ -6,6 +6,10 @@
+ 
+ #IncludeRegexTransform: 
+ 
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
++Pirate.h
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+ iostream
+ -
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
+index 458c3e0..656acfb 100644
+Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
+index dee4354..d1f851f 100644
+--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
+@@ -2,7 +2,7 @@
+ # Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+ 
+ # compile CXX with C:/TDM-GCC-64/bin/g++.exe
+-CXX_FLAGS = -g   -std=gnu++14
++CXX_FLAGS = -g   -std=gnu++17
+ 
+ CXX_DEFINES = 
+ 
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
+new file mode 100644
+index 0000000..8b64ffd
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
+index 7fd194a..0a3d353 100644
+Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
+diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
+index 768c9c7..795c51e 100644
+Binary files a/dry/cmake-build-debug/dry.exe and b/dry/cmake-build-debug/dry.exe differ
+
+commit ada39baffc007a678dc86423012942a6990f86e2
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sat Dec 28 23:50:51 2024 +0200
+
+    first fix - adding default cto'r
+
+diff --git a/dry/Pirate.h b/dry/Pirate.h
+index 7769667..39a883a 100755
+--- a/dry/Pirate.h
++++ b/dry/Pirate.h
+@@ -12,6 +12,8 @@ private:
+ public:
+     Pirate(const string& name);
+ 
++    Pirate() = default;
++
+     ~Pirate() = default;
+ 
+     void setName(const string& name);
+
+commit 3d05a61fb9c3223fd7d16e60b9ba9884924e19e6
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sat Dec 28 23:48:25 2024 +0200
+
+    revert changes in main
+
+diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
+new file mode 100644
+index 0000000..7b4d68d
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/Progress/1
+@@ -0,0 +1 @@
++empty
+\ No newline at end of file
+diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
+new file mode 100644
+index 0000000..00750ed
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
+@@ -0,0 +1 @@
++3
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+index 79f3388..1842398 100644
+--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+@@ -6,11 +6,15 @@
+ 
+ #IncludeRegexTransform: 
+ 
+-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
+-Pirate.h
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++iostream
++-
+ 
+-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
+ iostream
+ -
++Pirate.h
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++cstring
++-
+ 
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+index 51eeb9b..d191e23 100644
+--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+@@ -5,4 +5,5 @@ CMakeFiles/dry.dir/Pirate.cpp.obj
+  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
+  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+ CMakeFiles/dry.dir/main.cpp.obj
++ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+index 3b9c994..19c8fb9 100644
+--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+@@ -4,5 +4,6 @@
+ CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
+ CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
+ 
++CMakeFiles/dry.dir/main.cpp.obj: ../Pirate.h
+ CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
+ 
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
+deleted file mode 100644
+index 052a66b..0000000
+Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj and /dev/null differ
+diff --git a/dry/main.cpp b/dry/main.cpp
+index bc8f460..ea71e37 100755
+--- a/dry/main.cpp
++++ b/dry/main.cpp
+@@ -1,6 +1,25 @@
+ #include <iostream>
++#include "Pirate.h"
++#include <cstring>
++
++using std::cout, std::endl;
++
+ 
+ int main() {
+-    std::cout << "Hello, World!" << std::endl;
++
++    Pirate luffy("Luffy");
++    Pirate zoro("Zoro");
++
++    const int crewSize = 2;
++
++    Pirate strawHatCrew[2];
++    strawHatCrew[0] = luffy;
++    strawHatCrew[1] = zoro;
++
++    cout << "Straw Hat crew contains:" << endl;
++    for (int i = 0; i < crewSize; i++) {
++        cout << strawHatCrew[i] << endl;
++    }
++
+     return 0;
+-}
++}
+\ No newline at end of file
+
+commit e7b2c938044dcdb20c43620a9c9810694ad6c907
+Author: nooryass <nooryassin059@gmail.com>
+Date:   Sat Dec 28 23:46:11 2024 +0200
+
+    init
+
+diff --git a/.idea/HW2_2425A.iml b/.idea/HW2_2425A.iml
+new file mode 100644
+index 0000000..bc2cd87
+--- /dev/null
++++ b/.idea/HW2_2425A.iml
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<module type="CPP_MODULE" version="4">
++  <component name="NewModuleRootManager">
++    <content url="file://$MODULE_DIR$" />
++    <orderEntry type="inheritedJdk" />
++    <orderEntry type="sourceFolder" forTests="false" />
++  </component>
++</module>
+\ No newline at end of file
+diff --git a/.idea/modules.xml b/.idea/modules.xml
+new file mode 100644
+index 0000000..9c699dc
+--- /dev/null
++++ b/.idea/modules.xml
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectModuleManager">
++    <modules>
++      <module fileurl="file://$PROJECT_DIR$/.idea/HW2_2425A.iml" filepath="$PROJECT_DIR$/.idea/HW2_2425A.iml" />
++    </modules>
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/.idea/vcs.xml b/.idea/vcs.xml
+new file mode 100644
+index 0000000..94a25f7
+--- /dev/null
++++ b/.idea/vcs.xml
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="$PROJECT_DIR$" vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+new file mode 100644
+index 0000000..681113a
+--- /dev/null
++++ b/.idea/workspace.xml
+@@ -0,0 +1,68 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
++    <generated />
++  </component>
++  <component name="CMakeSettings">
++    <configurations>
++      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
++    </configurations>
++  </component>
++  <component name="ChangeListManager">
++    <list default="true" id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
++    <option name="SHOW_DIALOG" value="false" />
++    <option name="HIGHLIGHT_CONFLICTS" value="true" />
++    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
++    <option name="LAST_RESOLUTION" value="IGNORE" />
++  </component>
++  <component name="ClangdSettings">
++    <option name="formatViaClangd" value="false" />
++  </component>
++  <component name="Git.Settings">
++    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
++  </component>
++  <component name="ProjectId" id="2qrXyuysjftbJsYtr5fXKioj3ZV" />
++  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
++  <component name="ProjectViewState">
++    <option name="hideEmptyMiddlePackages" value="true" />
++    <option name="showLibraryContents" value="true" />
++  </component>
++  <component name="PropertiesComponent">
++    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
++    <property name="WebServerToolWindowFactoryState" value="false" />
++    <property name="cf.first.check.clang-format" value="false" />
++    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
++  </component>
++  <component name="RunManager">
++    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
++      <method v="2">
++        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
++      </method>
++    </configuration>
++  </component>
++  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
++  <component name="TaskManager">
++    <task active="true" id="Default" summary="Default task">
++      <changelist id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
++      <created>1735421926159</created>
++      <option name="number" value="Default" />
++      <option name="presentableId" value="Default" />
++      <updated>1735421926159</updated>
++      <workItem from="1735421929242" duration="213000" />
++    </task>
++    <servers />
++  </component>
++  <component name="TypeScriptGeneratedFilesManager">
++    <option name="version" value="3" />
++  </component>
++  <component name="WindowStateProjectService">
++    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1735421978514">
++      <screen x="0" y="0" width="1536" height="824" />
++    </state>
++    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1536.824@0.0.1536.824" timestamp="1735421978514" />
++    <state x="549" y="153" key="FileChooserDialogImpl" timestamp="1735422132361">
++      <screen x="0" y="0" width="1536" height="824" />
++    </state>
++    <state x="549" y="153" key="FileChooserDialogImpl/0.0.1536.824@0.0.1536.824" timestamp="1735422132361" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/dry/.idea/.gitignore b/dry/.idea/.gitignore
+new file mode 100644
+index 0000000..634d575
+--- /dev/null
++++ b/dry/.idea/.gitignore
+@@ -0,0 +1,8 @@
++# Default ignored files
++/shelf/
++/workspace.xml
++# Datasource local storage ignored files
++/../../../../../../../../../:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\.idea/dataSources/
++/dataSources.local.xml
++# Editor-based HTTP Client requests
++/httpRequests/
+diff --git a/dry/.idea/dry.iml b/dry/.idea/dry.iml
+new file mode 100644
+index 0000000..f08604b
+--- /dev/null
++++ b/dry/.idea/dry.iml
+@@ -0,0 +1,2 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<module classpath="CMake" type="CPP_MODULE" version="4" />
+\ No newline at end of file
+diff --git a/dry/.idea/misc.xml b/dry/.idea/misc.xml
+new file mode 100644
+index 0000000..79b3c94
+--- /dev/null
++++ b/dry/.idea/misc.xml
+@@ -0,0 +1,4 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
++</project>
+\ No newline at end of file
+diff --git a/dry/.idea/modules.xml b/dry/.idea/modules.xml
+new file mode 100644
+index 0000000..4700199
+--- /dev/null
++++ b/dry/.idea/modules.xml
+@@ -0,0 +1,8 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="ProjectModuleManager">
++    <modules>
++      <module fileurl="file://$PROJECT_DIR$/.idea/dry.iml" filepath="$PROJECT_DIR$/.idea/dry.iml" />
++    </modules>
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/dry/.idea/vcs.xml b/dry/.idea/vcs.xml
+new file mode 100644
+index 0000000..6c0b863
+--- /dev/null
++++ b/dry/.idea/vcs.xml
+@@ -0,0 +1,6 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<project version="4">
++  <component name="VcsDirectoryMappings">
++    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
++  </component>
++</project>
+\ No newline at end of file
+diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
+new file mode 100644
+index 0000000..1d63d19
+--- /dev/null
++++ b/dry/CMakeLists.txt
+@@ -0,0 +1,6 @@
++cmake_minimum_required(VERSION 3.17)
++project(dry)
++
++set(CMAKE_CXX_STANDARD 14)
++
++add_executable(dry main.cpp Pirate.cpp Pirate.h)
+\ No newline at end of file
+diff --git a/dry/cmake-build-debug/CMakeCache.txt b/dry/cmake-build-debug/CMakeCache.txt
+new file mode 100644
+index 0000000..d275abe
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeCache.txt
+@@ -0,0 +1,420 @@
++# This is the CMakeCache file.
++# For build in directory: c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
++# It was generated by CMake: C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
++# You can edit this file to change values found and used by cmake.
++# If you do not want to change any of the values, simply exit the editor.
++# If you do want to change a value, simply edit, save, and exit the editor.
++# The syntax for the file is as follows:
++# KEY:TYPE=VALUE
++# KEY is the name of a variable in the cache.
++# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
++# VALUE is the current value for the KEY.
++
++########################
++# EXTERNAL cache entries
++########################
++
++//Path to a program.
++CMAKE_ADDR2LINE:FILEPATH=C:/TDM-GCC-64/bin/addr2line.exe
++
++//Path to a program.
++CMAKE_AR:FILEPATH=C:/TDM-GCC-64/bin/ar.exe
++
++//Choose the type of build, options are: None Debug Release RelWithDebInfo
++// MinSizeRel ...
++CMAKE_BUILD_TYPE:STRING=Debug
++
++//Id string of the compiler for the CodeBlocks IDE. Automatically
++// detected when left empty
++CMAKE_CODEBLOCKS_COMPILER_ID:STRING=
++
++//The CodeBlocks executable
++CMAKE_CODEBLOCKS_EXECUTABLE:FILEPATH=CMAKE_CODEBLOCKS_EXECUTABLE-NOTFOUND
++
++//Additional command line arguments when CodeBlocks invokes make.
++// Enter e.g. -j<some_number> to get parallel builds
++CMAKE_CODEBLOCKS_MAKE_ARGUMENTS:STRING=
++
++//Enable/Disable color output during build.
++CMAKE_COLOR_MAKEFILE:BOOL=ON
++
++//CXX compiler
++CMAKE_CXX_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/g++.exe
++
++//A wrapper around 'ar' adding the appropriate '--plugin' option
++// for the GCC compiler
++CMAKE_CXX_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
++
++//A wrapper around 'ranlib' adding the appropriate '--plugin' option
++// for the GCC compiler
++CMAKE_CXX_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
++
++//Flags used by the CXX compiler during all build types.
++CMAKE_CXX_FLAGS:STRING=
++
++//Flags used by the CXX compiler during DEBUG builds.
++CMAKE_CXX_FLAGS_DEBUG:STRING=-g
++
++//Flags used by the CXX compiler during MINSIZEREL builds.
++CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
++
++//Flags used by the CXX compiler during RELEASE builds.
++CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
++
++//Flags used by the CXX compiler during RELWITHDEBINFO builds.
++CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
++
++//Libraries linked by default with all C++ applications.
++CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
++
++//C compiler
++CMAKE_C_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/gcc.exe
++
++//A wrapper around 'ar' adding the appropriate '--plugin' option
++// for the GCC compiler
++CMAKE_C_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
++
++//A wrapper around 'ranlib' adding the appropriate '--plugin' option
++// for the GCC compiler
++CMAKE_C_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
++
++//Flags used by the C compiler during all build types.
++CMAKE_C_FLAGS:STRING=
++
++//Flags used by the C compiler during DEBUG builds.
++CMAKE_C_FLAGS_DEBUG:STRING=-g
++
++//Flags used by the C compiler during MINSIZEREL builds.
++CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
++
++//Flags used by the C compiler during RELEASE builds.
++CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
++
++//Flags used by the C compiler during RELWITHDEBINFO builds.
++CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
++
++//Libraries linked by default with all C applications.
++CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
++
++//Path to a program.
++CMAKE_DLLTOOL:FILEPATH=C:/TDM-GCC-64/bin/dlltool.exe
++
++//Flags used by the linker during all build types.
++CMAKE_EXE_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during DEBUG builds.
++CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during MINSIZEREL builds.
++CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during RELEASE builds.
++CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during RELWITHDEBINFO builds.
++CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Convert GNU import libraries to MS format (requires Visual Studio)
++CMAKE_GNUtoMS:BOOL=OFF
++
++//Install path prefix, prepended onto install directories.
++CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/dry
++
++//Path to a program.
++CMAKE_LINKER:FILEPATH=C:/TDM-GCC-64/bin/ld.exe
++
++//Path to a program.
++CMAKE_MAKE_PROGRAM:FILEPATH=C:/TDM-GCC-64/bin/mingw32-make.exe
++
++//Flags used by the linker during the creation of modules during
++// all build types.
++CMAKE_MODULE_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of modules during
++// DEBUG builds.
++CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of modules during
++// MINSIZEREL builds.
++CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of modules during
++// RELEASE builds.
++CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of modules during
++// RELWITHDEBINFO builds.
++CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Path to a program.
++CMAKE_NM:FILEPATH=C:/TDM-GCC-64/bin/nm.exe
++
++//Path to a program.
++CMAKE_OBJCOPY:FILEPATH=C:/TDM-GCC-64/bin/objcopy.exe
++
++//Path to a program.
++CMAKE_OBJDUMP:FILEPATH=C:/TDM-GCC-64/bin/objdump.exe
++
++//Value Computed by CMake
++CMAKE_PROJECT_DESCRIPTION:STATIC=
++
++//Value Computed by CMake
++CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
++
++//Value Computed by CMake
++CMAKE_PROJECT_NAME:STATIC=dry
++
++//Path to a program.
++CMAKE_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/ranlib.exe
++
++//RC compiler
++CMAKE_RC_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/windres.exe
++
++//Flags for Windows Resource Compiler during all build types.
++CMAKE_RC_FLAGS:STRING=
++
++//Flags for Windows Resource Compiler during DEBUG builds.
++CMAKE_RC_FLAGS_DEBUG:STRING=
++
++//Flags for Windows Resource Compiler during MINSIZEREL builds.
++CMAKE_RC_FLAGS_MINSIZEREL:STRING=
++
++//Flags for Windows Resource Compiler during RELEASE builds.
++CMAKE_RC_FLAGS_RELEASE:STRING=
++
++//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
++CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=
++
++//Path to a program.
++CMAKE_READELF:FILEPATH=C:/TDM-GCC-64/bin/readelf.exe
++
++//Flags used by the linker during the creation of shared libraries
++// during all build types.
++CMAKE_SHARED_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during DEBUG builds.
++CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during MINSIZEREL builds.
++CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during RELEASE builds.
++CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of shared libraries
++// during RELWITHDEBINFO builds.
++CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//If set, runtime paths are not added when installing shared libraries,
++// but are added when building.
++CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
++
++//If set, runtime paths are not added when using shared libraries.
++CMAKE_SKIP_RPATH:BOOL=NO
++
++//Flags used by the linker during the creation of static libraries
++// during all build types.
++CMAKE_STATIC_LINKER_FLAGS:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during DEBUG builds.
++CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during MINSIZEREL builds.
++CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during RELEASE builds.
++CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
++
++//Flags used by the linker during the creation of static libraries
++// during RELWITHDEBINFO builds.
++CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
++
++//Path to a program.
++CMAKE_STRIP:FILEPATH=C:/TDM-GCC-64/bin/strip.exe
++
++//If this value is on, makefiles will be generated without the
++// .SILENT directive, and all commands will be echoed to the console
++// during the make.  This is useful for debugging only. With Visual
++// Studio IDE projects all commands are done without /nologo.
++CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
++
++//Value Computed by CMake
++dry_BINARY_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
++
++//Value Computed by CMake
++dry_SOURCE_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
++
++
++########################
++# INTERNAL cache entries
++########################
++
++//ADVANCED property for variable: CMAKE_ADDR2LINE
++CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_AR
++CMAKE_AR-ADVANCED:INTERNAL=1
++//This is the directory where this CMakeCache.txt was created
++CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
++//Major version of cmake used to create the current loaded cache
++CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
++//Minor version of cmake used to create the current loaded cache
++CMAKE_CACHE_MINOR_VERSION:INTERNAL=17
++//Patch version of cmake used to create the current loaded cache
++CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
++//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
++CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
++//Path to CMake executable.
++CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
++//Path to cpack program executable.
++CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cpack.exe
++//Path to ctest program executable.
++CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/ctest.exe
++//ADVANCED property for variable: CMAKE_CXX_COMPILER
++CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
++CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
++CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS
++CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
++CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
++CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
++CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
++CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
++CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_COMPILER
++CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_COMPILER_AR
++CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
++CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS
++CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
++CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
++CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
++CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
++CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
++CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_DLLTOOL
++CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
++//Executable file format
++CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
++CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
++CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
++CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
++CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//Name of external makefile project generator.
++CMAKE_EXTRA_GENERATOR:INTERNAL=CodeBlocks
++//CXX compiler system defined macros
++CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1;__STDC__;1;__cplusplus;201402L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__GNUG__;9;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_WEAK__;1;__DEPRECATED;1;__GXX_RTTI;1;__cpp_rtti;199711;__GXX_EXPERIMENTAL_CXX0X__;1;__cpp_binary_literals;201304;__cpp_hex_float;201603;__cpp_runtime_arrays;198712;__cpp_unicode_characters;200704;__cpp_raw_strings;200710;__cpp_unicode_literals;200710;__cpp_user_defined_literals;200809;__cpp_lambdas;200907;__cpp_range_based_for;200907;__cpp_static_assert;200410;__cpp_decltype;200707;__cpp_attributes;200809;__cpp_rvalue_reference;200610;__cpp_rvalue_references;200610;__cpp_variadic_templates;200704;__cpp_initializer_lists;200806;__cpp_delegating_constructors;200604;__cpp_nsdmi;200809;__cpp_inheriting_constructors;201511;__cpp_ref_qualifiers;200710;__cpp_alias_templates;200704;__cpp_return_type_deduction;201304;__cpp_init_captures;201304;__cpp_generic_lambdas;201304;__cpp_constexpr;201304;__cpp_decltype_auto;201304;__cpp_aggregate_nsdmi;201304;__cpp_variable_templates;201304;__cpp_digit_separators;201309;__cpp_sized_deallocation;201309;__cpp_threadsafe_static_init;200806;__EXCEPTIONS;1;__cpp_exceptions;199711;__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__GLIBCXX_TYPE_INT_N_0;__int128;__GLIBCXX_BITSIZE_INT_N_0;128;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;double(1.79769313486231570814527423731704357e+308L);__DBL_MIN__;double(2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;double(2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;double(4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__WCHAR_UNSIGNED__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
++//CXX compiler system include directories
++CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
++//C compiler system defined macros
++CMAKE_EXTRA_GENERATOR_C_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
++//C compiler system include directories
++CMAKE_EXTRA_GENERATOR_C_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
++//Name of generator.
++CMAKE_GENERATOR:INTERNAL=MinGW Makefiles
++//Generator instance identifier.
++CMAKE_GENERATOR_INSTANCE:INTERNAL=
++//Name of generator platform.
++CMAKE_GENERATOR_PLATFORM:INTERNAL=
++//Name of generator toolset.
++CMAKE_GENERATOR_TOOLSET:INTERNAL=
++//Source directory with the top level CMakeLists.txt file for this
++// project
++CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
++//ADVANCED property for variable: CMAKE_LINKER
++CMAKE_LINKER-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
++CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
++CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
++CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
++CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
++CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_NM
++CMAKE_NM-ADVANCED:INTERNAL=1
++//number of local generators
++CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
++//ADVANCED property for variable: CMAKE_OBJCOPY
++CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_OBJDUMP
++CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
++//Platform information initialized
++CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RANLIB
++CMAKE_RANLIB-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_COMPILER
++CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
++CMAKE_RC_COMPILER_WORKS:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_FLAGS
++CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
++CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
++CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
++CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
++CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_READELF
++CMAKE_READELF-ADVANCED:INTERNAL=1
++//Path to CMake installation.
++CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
++CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
++CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
++CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
++CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
++CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_SKIP_RPATH
++CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
++CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
++CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
++CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
++CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
++CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_STRIP
++CMAKE_STRIP-ADVANCED:INTERNAL=1
++//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
++CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
+new file mode 100644
+index 0000000..3b86b58
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
+@@ -0,0 +1,76 @@
++set(CMAKE_C_COMPILER "C:/TDM-GCC-64/bin/gcc.exe")
++set(CMAKE_C_COMPILER_ARG1 "")
++set(CMAKE_C_COMPILER_ID "GNU")
++set(CMAKE_C_COMPILER_VERSION "9.2.0")
++set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
++set(CMAKE_C_COMPILER_WRAPPER "")
++set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")
++set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert")
++set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
++set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
++set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
++
++set(CMAKE_C_PLATFORM_ID "MinGW")
++set(CMAKE_C_SIMULATE_ID "")
++set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")
++set(CMAKE_C_SIMULATE_VERSION "")
++
++
++
++set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
++set(CMAKE_C_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
++set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
++set(CMAKE_C_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
++set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
++set(CMAKE_MT "")
++set(CMAKE_COMPILER_IS_GNUCC 1)
++set(CMAKE_C_COMPILER_LOADED 1)
++set(CMAKE_C_COMPILER_WORKS TRUE)
++set(CMAKE_C_ABI_COMPILED TRUE)
++set(CMAKE_COMPILER_IS_MINGW 1)
++set(CMAKE_COMPILER_IS_CYGWIN )
++if(CMAKE_COMPILER_IS_CYGWIN)
++  set(CYGWIN 1)
++  set(UNIX 1)
++endif()
++
++set(CMAKE_C_COMPILER_ENV_VAR "CC")
++
++if(CMAKE_COMPILER_IS_MINGW)
++  set(MINGW 1)
++endif()
++set(CMAKE_C_COMPILER_ID_RUN 1)
++set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
++set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
++set(CMAKE_C_LINKER_PREFERENCE 10)
++
++# Save compiler ABI information.
++set(CMAKE_C_SIZEOF_DATA_PTR "8")
++set(CMAKE_C_COMPILER_ABI "")
++set(CMAKE_C_LIBRARY_ARCHITECTURE "")
++
++if(CMAKE_C_SIZEOF_DATA_PTR)
++  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
++endif()
++
++if(CMAKE_C_COMPILER_ABI)
++  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
++endif()
++
++if(CMAKE_C_LIBRARY_ARCHITECTURE)
++  set(CMAKE_LIBRARY_ARCHITECTURE "")
++endif()
++
++set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
++if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
++  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
++endif()
++
++
++
++
++
++set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
++set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
++set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
++set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
+new file mode 100644
+index 0000000..89fc1fb
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
+@@ -0,0 +1,88 @@
++set(CMAKE_CXX_COMPILER "C:/TDM-GCC-64/bin/g++.exe")
++set(CMAKE_CXX_COMPILER_ARG1 "")
++set(CMAKE_CXX_COMPILER_ID "GNU")
++set(CMAKE_CXX_COMPILER_VERSION "9.2.0")
++set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
++set(CMAKE_CXX_COMPILER_WRAPPER "")
++set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
++set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20")
++set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
++set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
++set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
++set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
++set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
++
++set(CMAKE_CXX_PLATFORM_ID "MinGW")
++set(CMAKE_CXX_SIMULATE_ID "")
++set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")
++set(CMAKE_CXX_SIMULATE_VERSION "")
++
++
++
++set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
++set(CMAKE_CXX_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
++set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
++set(CMAKE_CXX_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
++set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
++set(CMAKE_MT "")
++set(CMAKE_COMPILER_IS_GNUCXX 1)
++set(CMAKE_CXX_COMPILER_LOADED 1)
++set(CMAKE_CXX_COMPILER_WORKS TRUE)
++set(CMAKE_CXX_ABI_COMPILED TRUE)
++set(CMAKE_COMPILER_IS_MINGW 1)
++set(CMAKE_COMPILER_IS_CYGWIN )
++if(CMAKE_COMPILER_IS_CYGWIN)
++  set(CYGWIN 1)
++  set(UNIX 1)
++endif()
++
++set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
++
++if(CMAKE_COMPILER_IS_MINGW)
++  set(MINGW 1)
++endif()
++set(CMAKE_CXX_COMPILER_ID_RUN 1)
++set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)
++set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
++
++foreach (lang C OBJC OBJCXX)
++  if (CMAKE_${lang}_COMPILER_ID_RUN)
++    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
++      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
++    endforeach()
++  endif()
++endforeach()
++
++set(CMAKE_CXX_LINKER_PREFERENCE 30)
++set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
++
++# Save compiler ABI information.
++set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
++set(CMAKE_CXX_COMPILER_ABI "")
++set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
++
++if(CMAKE_CXX_SIZEOF_DATA_PTR)
++  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
++endif()
++
++if(CMAKE_CXX_COMPILER_ABI)
++  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
++endif()
++
++if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
++  set(CMAKE_LIBRARY_ARCHITECTURE "")
++endif()
++
++set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
++if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
++  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
++endif()
++
++
++
++
++
++set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
++set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
++set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
++set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
+new file mode 100644
+index 0000000..7fab13b
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
+new file mode 100644
+index 0000000..2ac5395
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
+new file mode 100644
+index 0000000..dde22c8
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
+@@ -0,0 +1,6 @@
++set(CMAKE_RC_COMPILER "C:/TDM-GCC-64/bin/windres.exe")
++set(CMAKE_RC_COMPILER_ARG1 "")
++set(CMAKE_RC_COMPILER_LOADED 1)
++set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)
++set(CMAKE_RC_OUTPUT_EXTENSION .obj)
++set(CMAKE_RC_COMPILER_ENV_VAR "RC")
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
+new file mode 100644
+index 0000000..909db20
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
+@@ -0,0 +1,15 @@
++set(CMAKE_HOST_SYSTEM "Windows-10.0.19045")
++set(CMAKE_HOST_SYSTEM_NAME "Windows")
++set(CMAKE_HOST_SYSTEM_VERSION "10.0.19045")
++set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")
++
++
++
++set(CMAKE_SYSTEM "Windows-10.0.19045")
++set(CMAKE_SYSTEM_NAME "Windows")
++set(CMAKE_SYSTEM_VERSION "10.0.19045")
++set(CMAKE_SYSTEM_PROCESSOR "AMD64")
++
++set(CMAKE_CROSSCOMPILING "FALSE")
++
++set(CMAKE_SYSTEM_LOADED 1)
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
+new file mode 100644
+index 0000000..d884b50
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
+@@ -0,0 +1,671 @@
++#ifdef __cplusplus
++# error "A C++ compiler has been selected for C."
++#endif
++
++#if defined(__18CXX)
++# define ID_VOID_MAIN
++#endif
++#if defined(__CLASSIC_C__)
++/* cv-qualifiers did not exist in K&R C */
++# define const
++# define volatile
++#endif
++
++
++/* Version number components: V=Version, R=Revision, P=Patch
++   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
++
++#if defined(__INTEL_COMPILER) || defined(__ICC)
++# define COMPILER_ID "Intel"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_ID "GNU"
++# endif
++  /* __INTEL_COMPILER = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
++# if defined(__INTEL_COMPILER_UPDATE)
++#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
++# else
++#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
++# endif
++# if defined(__INTEL_COMPILER_BUILD_DATE)
++  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
++#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
++# endif
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++# elif defined(__GNUG__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(__PATHCC__)
++# define COMPILER_ID "PathScale"
++# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
++# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
++# if defined(__PATHCC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
++# endif
++
++#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
++# define COMPILER_ID "Embarcadero"
++# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
++# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
++# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
++
++#elif defined(__BORLANDC__)
++# define COMPILER_ID "Borland"
++  /* __BORLANDC__ = 0xVRR */
++# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
++# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
++
++#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
++# define COMPILER_ID "Watcom"
++   /* __WATCOMC__ = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__WATCOMC__)
++# define COMPILER_ID "OpenWatcom"
++   /* __WATCOMC__ = VVRP + 1100 */
++# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__SUNPRO_C)
++# define COMPILER_ID "SunPro"
++# if __SUNPRO_C >= 0x5100
++   /* __SUNPRO_C = 0xVRRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
++# else
++   /* __SUNPRO_CC = 0xVRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
++# endif
++
++#elif defined(__HP_cc)
++# define COMPILER_ID "HP"
++  /* __HP_cc = VVRRPP */
++# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
++# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
++
++#elif defined(__DECC)
++# define COMPILER_ID "Compaq"
++  /* __DECC_VER = VVRRTPPPP */
++# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
++# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
++# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
++
++#elif defined(__IBMC__) && defined(__COMPILER_VER__)
++# define COMPILER_ID "zOS"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__ibmxl__) && defined(__clang__)
++# define COMPILER_ID "XLClang"
++# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
++# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
++# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
++
++
++#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
++# define COMPILER_ID "XL"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
++# define COMPILER_ID "VisualAge"
++  /* __IBMC__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
++
++#elif defined(__PGI)
++# define COMPILER_ID "PGI"
++# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
++# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
++# if defined(__PGIC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
++# endif
++
++#elif defined(_CRAYC)
++# define COMPILER_ID "Cray"
++# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
++# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
++
++#elif defined(__TI_COMPILER_VERSION__)
++# define COMPILER_ID "TI"
++  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
++# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
++# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
++# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
++
++#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
++# define COMPILER_ID "Fujitsu"
++
++#elif defined(__ghs__)
++# define COMPILER_ID "GHS"
++/* __GHS_VERSION_NUMBER = VVVVRP */
++# ifdef __GHS_VERSION_NUMBER
++# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
++# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
++# endif
++
++#elif defined(__TINYC__)
++# define COMPILER_ID "TinyCC"
++
++#elif defined(__BCC__)
++# define COMPILER_ID "Bruce"
++
++#elif defined(__SCO_VERSION__)
++# define COMPILER_ID "SCO"
++
++#elif defined(__ARMCC_VERSION) && !defined(__clang__)
++# define COMPILER_ID "ARMCC"
++#if __ARMCC_VERSION >= 1000000
++  /* __ARMCC_VERSION = VRRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
++#else
++  /* __ARMCC_VERSION = VRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
++#endif
++
++
++#elif defined(__clang__) && defined(__apple_build_version__)
++# define COMPILER_ID "AppleClang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
++
++#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
++# define COMPILER_ID "ARMClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
++# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
++
++#elif defined(__clang__)
++# define COMPILER_ID "Clang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++
++#elif defined(__GNUC__)
++# define COMPILER_ID "GNU"
++# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
++# if defined(__GNUC_MINOR__)
++#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(_MSC_VER)
++# define COMPILER_ID "MSVC"
++  /* _MSC_VER = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
++# if defined(_MSC_FULL_VER)
++#  if _MSC_VER >= 1400
++    /* _MSC_FULL_VER = VVRRPPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
++#  else
++    /* _MSC_FULL_VER = VVRRPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
++#  endif
++# endif
++# if defined(_MSC_BUILD)
++#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
++# endif
++
++#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
++# define COMPILER_ID "ADSP"
++#if defined(__VISUALDSPVERSION__)
++  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
++# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
++# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
++# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
++#endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# define COMPILER_ID "IAR"
++# if defined(__VER__) && defined(__ICCARM__)
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
++#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
++#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
++#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
++#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# endif
++
++#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
++# define COMPILER_ID "SDCC"
++# if defined(__SDCC_VERSION_MAJOR)
++#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
++#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
++#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
++# else
++  /* SDCC = VRP */
++#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
++#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
++#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
++# endif
++
++
++/* These compilers are either not known or too old to define an
++  identification macro.  Try to identify the platform and guess that
++  it is the native compiler.  */
++#elif defined(__hpux) || defined(__hpua)
++# define COMPILER_ID "HP"
++
++#else /* unknown compiler */
++# define COMPILER_ID ""
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
++#ifdef SIMULATE_ID
++char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
++#endif
++
++#ifdef __QNXNTO__
++char const* qnxnto = "INFO" ":" "qnxnto[]";
++#endif
++
++#if defined(__CRAYXE) || defined(__CRAYXC)
++char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
++#endif
++
++#define STRINGIFY_HELPER(X) #X
++#define STRINGIFY(X) STRINGIFY_HELPER(X)
++
++/* Identify known platforms by name.  */
++#if defined(__linux) || defined(__linux__) || defined(linux)
++# define PLATFORM_ID "Linux"
++
++#elif defined(__CYGWIN__)
++# define PLATFORM_ID "Cygwin"
++
++#elif defined(__MINGW32__)
++# define PLATFORM_ID "MinGW"
++
++#elif defined(__APPLE__)
++# define PLATFORM_ID "Darwin"
++
++#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
++# define PLATFORM_ID "Windows"
++
++#elif defined(__FreeBSD__) || defined(__FreeBSD)
++# define PLATFORM_ID "FreeBSD"
++
++#elif defined(__NetBSD__) || defined(__NetBSD)
++# define PLATFORM_ID "NetBSD"
++
++#elif defined(__OpenBSD__) || defined(__OPENBSD)
++# define PLATFORM_ID "OpenBSD"
++
++#elif defined(__sun) || defined(sun)
++# define PLATFORM_ID "SunOS"
++
++#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
++# define PLATFORM_ID "AIX"
++
++#elif defined(__hpux) || defined(__hpux__)
++# define PLATFORM_ID "HP-UX"
++
++#elif defined(__HAIKU__)
++# define PLATFORM_ID "Haiku"
++
++#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
++# define PLATFORM_ID "BeOS"
++
++#elif defined(__QNX__) || defined(__QNXNTO__)
++# define PLATFORM_ID "QNX"
++
++#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
++# define PLATFORM_ID "Tru64"
++
++#elif defined(__riscos) || defined(__riscos__)
++# define PLATFORM_ID "RISCos"
++
++#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
++# define PLATFORM_ID "SINIX"
++
++#elif defined(__UNIX_SV__)
++# define PLATFORM_ID "UNIX_SV"
++
++#elif defined(__bsdos__)
++# define PLATFORM_ID "BSDOS"
++
++#elif defined(_MPRAS) || defined(MPRAS)
++# define PLATFORM_ID "MP-RAS"
++
++#elif defined(__osf) || defined(__osf__)
++# define PLATFORM_ID "OSF1"
++
++#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
++# define PLATFORM_ID "SCO_SV"
++
++#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
++# define PLATFORM_ID "ULTRIX"
++
++#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
++# define PLATFORM_ID "Xenix"
++
++#elif defined(__WATCOMC__)
++# if defined(__LINUX__)
++#  define PLATFORM_ID "Linux"
++
++# elif defined(__DOS__)
++#  define PLATFORM_ID "DOS"
++
++# elif defined(__OS2__)
++#  define PLATFORM_ID "OS2"
++
++# elif defined(__WINDOWS__)
++#  define PLATFORM_ID "Windows3x"
++
++# else /* unknown platform */
++#  define PLATFORM_ID
++# endif
++
++#elif defined(__INTEGRITY)
++# if defined(INT_178B)
++#  define PLATFORM_ID "Integrity178"
++
++# else /* regular Integrity */
++#  define PLATFORM_ID "Integrity"
++# endif
++
++#else /* unknown platform */
++# define PLATFORM_ID
++
++#endif
++
++/* For windows compilers MSVC and Intel we can determine
++   the architecture of the compiler being used.  This is because
++   the compilers do not have flags that can change the architecture,
++   but rather depend on which compiler is being used
++*/
++#if defined(_WIN32) && defined(_MSC_VER)
++# if defined(_M_IA64)
++#  define ARCHITECTURE_ID "IA64"
++
++# elif defined(_M_X64) || defined(_M_AMD64)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# elif defined(_M_ARM64)
++#  define ARCHITECTURE_ID "ARM64"
++
++# elif defined(_M_ARM)
++#  if _M_ARM == 4
++#   define ARCHITECTURE_ID "ARMV4I"
++#  elif _M_ARM == 5
++#   define ARCHITECTURE_ID "ARMV5I"
++#  else
++#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
++#  endif
++
++# elif defined(_M_MIPS)
++#  define ARCHITECTURE_ID "MIPS"
++
++# elif defined(_M_SH)
++#  define ARCHITECTURE_ID "SHx"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__WATCOMC__)
++# if defined(_M_I86)
++#  define ARCHITECTURE_ID "I86"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# if defined(__ICCARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__ICCRX__)
++#  define ARCHITECTURE_ID "RX"
++
++# elif defined(__ICCRH850__)
++#  define ARCHITECTURE_ID "RH850"
++
++# elif defined(__ICCRL78__)
++#  define ARCHITECTURE_ID "RL78"
++
++# elif defined(__ICCRISCV__)
++#  define ARCHITECTURE_ID "RISCV"
++
++# elif defined(__ICCAVR__)
++#  define ARCHITECTURE_ID "AVR"
++
++# elif defined(__ICC430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__ICCV850__)
++#  define ARCHITECTURE_ID "V850"
++
++# elif defined(__ICC8051__)
++#  define ARCHITECTURE_ID "8051"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__ghs__)
++# if defined(__PPC64__)
++#  define ARCHITECTURE_ID "PPC64"
++
++# elif defined(__ppc__)
++#  define ARCHITECTURE_ID "PPC"
++
++# elif defined(__ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__x86_64__)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(__i386__)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++#else
++#  define ARCHITECTURE_ID
++#endif
++
++/* Convert integer to decimal digit literals.  */
++#define DEC(n)                   \
++  ('0' + (((n) / 10000000)%10)), \
++  ('0' + (((n) / 1000000)%10)),  \
++  ('0' + (((n) / 100000)%10)),   \
++  ('0' + (((n) / 10000)%10)),    \
++  ('0' + (((n) / 1000)%10)),     \
++  ('0' + (((n) / 100)%10)),      \
++  ('0' + (((n) / 10)%10)),       \
++  ('0' +  ((n) % 10))
++
++/* Convert integer to hex digit literals.  */
++#define HEX(n)             \
++  ('0' + ((n)>>28 & 0xF)), \
++  ('0' + ((n)>>24 & 0xF)), \
++  ('0' + ((n)>>20 & 0xF)), \
++  ('0' + ((n)>>16 & 0xF)), \
++  ('0' + ((n)>>12 & 0xF)), \
++  ('0' + ((n)>>8  & 0xF)), \
++  ('0' + ((n)>>4  & 0xF)), \
++  ('0' + ((n)     & 0xF))
++
++/* Construct a string literal encoding the version number components. */
++#ifdef COMPILER_VERSION_MAJOR
++char const info_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
++  COMPILER_VERSION_MAJOR,
++# ifdef COMPILER_VERSION_MINOR
++  '.', COMPILER_VERSION_MINOR,
++#  ifdef COMPILER_VERSION_PATCH
++   '.', COMPILER_VERSION_PATCH,
++#   ifdef COMPILER_VERSION_TWEAK
++    '.', COMPILER_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct a string literal encoding the internal version number. */
++#ifdef COMPILER_VERSION_INTERNAL
++char const info_version_internal[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
++  'i','n','t','e','r','n','a','l','[',
++  COMPILER_VERSION_INTERNAL,']','\0'};
++#endif
++
++/* Construct a string literal encoding the version number components. */
++#ifdef SIMULATE_VERSION_MAJOR
++char const info_simulate_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
++  SIMULATE_VERSION_MAJOR,
++# ifdef SIMULATE_VERSION_MINOR
++  '.', SIMULATE_VERSION_MINOR,
++#  ifdef SIMULATE_VERSION_PATCH
++   '.', SIMULATE_VERSION_PATCH,
++#   ifdef SIMULATE_VERSION_TWEAK
++    '.', SIMULATE_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
++char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
++
++
++
++
++#if !defined(__STDC__)
++# if (defined(_MSC_VER) && !defined(__clang__)) \
++  || (defined(__ibmxl__) || defined(__IBMC__))
++#  define C_DIALECT "90"
++# else
++#  define C_DIALECT
++# endif
++#elif __STDC_VERSION__ >= 201000L
++# define C_DIALECT "11"
++#elif __STDC_VERSION__ >= 199901L
++# define C_DIALECT "99"
++#else
++# define C_DIALECT "90"
++#endif
++const char* info_language_dialect_default =
++  "INFO" ":" "dialect_default[" C_DIALECT "]";
++
++/*--------------------------------------------------------------------------*/
++
++#ifdef ID_VOID_MAIN
++void main() {}
++#else
++# if defined(__CLASSIC_C__)
++int main(argc, argv) int argc; char *argv[];
++# else
++int main(int argc, char* argv[])
++# endif
++{
++  int require = 0;
++  require += info_compiler[argc];
++  require += info_platform[argc];
++  require += info_arch[argc];
++#ifdef COMPILER_VERSION_MAJOR
++  require += info_version[argc];
++#endif
++#ifdef COMPILER_VERSION_INTERNAL
++  require += info_version_internal[argc];
++#endif
++#ifdef SIMULATE_ID
++  require += info_simulate[argc];
++#endif
++#ifdef SIMULATE_VERSION_MAJOR
++  require += info_simulate_version[argc];
++#endif
++#if defined(__CRAYXE) || defined(__CRAYXC)
++  require += info_cray[argc];
++#endif
++  require += info_language_dialect_default[argc];
++  (void)argv;
++  return require;
++}
++#endif
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
+new file mode 100644
+index 0000000..df42f13
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
+new file mode 100644
+index 0000000..69cfdba
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
+@@ -0,0 +1,660 @@
++/* This source file must have a .cpp extension so that all C++ compilers
++   recognize the extension without flags.  Borland does not know .cxx for
++   example.  */
++#ifndef __cplusplus
++# error "A C compiler has been selected for C++."
++#endif
++
++
++/* Version number components: V=Version, R=Revision, P=Patch
++   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
++
++#if defined(__COMO__)
++# define COMPILER_ID "Comeau"
++  /* __COMO_VERSION__ = VRR */
++# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
++# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
++
++#elif defined(__INTEL_COMPILER) || defined(__ICC)
++# define COMPILER_ID "Intel"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_ID "GNU"
++# endif
++  /* __INTEL_COMPILER = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
++# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
++# if defined(__INTEL_COMPILER_UPDATE)
++#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
++# else
++#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
++# endif
++# if defined(__INTEL_COMPILER_BUILD_DATE)
++  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
++#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
++# endif
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# if defined(__GNUC__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
++# elif defined(__GNUG__)
++#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(__PATHCC__)
++# define COMPILER_ID "PathScale"
++# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
++# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
++# if defined(__PATHCC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
++# endif
++
++#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
++# define COMPILER_ID "Embarcadero"
++# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
++# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
++# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
++
++#elif defined(__BORLANDC__)
++# define COMPILER_ID "Borland"
++  /* __BORLANDC__ = 0xVRR */
++# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
++# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
++
++#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
++# define COMPILER_ID "Watcom"
++   /* __WATCOMC__ = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__WATCOMC__)
++# define COMPILER_ID "OpenWatcom"
++   /* __WATCOMC__ = VVRP + 1100 */
++# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
++# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
++# if (__WATCOMC__ % 10) > 0
++#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
++# endif
++
++#elif defined(__SUNPRO_CC)
++# define COMPILER_ID "SunPro"
++# if __SUNPRO_CC >= 0x5100
++   /* __SUNPRO_CC = 0xVRRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
++# else
++   /* __SUNPRO_CC = 0xVRP */
++#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
++#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
++#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
++# endif
++
++#elif defined(__HP_aCC)
++# define COMPILER_ID "HP"
++  /* __HP_aCC = VVRRPP */
++# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
++# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
++# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
++
++#elif defined(__DECCXX)
++# define COMPILER_ID "Compaq"
++  /* __DECCXX_VER = VVRRTPPPP */
++# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
++# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
++# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
++
++#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
++# define COMPILER_ID "zOS"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__ibmxl__) && defined(__clang__)
++# define COMPILER_ID "XLClang"
++# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
++# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
++# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
++# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
++
++
++#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
++# define COMPILER_ID "XL"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
++# define COMPILER_ID "VisualAge"
++  /* __IBMCPP__ = VRP */
++# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
++# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
++
++#elif defined(__PGI)
++# define COMPILER_ID "PGI"
++# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
++# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
++# if defined(__PGIC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
++# endif
++
++#elif defined(_CRAYC)
++# define COMPILER_ID "Cray"
++# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
++# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
++
++#elif defined(__TI_COMPILER_VERSION__)
++# define COMPILER_ID "TI"
++  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
++# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
++# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
++# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
++
++#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
++# define COMPILER_ID "Fujitsu"
++
++#elif defined(__ghs__)
++# define COMPILER_ID "GHS"
++/* __GHS_VERSION_NUMBER = VVVVRP */
++# ifdef __GHS_VERSION_NUMBER
++# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
++# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
++# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
++# endif
++
++#elif defined(__SCO_VERSION__)
++# define COMPILER_ID "SCO"
++
++#elif defined(__ARMCC_VERSION) && !defined(__clang__)
++# define COMPILER_ID "ARMCC"
++#if __ARMCC_VERSION >= 1000000
++  /* __ARMCC_VERSION = VRRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
++#else
++  /* __ARMCC_VERSION = VRPPPP */
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
++#endif
++
++
++#elif defined(__clang__) && defined(__apple_build_version__)
++# define COMPILER_ID "AppleClang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
++
++#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
++# define COMPILER_ID "ARMClang"
++  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
++  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
++  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
++# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
++
++#elif defined(__clang__)
++# define COMPILER_ID "Clang"
++# if defined(_MSC_VER)
++#  define SIMULATE_ID "MSVC"
++# endif
++# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
++# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
++# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
++# if defined(_MSC_VER)
++   /* _MSC_VER = VVRR */
++#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
++#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
++# endif
++
++#elif defined(__GNUC__) || defined(__GNUG__)
++# define COMPILER_ID "GNU"
++# if defined(__GNUC__)
++#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
++# else
++#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
++# endif
++# if defined(__GNUC_MINOR__)
++#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
++# endif
++# if defined(__GNUC_PATCHLEVEL__)
++#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
++# endif
++
++#elif defined(_MSC_VER)
++# define COMPILER_ID "MSVC"
++  /* _MSC_VER = VVRR */
++# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
++# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
++# if defined(_MSC_FULL_VER)
++#  if _MSC_VER >= 1400
++    /* _MSC_FULL_VER = VVRRPPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
++#  else
++    /* _MSC_FULL_VER = VVRRPPPP */
++#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
++#  endif
++# endif
++# if defined(_MSC_BUILD)
++#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
++# endif
++
++#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
++# define COMPILER_ID "ADSP"
++#if defined(__VISUALDSPVERSION__)
++  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
++# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
++# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
++# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
++#endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# define COMPILER_ID "IAR"
++# if defined(__VER__) && defined(__ICCARM__)
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
++#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
++#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
++#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
++#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
++#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
++#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
++# endif
++
++
++/* These compilers are either not known or too old to define an
++  identification macro.  Try to identify the platform and guess that
++  it is the native compiler.  */
++#elif defined(__hpux) || defined(__hpua)
++# define COMPILER_ID "HP"
++
++#else /* unknown compiler */
++# define COMPILER_ID ""
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
++#ifdef SIMULATE_ID
++char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
++#endif
++
++#ifdef __QNXNTO__
++char const* qnxnto = "INFO" ":" "qnxnto[]";
++#endif
++
++#if defined(__CRAYXE) || defined(__CRAYXC)
++char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
++#endif
++
++#define STRINGIFY_HELPER(X) #X
++#define STRINGIFY(X) STRINGIFY_HELPER(X)
++
++/* Identify known platforms by name.  */
++#if defined(__linux) || defined(__linux__) || defined(linux)
++# define PLATFORM_ID "Linux"
++
++#elif defined(__CYGWIN__)
++# define PLATFORM_ID "Cygwin"
++
++#elif defined(__MINGW32__)
++# define PLATFORM_ID "MinGW"
++
++#elif defined(__APPLE__)
++# define PLATFORM_ID "Darwin"
++
++#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
++# define PLATFORM_ID "Windows"
++
++#elif defined(__FreeBSD__) || defined(__FreeBSD)
++# define PLATFORM_ID "FreeBSD"
++
++#elif defined(__NetBSD__) || defined(__NetBSD)
++# define PLATFORM_ID "NetBSD"
++
++#elif defined(__OpenBSD__) || defined(__OPENBSD)
++# define PLATFORM_ID "OpenBSD"
++
++#elif defined(__sun) || defined(sun)
++# define PLATFORM_ID "SunOS"
++
++#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
++# define PLATFORM_ID "AIX"
++
++#elif defined(__hpux) || defined(__hpux__)
++# define PLATFORM_ID "HP-UX"
++
++#elif defined(__HAIKU__)
++# define PLATFORM_ID "Haiku"
++
++#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
++# define PLATFORM_ID "BeOS"
++
++#elif defined(__QNX__) || defined(__QNXNTO__)
++# define PLATFORM_ID "QNX"
++
++#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
++# define PLATFORM_ID "Tru64"
++
++#elif defined(__riscos) || defined(__riscos__)
++# define PLATFORM_ID "RISCos"
++
++#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
++# define PLATFORM_ID "SINIX"
++
++#elif defined(__UNIX_SV__)
++# define PLATFORM_ID "UNIX_SV"
++
++#elif defined(__bsdos__)
++# define PLATFORM_ID "BSDOS"
++
++#elif defined(_MPRAS) || defined(MPRAS)
++# define PLATFORM_ID "MP-RAS"
++
++#elif defined(__osf) || defined(__osf__)
++# define PLATFORM_ID "OSF1"
++
++#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
++# define PLATFORM_ID "SCO_SV"
++
++#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
++# define PLATFORM_ID "ULTRIX"
++
++#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
++# define PLATFORM_ID "Xenix"
++
++#elif defined(__WATCOMC__)
++# if defined(__LINUX__)
++#  define PLATFORM_ID "Linux"
++
++# elif defined(__DOS__)
++#  define PLATFORM_ID "DOS"
++
++# elif defined(__OS2__)
++#  define PLATFORM_ID "OS2"
++
++# elif defined(__WINDOWS__)
++#  define PLATFORM_ID "Windows3x"
++
++# else /* unknown platform */
++#  define PLATFORM_ID
++# endif
++
++#elif defined(__INTEGRITY)
++# if defined(INT_178B)
++#  define PLATFORM_ID "Integrity178"
++
++# else /* regular Integrity */
++#  define PLATFORM_ID "Integrity"
++# endif
++
++#else /* unknown platform */
++# define PLATFORM_ID
++
++#endif
++
++/* For windows compilers MSVC and Intel we can determine
++   the architecture of the compiler being used.  This is because
++   the compilers do not have flags that can change the architecture,
++   but rather depend on which compiler is being used
++*/
++#if defined(_WIN32) && defined(_MSC_VER)
++# if defined(_M_IA64)
++#  define ARCHITECTURE_ID "IA64"
++
++# elif defined(_M_X64) || defined(_M_AMD64)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# elif defined(_M_ARM64)
++#  define ARCHITECTURE_ID "ARM64"
++
++# elif defined(_M_ARM)
++#  if _M_ARM == 4
++#   define ARCHITECTURE_ID "ARMV4I"
++#  elif _M_ARM == 5
++#   define ARCHITECTURE_ID "ARMV5I"
++#  else
++#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
++#  endif
++
++# elif defined(_M_MIPS)
++#  define ARCHITECTURE_ID "MIPS"
++
++# elif defined(_M_SH)
++#  define ARCHITECTURE_ID "SHx"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__WATCOMC__)
++# if defined(_M_I86)
++#  define ARCHITECTURE_ID "I86"
++
++# elif defined(_M_IX86)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
++# if defined(__ICCARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__ICCRX__)
++#  define ARCHITECTURE_ID "RX"
++
++# elif defined(__ICCRH850__)
++#  define ARCHITECTURE_ID "RH850"
++
++# elif defined(__ICCRL78__)
++#  define ARCHITECTURE_ID "RL78"
++
++# elif defined(__ICCRISCV__)
++#  define ARCHITECTURE_ID "RISCV"
++
++# elif defined(__ICCAVR__)
++#  define ARCHITECTURE_ID "AVR"
++
++# elif defined(__ICC430__)
++#  define ARCHITECTURE_ID "MSP430"
++
++# elif defined(__ICCV850__)
++#  define ARCHITECTURE_ID "V850"
++
++# elif defined(__ICC8051__)
++#  define ARCHITECTURE_ID "8051"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++
++#elif defined(__ghs__)
++# if defined(__PPC64__)
++#  define ARCHITECTURE_ID "PPC64"
++
++# elif defined(__ppc__)
++#  define ARCHITECTURE_ID "PPC"
++
++# elif defined(__ARM__)
++#  define ARCHITECTURE_ID "ARM"
++
++# elif defined(__x86_64__)
++#  define ARCHITECTURE_ID "x64"
++
++# elif defined(__i386__)
++#  define ARCHITECTURE_ID "X86"
++
++# else /* unknown architecture */
++#  define ARCHITECTURE_ID ""
++# endif
++#else
++#  define ARCHITECTURE_ID
++#endif
++
++/* Convert integer to decimal digit literals.  */
++#define DEC(n)                   \
++  ('0' + (((n) / 10000000)%10)), \
++  ('0' + (((n) / 1000000)%10)),  \
++  ('0' + (((n) / 100000)%10)),   \
++  ('0' + (((n) / 10000)%10)),    \
++  ('0' + (((n) / 1000)%10)),     \
++  ('0' + (((n) / 100)%10)),      \
++  ('0' + (((n) / 10)%10)),       \
++  ('0' +  ((n) % 10))
++
++/* Convert integer to hex digit literals.  */
++#define HEX(n)             \
++  ('0' + ((n)>>28 & 0xF)), \
++  ('0' + ((n)>>24 & 0xF)), \
++  ('0' + ((n)>>20 & 0xF)), \
++  ('0' + ((n)>>16 & 0xF)), \
++  ('0' + ((n)>>12 & 0xF)), \
++  ('0' + ((n)>>8  & 0xF)), \
++  ('0' + ((n)>>4  & 0xF)), \
++  ('0' + ((n)     & 0xF))
++
++/* Construct a string literal encoding the version number components. */
++#ifdef COMPILER_VERSION_MAJOR
++char const info_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
++  COMPILER_VERSION_MAJOR,
++# ifdef COMPILER_VERSION_MINOR
++  '.', COMPILER_VERSION_MINOR,
++#  ifdef COMPILER_VERSION_PATCH
++   '.', COMPILER_VERSION_PATCH,
++#   ifdef COMPILER_VERSION_TWEAK
++    '.', COMPILER_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct a string literal encoding the internal version number. */
++#ifdef COMPILER_VERSION_INTERNAL
++char const info_version_internal[] = {
++  'I', 'N', 'F', 'O', ':',
++  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
++  'i','n','t','e','r','n','a','l','[',
++  COMPILER_VERSION_INTERNAL,']','\0'};
++#endif
++
++/* Construct a string literal encoding the version number components. */
++#ifdef SIMULATE_VERSION_MAJOR
++char const info_simulate_version[] = {
++  'I', 'N', 'F', 'O', ':',
++  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
++  SIMULATE_VERSION_MAJOR,
++# ifdef SIMULATE_VERSION_MINOR
++  '.', SIMULATE_VERSION_MINOR,
++#  ifdef SIMULATE_VERSION_PATCH
++   '.', SIMULATE_VERSION_PATCH,
++#   ifdef SIMULATE_VERSION_TWEAK
++    '.', SIMULATE_VERSION_TWEAK,
++#   endif
++#  endif
++# endif
++  ']','\0'};
++#endif
++
++/* Construct the string literal in pieces to prevent the source from
++   getting matched.  Store it in a pointer rather than an array
++   because some compilers will just produce instructions to fill the
++   array rather than assigning a pointer to a static array.  */
++char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
++char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
++
++
++
++
++#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
++#  if defined(__INTEL_CXX11_MODE__)
++#    if defined(__cpp_aggregate_nsdmi)
++#      define CXX_STD 201402L
++#    else
++#      define CXX_STD 201103L
++#    endif
++#  else
++#    define CXX_STD 199711L
++#  endif
++#elif defined(_MSC_VER) && defined(_MSVC_LANG)
++#  define CXX_STD _MSVC_LANG
++#else
++#  define CXX_STD __cplusplus
++#endif
++
++const char* info_language_dialect_default = "INFO" ":" "dialect_default["
++#if CXX_STD > 201703L
++  "20"
++#elif CXX_STD >= 201703L
++  "17"
++#elif CXX_STD >= 201402L
++  "14"
++#elif CXX_STD >= 201103L
++  "11"
++#else
++  "98"
++#endif
++"]";
++
++/*--------------------------------------------------------------------------*/
++
++int main(int argc, char* argv[])
++{
++  int require = 0;
++  require += info_compiler[argc];
++  require += info_platform[argc];
++#ifdef COMPILER_VERSION_MAJOR
++  require += info_version[argc];
++#endif
++#ifdef COMPILER_VERSION_INTERNAL
++  require += info_version_internal[argc];
++#endif
++#ifdef SIMULATE_ID
++  require += info_simulate[argc];
++#endif
++#ifdef SIMULATE_VERSION_MAJOR
++  require += info_simulate_version[argc];
++#endif
++#if defined(__CRAYXE) || defined(__CRAYXC)
++  require += info_cray[argc];
++#endif
++  require += info_language_dialect_default[argc];
++  (void)argv;
++  return require;
++}
+diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
+new file mode 100644
+index 0000000..916985a
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
+new file mode 100644
+index 0000000..7511877
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
+@@ -0,0 +1,16 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# Relative path conversion top directories.
++set(CMAKE_RELATIVE_PATH_TOP_SOURCE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry")
++set(CMAKE_RELATIVE_PATH_TOP_BINARY "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug")
++
++# Force unix paths in dependencies.
++set(CMAKE_FORCE_UNIX_PATHS 1)
++
++
++# The C and CXX include file regular expressions for this directory.
++set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
++set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
++set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
++set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
+diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
+new file mode 100644
+index 0000000..6b7a874
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
+@@ -0,0 +1,524 @@
++The system is: Windows - 10.0.19045 - AMD64
++Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
++Compiler: C:/TDM-GCC-64/bin/gcc.exe 
++Build flags: 
++Id flags:  
++
++The output was:
++0
++
++
++Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
++
++The C compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe"
++
++Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
++Compiler: C:/TDM-GCC-64/bin/g++.exe 
++Build flags: 
++Id flags:  
++
++The output was:
++0
++
++
++Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
++
++The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe"
++
++Determining if the C compiler works passed with the following output:
++Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
++
++Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_16a13/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_16a13.dir\build.make CMakeFiles/cmTC_16a13.dir/build
++mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++Building C object CMakeFiles/cmTC_16a13.dir/testCCompiler.c.obj
++C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_16a13.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
++Linking C executable cmTC_16a13.exe
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_16a13.dir\link.txt --verbose=1
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_16a13.dir/objects.a
++C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_16a13.dir/objects.a @CMakeFiles\cmTC_16a13.dir\objects1.rsp
++C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_16a13.dir/objects.a -Wl,--no-whole-archive  -o cmTC_16a13.exe -Wl,--out-implib,libcmTC_16a13.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_16a13.dir\linklibs.rsp
++mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++
++
++
++Detecting C compiler ABI info compiled with the following output:
++Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
++
++Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build
++mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj
++C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
++Using built-in specs.
++COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
++Target: x86_64-w64-mingw32
++Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
++Thread model: posix
++gcc version 9.2.0 (tdm64-1) 
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
++GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
++	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
++
++GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
++#include "..." search starts here:
++#include <...> search starts here:
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
++End of search list.
++GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
++	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
++
++GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
++Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
++GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
++COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
++LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
++Linking C executable cmTC_882c2.exe
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a
++C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp
++C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl,--no-whole-archive  -o cmTC_882c2.exe -Wl,--out-implib,libcmTC_882c2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
++Using built-in specs.
++COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
++COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
++Target: x86_64-w64-mingw32
++Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
++Thread model: posix
++gcc version 9.2.0 (tdm64-1) 
++COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
++LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
++COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
++COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
++mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++
++
++
++Parsed C implicit include dir info from above output: rv=done
++  found start of include info
++  found start of implicit include info
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
++  end of search list found
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
++  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
++
++
++Parsed C implicit link information from above output:
++  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
++  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
++  ignore line: []
++  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build]
++  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
++  ignore line: [Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj]
++  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
++  ignore line: [Using built-in specs.]
++  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
++  ignore line: [Target: x86_64-w64-mingw32]
++  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
++  ignore line: [Thread model: posix]
++  ignore line: [gcc version 9.2.0 (tdm64-1) ]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
++  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
++  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
++  ignore line: []
++  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
++  ignore line: [#include "..." search starts here:]
++  ignore line: [#include <...> search starts here:]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
++  ignore line: [End of search list.]
++  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
++  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
++  ignore line: []
++  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
++  ignore line: [Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
++  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
++  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
++  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [Linking C executable cmTC_882c2.exe]
++  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1]
++  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a]
++  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp]
++  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl --no-whole-archive  -o cmTC_882c2.exe -Wl --out-implib libcmTC_882c2.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
++  ignore line: [Using built-in specs.]
++  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
++  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
++  ignore line: [Target: x86_64-w64-mingw32]
++  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
++  ignore line: [Thread model: posix]
++  ignore line: [gcc version 9.2.0 (tdm64-1) ]
++  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
++  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64']
++  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
++    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
++    arg [-plugin] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
++    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
++    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
++    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
++    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
++    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
++    arg [-m] ==> ignore
++    arg [i386pep] ==> ignore
++    arg [--exclude-libs=libpthread.a] ==> ignore
++    arg [-Bdynamic] ==> ignore
++    arg [-o] ==> ignore
++    arg [cmTC_882c2.exe] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
++    arg [--whole-archive] ==> ignore
++    arg [CMakeFiles\cmTC_882c2.dir/objects.a] ==> ignore
++    arg [--no-whole-archive] ==> ignore
++    arg [--out-implib] ==> ignore
++    arg [libcmTC_882c2.dll.a] ==> ignore
++    arg [--major-image-version] ==> ignore
++    arg [0] ==> ignore
++    arg [--minor-image-version] ==> ignore
++    arg [0] ==> ignore
++    arg [-lmingw32] ==> lib [mingw32]
++    arg [-lgcc] ==> lib [gcc]
++    arg [-lmoldname] ==> lib [moldname]
++    arg [-lmingwex] ==> lib [mingwex]
++    arg [-lmsvcrt] ==> lib [msvcrt]
++    arg [-lpthread] ==> lib [pthread]
++    arg [-ladvapi32] ==> lib [advapi32]
++    arg [-lshell32] ==> lib [shell32]
++    arg [-luser32] ==> lib [user32]
++    arg [-lkernel32] ==> lib [kernel32]
++    arg [-lmingw32] ==> lib [mingw32]
++    arg [-lgcc] ==> lib [gcc]
++    arg [-lmoldname] ==> lib [moldname]
++    arg [-lmingwex] ==> lib [mingwex]
++    arg [-lmsvcrt] ==> lib [msvcrt]
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
++  remove lib [msvcrt]
++  remove lib [msvcrt]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
++  implicit libs: [mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
++  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
++  implicit fwks: []
++
++
++Determining if the CXX compiler works passed with the following output:
++Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
++
++Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_6e85e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_6e85e.dir\build.make CMakeFiles/cmTC_6e85e.dir/build
++mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++Building CXX object CMakeFiles/cmTC_6e85e.dir/testCXXCompiler.cxx.obj
++C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_6e85e.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
++Linking CXX executable cmTC_6e85e.exe
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_6e85e.dir\link.txt --verbose=1
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_6e85e.dir/objects.a
++C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_6e85e.dir/objects.a @CMakeFiles\cmTC_6e85e.dir\objects1.rsp
++C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_6e85e.dir/objects.a -Wl,--no-whole-archive  -o cmTC_6e85e.exe -Wl,--out-implib,libcmTC_6e85e.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_6e85e.dir\linklibs.rsp
++mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++
++
++
++Detecting CXX compiler ABI info compiled with the following output:
++Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
++
++Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build
++mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj
++C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
++Using built-in specs.
++COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
++Target: x86_64-w64-mingw32
++Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
++Thread model: posix
++gcc version 9.2.0 (tdm64-1) 
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
++GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
++	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
++
++GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
++ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
++#include "..." search starts here:
++#include <...> search starts here:
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
++End of search list.
++GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
++	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
++
++GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
++Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
++GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
++COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
++LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
++COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
++Linking CXX executable cmTC_bedbe.exe
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a
++C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp
++C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl,--no-whole-archive  -o cmTC_bedbe.exe -Wl,--out-implib,libcmTC_bedbe.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
++Using built-in specs.
++COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
++COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
++Target: x86_64-w64-mingw32
++Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
++Thread model: posix
++gcc version 9.2.0 (tdm64-1) 
++COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
++LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
++COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
++ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
++COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
++mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
++
++
++
++Parsed CXX implicit include dir info from above output: rv=done
++  found start of include info
++  found start of implicit include info
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
++  end of search list found
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
++  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
++
++
++Parsed CXX implicit link information from above output:
++  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
++  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
++  ignore line: []
++  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build]
++  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
++  ignore line: [Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj]
++  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
++  ignore line: [Using built-in specs.]
++  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
++  ignore line: [Target: x86_64-w64-mingw32]
++  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
++  ignore line: [Thread model: posix]
++  ignore line: [gcc version 9.2.0 (tdm64-1) ]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
++  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
++  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
++  ignore line: []
++  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
++  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
++  ignore line: [#include "..." search starts here:]
++  ignore line: [#include <...> search starts here:]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
++  ignore line: [End of search list.]
++  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
++  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
++  ignore line: []
++  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
++  ignore line: [Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
++  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
++  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
++  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
++  ignore line: [Linking CXX executable cmTC_bedbe.exe]
++  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1]
++  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a]
++  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp]
++  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl --no-whole-archive  -o cmTC_bedbe.exe -Wl --out-implib libcmTC_bedbe.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
++  ignore line: [Using built-in specs.]
++  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
++  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
++  ignore line: [Target: x86_64-w64-mingw32]
++  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
++  ignore line: [Thread model: posix]
++  ignore line: [gcc version 9.2.0 (tdm64-1) ]
++  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
++  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
++  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
++  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64']
++  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
++    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
++    arg [-plugin] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
++    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
++    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
++    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
++    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
++    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
++    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
++    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
++    arg [-m] ==> ignore
++    arg [i386pep] ==> ignore
++    arg [--exclude-libs=libpthread.a] ==> ignore
++    arg [-Bdynamic] ==> ignore
++    arg [-o] ==> ignore
++    arg [cmTC_bedbe.exe] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
++    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
++    arg [--whole-archive] ==> ignore
++    arg [CMakeFiles\cmTC_bedbe.dir/objects.a] ==> ignore
++    arg [--no-whole-archive] ==> ignore
++    arg [--out-implib] ==> ignore
++    arg [libcmTC_bedbe.dll.a] ==> ignore
++    arg [--major-image-version] ==> ignore
++    arg [0] ==> ignore
++    arg [--minor-image-version] ==> ignore
++    arg [0] ==> ignore
++    arg [-Bstatic] ==> ignore
++    arg [-lstdc++] ==> lib [stdc++]
++    arg [-Bdynamic] ==> ignore
++    arg [-lmingw32] ==> lib [mingw32]
++    arg [-lgcc] ==> lib [gcc]
++    arg [-lmoldname] ==> lib [moldname]
++    arg [-lmingwex] ==> lib [mingwex]
++    arg [-lmsvcrt] ==> lib [msvcrt]
++    arg [-lpthread] ==> lib [pthread]
++    arg [-ladvapi32] ==> lib [advapi32]
++    arg [-lshell32] ==> lib [shell32]
++    arg [-luser32] ==> lib [user32]
++    arg [-lkernel32] ==> lib [kernel32]
++    arg [-lmingw32] ==> lib [mingw32]
++    arg [-lgcc] ==> lib [gcc]
++    arg [-lmoldname] ==> lib [moldname]
++    arg [-lmingwex] ==> lib [mingwex]
++    arg [-lmsvcrt] ==> lib [msvcrt]
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
++    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
++  remove lib [msvcrt]
++  remove lib [msvcrt]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
++  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
++  implicit libs: [stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
++  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
++  implicit fwks: []
++
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile.cmake b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
+new file mode 100644
+index 0000000..75be321
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
+@@ -0,0 +1,57 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# The generator used is:
++set(CMAKE_DEPENDS_GENERATOR "MinGW Makefiles")
++
++# The top level Makefile was generated from the following files:
++set(CMAKE_MAKEFILE_DEPENDS
++  "CMakeCache.txt"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCInformation.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCXXInformation.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCommonLanguageInclude.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeExtraGeneratorDetermineCompilerMacrosAndIncludeDirs.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeFindCodeBlocks.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeGenericSystem.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeInitializeConfigs.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeLanguageInformation.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeRCInformation.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInformation.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInitialize.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-C.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-CXX.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Internal/CMakeCheckCompilerFlag.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C-ABI.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-windres.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/WindowsPaths.cmake"
++  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/ProcessorCount.cmake"
++  "../CMakeLists.txt"
++  "CMakeFiles/3.17.3/CMakeCCompiler.cmake"
++  "CMakeFiles/3.17.3/CMakeCXXCompiler.cmake"
++  "CMakeFiles/3.17.3/CMakeRCCompiler.cmake"
++  "CMakeFiles/3.17.3/CMakeSystem.cmake"
++  )
++
++# The corresponding makefile is:
++set(CMAKE_MAKEFILE_OUTPUTS
++  "Makefile"
++  "CMakeFiles/cmake.check_cache"
++  )
++
++# Byproducts of CMake generate step:
++set(CMAKE_MAKEFILE_PRODUCTS
++  "CMakeFiles/CMakeDirectoryInformation.cmake"
++  )
++
++# Dependency information for all targets:
++set(CMAKE_DEPEND_INFO_FILES
++  "CMakeFiles/dry.dir/DependInfo.cmake"
++  )
+diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile2 b/dry/cmake-build-debug/CMakeFiles/Makefile2
+new file mode 100644
+index 0000000..bbf8d8a
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/Makefile2
+@@ -0,0 +1,125 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# Default target executed when no arguments are given to make.
++default_target: all
++
++.PHONY : default_target
++
++#=============================================================================
++# Special targets provided by cmake.
++
++# Disable implicit rules so canonical targets will work.
++.SUFFIXES:
++
++
++# Disable VCS-based implicit rules.
++% : %,v
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%,v
++
++
++# Disable VCS-based implicit rules.
++% : SCCS/s.%
++
++
++# Disable VCS-based implicit rules.
++% : s.%
++
++
++.SUFFIXES: .hpux_make_needs_suffix_list
++
++
++# Command-line flag to silence nested $(MAKE).
++$(VERBOSE)MAKESILENT = -s
++
++# Suppress display of executed commands.
++$(VERBOSE).SILENT:
++
++
++# A target that is always out of date.
++cmake_force:
++
++.PHONY : cmake_force
++
++#=============================================================================
++# Set environment variables for the build.
++
++SHELL = cmd.exe
++
++# The CMake executable.
++CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
++
++# The command to remove a file.
++RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
++
++# Escaping for special characters.
++EQUALS = =
++
++# The top-level source directory on which CMake was run.
++CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
++
++# The top-level build directory on which CMake was run.
++CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
++
++#=============================================================================
++# Directory level rules for the build root directory
++
++# The main recursive "all" target.
++all: CMakeFiles/dry.dir/all
++
++.PHONY : all
++
++# The main recursive "preinstall" target.
++preinstall:
++
++.PHONY : preinstall
++
++# The main recursive "clean" target.
++clean: CMakeFiles/dry.dir/clean
++
++.PHONY : clean
++
++#=============================================================================
++# Target rules for target CMakeFiles/dry.dir
++
++# All Build rule for target.
++CMakeFiles/dry.dir/all:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/depend
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=1,2,3 "Built target dry"
++.PHONY : CMakeFiles/dry.dir/all
++
++# Build rule for subdir invocation for target.
++CMakeFiles/dry.dir/rule: cmake_check_build_system
++	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 3
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/dry.dir/all
++	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
++.PHONY : CMakeFiles/dry.dir/rule
++
++# Convenience name for target.
++dry: CMakeFiles/dry.dir/rule
++
++.PHONY : dry
++
++# clean rule for target.
++CMakeFiles/dry.dir/clean:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/clean
++.PHONY : CMakeFiles/dry.dir/clean
++
++#=============================================================================
++# Special targets to cleanup operation of make.
++
++# Special rule to run CMake to check the build system integrity.
++# No rule that depends on this can have commands that come from listfiles
++# because they might be regenerated.
++cmake_check_build_system:
++	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
++.PHONY : cmake_check_build_system
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
+new file mode 100644
+index 0000000..3e82961
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
+@@ -0,0 +1,3 @@
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/edit_cache.dir
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/rebuild_cache.dir
+diff --git a/dry/cmake-build-debug/CMakeFiles/clion-environment.txt b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
+new file mode 100644
+index 0000000..59a47ca
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
+@@ -0,0 +1,4 @@
++ToolSet: w64 7.0 (local)@C:\TDM-GCC-64
++Options: 
++
++Options:
+\ No newline at end of file
+diff --git a/dry/cmake-build-debug/CMakeFiles/clion-log.txt b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
+new file mode 100644
+index 0000000..a544d62
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
+@@ -0,0 +1,4 @@
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
++-- Configuring done
++-- Generating done
++-- Build files have been written to: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+diff --git a/dry/cmake-build-debug/CMakeFiles/cmake.check_cache b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
+new file mode 100644
+index 0000000..3dccd73
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
+@@ -0,0 +1 @@
++# This file is generated by cmake for dependency checking of the CMakeCache.txt file
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+new file mode 100644
+index 0000000..79f3388
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+@@ -0,0 +1,16 @@
++#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
++
++#IncludeRegexScan: ^.*$
++
++#IncludeRegexComplain: ^$
++
++#IncludeRegexTransform: 
++
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
++Pirate.h
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++
++C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++iostream
++-
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
+new file mode 100644
+index 0000000..0f0b9bc
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
+@@ -0,0 +1,21 @@
++# The set of languages for which implicit dependencies are needed:
++set(CMAKE_DEPENDS_LANGUAGES
++  "CXX"
++  )
++# The set of files for implicit dependencies of each language:
++set(CMAKE_DEPENDS_CHECK_CXX
++  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj"
++  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj"
++  )
++set(CMAKE_CXX_COMPILER_ID "GNU")
++
++# The include file search paths:
++set(CMAKE_CXX_TARGET_INCLUDE_PATH
++  )
++
++# Targets to which this target links.
++set(CMAKE_TARGET_LINKED_INFO_FILES
++  )
++
++# Fortran module output directory.
++set(CMAKE_Fortran_TARGET_MODULE_DIR "")
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
+new file mode 100644
+index 0000000..458c3e0
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
+new file mode 100644
+index 0000000..7086ad8
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
+@@ -0,0 +1,134 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# Delete rule output on recipe failure.
++.DELETE_ON_ERROR:
++
++
++#=============================================================================
++# Special targets provided by cmake.
++
++# Disable implicit rules so canonical targets will work.
++.SUFFIXES:
++
++
++# Disable VCS-based implicit rules.
++% : %,v
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%,v
++
++
++# Disable VCS-based implicit rules.
++% : SCCS/s.%
++
++
++# Disable VCS-based implicit rules.
++% : s.%
++
++
++.SUFFIXES: .hpux_make_needs_suffix_list
++
++
++# Command-line flag to silence nested $(MAKE).
++$(VERBOSE)MAKESILENT = -s
++
++# Suppress display of executed commands.
++$(VERBOSE).SILENT:
++
++
++# A target that is always out of date.
++cmake_force:
++
++.PHONY : cmake_force
++
++#=============================================================================
++# Set environment variables for the build.
++
++SHELL = cmd.exe
++
++# The CMake executable.
++CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
++
++# The command to remove a file.
++RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
++
++# Escaping for special characters.
++EQUALS = =
++
++# The top-level source directory on which CMake was run.
++CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
++
++# The top-level build directory on which CMake was run.
++CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
++
++# Include any dependencies generated for this target.
++include CMakeFiles/dry.dir/depend.make
++
++# Include the progress variables for this target.
++include CMakeFiles/dry.dir/progress.make
++
++# Include the compile flags for this target's objects.
++include CMakeFiles/dry.dir/flags.make
++
++CMakeFiles/dry.dir/main.cpp.obj: CMakeFiles/dry.dir/flags.make
++CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/dry.dir/main.cpp.obj"
++	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp"
++
++CMakeFiles/dry.dir/main.cpp.i: cmake_force
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/main.cpp.i"
++	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" > CMakeFiles\dry.dir\main.cpp.i
++
++CMakeFiles/dry.dir/main.cpp.s: cmake_force
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/main.cpp.s"
++	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" -o CMakeFiles\dry.dir\main.cpp.s
++
++CMakeFiles/dry.dir/Pirate.cpp.obj: CMakeFiles/dry.dir/flags.make
++CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/dry.dir/Pirate.cpp.obj"
++	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp"
++
++CMakeFiles/dry.dir/Pirate.cpp.i: cmake_force
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/Pirate.cpp.i"
++	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" > CMakeFiles\dry.dir\Pirate.cpp.i
++
++CMakeFiles/dry.dir/Pirate.cpp.s: cmake_force
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/Pirate.cpp.s"
++	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" -o CMakeFiles\dry.dir\Pirate.cpp.s
++
++# Object files for target dry
++dry_OBJECTS = \
++"CMakeFiles/dry.dir/main.cpp.obj" \
++"CMakeFiles/dry.dir/Pirate.cpp.obj"
++
++# External object files for target dry
++dry_EXTERNAL_OBJECTS =
++
++dry.exe: CMakeFiles/dry.dir/main.cpp.obj
++dry.exe: CMakeFiles/dry.dir/Pirate.cpp.obj
++dry.exe: CMakeFiles/dry.dir/build.make
++dry.exe: CMakeFiles/dry.dir/linklibs.rsp
++dry.exe: CMakeFiles/dry.dir/objects1.rsp
++dry.exe: CMakeFiles/dry.dir/link.txt
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Linking CXX executable dry.exe"
++	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\dry.dir\link.txt --verbose=$(VERBOSE)
++
++# Rule to build all files generated by this target.
++CMakeFiles/dry.dir/build: dry.exe
++
++.PHONY : CMakeFiles/dry.dir/build
++
++CMakeFiles/dry.dir/clean:
++	$(CMAKE_COMMAND) -P CMakeFiles\dry.dir\cmake_clean.cmake
++.PHONY : CMakeFiles/dry.dir/clean
++
++CMakeFiles/dry.dir/depend:
++	$(CMAKE_COMMAND) -E cmake_depends "MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\dry.dir\DependInfo.cmake" --color=$(COLOR)
++.PHONY : CMakeFiles/dry.dir/depend
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
+new file mode 100644
+index 0000000..d58f6e3
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
+@@ -0,0 +1,13 @@
++file(REMOVE_RECURSE
++  "CMakeFiles/dry.dir/Pirate.cpp.obj"
++  "CMakeFiles/dry.dir/main.cpp.obj"
++  "dry.exe"
++  "dry.exe.manifest"
++  "dry.pdb"
++  "libdry.dll.a"
++)
++
++# Per-language clean rules from dependency scanning.
++foreach(lang CXX)
++  include(CMakeFiles/dry.dir/cmake_clean_${lang}.cmake OPTIONAL)
++endforeach()
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+new file mode 100644
+index 0000000..51eeb9b
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+@@ -0,0 +1,8 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++CMakeFiles/dry.dir/Pirate.cpp.obj
++ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
++ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
++CMakeFiles/dry.dir/main.cpp.obj
++ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+new file mode 100644
+index 0000000..3b9c994
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+@@ -0,0 +1,8 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
++CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
++
++CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
+new file mode 100644
+index 0000000..dee4354
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
+@@ -0,0 +1,10 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# compile CXX with C:/TDM-GCC-64/bin/g++.exe
++CXX_FLAGS = -g   -std=gnu++14
++
++CXX_DEFINES = 
++
++CXX_INCLUDES = 
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
+new file mode 100644
+index 0000000..81d1196
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
+@@ -0,0 +1,3 @@
++"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\dry.dir/objects.a
++C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\dry.dir/objects.a @CMakeFiles\dry.dir\objects1.rsp
++C:\TDM-GCC-64\bin\g++.exe -g   -Wl,--whole-archive CMakeFiles\dry.dir/objects.a -Wl,--no-whole-archive  -o dry.exe -Wl,--out-implib,libdry.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\dry.dir\linklibs.rsp
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
+new file mode 100644
+index 0000000..8ed353a
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
+@@ -0,0 +1 @@
++ -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
+new file mode 100644
+index 0000000..052a66b
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
+new file mode 100644
+index 0000000..7fd194a
+Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
+new file mode 100644
+index 0000000..a83fd1c
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
+@@ -0,0 +1 @@
++CMakeFiles/dry.dir/main.cpp.obj CMakeFiles/dry.dir/Pirate.cpp.obj
+diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
+new file mode 100644
+index 0000000..6a9dc74
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
+@@ -0,0 +1,4 @@
++CMAKE_PROGRESS_1 = 1
++CMAKE_PROGRESS_2 = 2
++CMAKE_PROGRESS_3 = 3
++
+diff --git a/dry/cmake-build-debug/CMakeFiles/progress.marks b/dry/cmake-build-debug/CMakeFiles/progress.marks
+new file mode 100644
+index 0000000..00750ed
+--- /dev/null
++++ b/dry/cmake-build-debug/CMakeFiles/progress.marks
+@@ -0,0 +1 @@
++3
+diff --git a/dry/cmake-build-debug/Makefile b/dry/cmake-build-debug/Makefile
+new file mode 100644
+index 0000000..d181146
+--- /dev/null
++++ b/dry/cmake-build-debug/Makefile
+@@ -0,0 +1,227 @@
++# CMAKE generated file: DO NOT EDIT!
++# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
++
++# Default target executed when no arguments are given to make.
++default_target: all
++
++.PHONY : default_target
++
++# Allow only one "make -f Makefile2" at a time, but pass parallelism.
++.NOTPARALLEL:
++
++
++#=============================================================================
++# Special targets provided by cmake.
++
++# Disable implicit rules so canonical targets will work.
++.SUFFIXES:
++
++
++# Disable VCS-based implicit rules.
++% : %,v
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%
++
++
++# Disable VCS-based implicit rules.
++% : RCS/%,v
++
++
++# Disable VCS-based implicit rules.
++% : SCCS/s.%
++
++
++# Disable VCS-based implicit rules.
++% : s.%
++
++
++.SUFFIXES: .hpux_make_needs_suffix_list
++
++
++# Command-line flag to silence nested $(MAKE).
++$(VERBOSE)MAKESILENT = -s
++
++# Suppress display of executed commands.
++$(VERBOSE).SILENT:
++
++
++# A target that is always out of date.
++cmake_force:
++
++.PHONY : cmake_force
++
++#=============================================================================
++# Set environment variables for the build.
++
++SHELL = cmd.exe
++
++# The CMake executable.
++CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
++
++# The command to remove a file.
++RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
++
++# Escaping for special characters.
++EQUALS = =
++
++# The top-level source directory on which CMake was run.
++CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
++
++# The top-level build directory on which CMake was run.
++CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
++
++#=============================================================================
++# Targets provided globally by CMake.
++
++# Special rule for the target edit_cache
++edit_cache:
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
++	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
++.PHONY : edit_cache
++
++# Special rule for the target edit_cache
++edit_cache/fast: edit_cache
++
++.PHONY : edit_cache/fast
++
++# Special rule for the target rebuild_cache
++rebuild_cache:
++	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
++	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
++.PHONY : rebuild_cache
++
++# Special rule for the target rebuild_cache
++rebuild_cache/fast: rebuild_cache
++
++.PHONY : rebuild_cache/fast
++
++# The main all target
++all: cmake_check_build_system
++	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\progress.marks"
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 all
++	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
++.PHONY : all
++
++# The main clean target
++clean:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 clean
++.PHONY : clean
++
++# The main clean target
++clean/fast: clean
++
++.PHONY : clean/fast
++
++# Prepare targets for installation.
++preinstall: all
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
++.PHONY : preinstall
++
++# Prepare targets for installation.
++preinstall/fast:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
++.PHONY : preinstall/fast
++
++# clear depends
++depend:
++	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
++.PHONY : depend
++
++#=============================================================================
++# Target rules for targets named dry
++
++# Build rule for target.
++dry: cmake_check_build_system
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 dry
++.PHONY : dry
++
++# fast build rule for target.
++dry/fast:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
++.PHONY : dry/fast
++
++Pirate.obj: Pirate.cpp.obj
++
++.PHONY : Pirate.obj
++
++# target to build an object file
++Pirate.cpp.obj:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.obj
++.PHONY : Pirate.cpp.obj
++
++Pirate.i: Pirate.cpp.i
++
++.PHONY : Pirate.i
++
++# target to preprocess a source file
++Pirate.cpp.i:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.i
++.PHONY : Pirate.cpp.i
++
++Pirate.s: Pirate.cpp.s
++
++.PHONY : Pirate.s
++
++# target to generate assembly for a file
++Pirate.cpp.s:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.s
++.PHONY : Pirate.cpp.s
++
++main.obj: main.cpp.obj
++
++.PHONY : main.obj
++
++# target to build an object file
++main.cpp.obj:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.obj
++.PHONY : main.cpp.obj
++
++main.i: main.cpp.i
++
++.PHONY : main.i
++
++# target to preprocess a source file
++main.cpp.i:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.i
++.PHONY : main.cpp.i
++
++main.s: main.cpp.s
++
++.PHONY : main.s
++
++# target to generate assembly for a file
++main.cpp.s:
++	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.s
++.PHONY : main.cpp.s
++
++# Help Target
++help:
++	@echo The following are some of the valid targets for this Makefile:
++	@echo ... all (the default if no target is provided)
++	@echo ... clean
++	@echo ... depend
++	@echo ... edit_cache
++	@echo ... rebuild_cache
++	@echo ... dry
++	@echo ... Pirate.obj
++	@echo ... Pirate.i
++	@echo ... Pirate.s
++	@echo ... main.obj
++	@echo ... main.i
++	@echo ... main.s
++.PHONY : help
++
++
++
++#=============================================================================
++# Special targets to cleanup operation of make.
++
++# Special rule to run CMake to check the build system integrity.
++# No rule that depends on this can have commands that come from listfiles
++# because they might be regenerated.
++cmake_check_build_system:
++	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
++.PHONY : cmake_check_build_system
++
+diff --git a/dry/cmake-build-debug/cmake_install.cmake b/dry/cmake-build-debug/cmake_install.cmake
+new file mode 100644
+index 0000000..472ee00
+--- /dev/null
++++ b/dry/cmake-build-debug/cmake_install.cmake
+@@ -0,0 +1,44 @@
++# Install script for directory: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
++
++# Set the install prefix
++if(NOT DEFINED CMAKE_INSTALL_PREFIX)
++  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/dry")
++endif()
++string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
++
++# Set the install configuration name.
++if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
++  if(BUILD_TYPE)
++    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
++           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
++  else()
++    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
++  endif()
++  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
++endif()
++
++# Set the component getting installed.
++if(NOT CMAKE_INSTALL_COMPONENT)
++  if(COMPONENT)
++    message(STATUS "Install component: \"${COMPONENT}\"")
++    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
++  else()
++    set(CMAKE_INSTALL_COMPONENT)
++  endif()
++endif()
++
++# Is this installation the result of a crosscompile?
++if(NOT DEFINED CMAKE_CROSSCOMPILING)
++  set(CMAKE_CROSSCOMPILING "FALSE")
++endif()
++
++if(CMAKE_INSTALL_COMPONENT)
++  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
++else()
++  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
++endif()
++
++string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
++       "${CMAKE_INSTALL_MANIFEST_FILES}")
++file(WRITE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
++     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
+diff --git a/dry/cmake-build-debug/dry.cbp b/dry/cmake-build-debug/dry.cbp
+new file mode 100644
+index 0000000..6929279
+--- /dev/null
++++ b/dry/cmake-build-debug/dry.cbp
+@@ -0,0 +1,98 @@
++<?xml version="1.0" encoding="UTF-8"?>
++<CodeBlocks_project_file>
++	<FileVersion major="1" minor="6"/>
++	<Project>
++		<Option title="dry"/>
++		<Option makefile_is_custom="1"/>
++		<Option compiler="gcc"/>
++		<Option virtualFolders="CMake Files\;"/>
++		<Build>
++			<Target title="all">
++				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
++				<Option type="4"/>
++				<MakeCommands>
++					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
++					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
++					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++				</MakeCommands>
++			</Target>
++			<Target title="dry">
++				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
++				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
++				<Option object_output="./"/>
++				<Option type="1"/>
++				<Option compiler="gcc"/>
++				<Compiler>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
++				</Compiler>
++				<MakeCommands>
++					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry"/>
++					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
++					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++				</MakeCommands>
++			</Target>
++			<Target title="dry/fast">
++				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
++				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
++				<Option object_output="./"/>
++				<Option type="1"/>
++				<Option compiler="gcc"/>
++				<Compiler>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
++					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
++				</Compiler>
++				<MakeCommands>
++					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry/fast"/>
++					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
++					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++				</MakeCommands>
++			</Target>
++			<Target title="edit_cache">
++				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
++				<Option type="4"/>
++				<MakeCommands>
++					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
++					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
++					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++				</MakeCommands>
++			</Target>
++			<Target title="rebuild_cache">
++				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
++				<Option type="4"/>
++				<MakeCommands>
++					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
++					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
++					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
++				</MakeCommands>
++			</Target>
++		</Build>
++		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp">
++			<Option target="dry"/>
++		</Unit>
++		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h">
++			<Option target="dry"/>
++		</Unit>
++		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp">
++			<Option target="dry"/>
++		</Unit>
++		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/CMakeLists.txt">
++			<Option virtualFolder="CMake Files\"/>
++		</Unit>
++	</Project>
++</CodeBlocks_project_file>
+diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
+new file mode 100644
+index 0000000..768c9c7
+Binary files /dev/null and b/dry/cmake-build-debug/dry.exe differ
+diff --git a/dry/main.cpp b/dry/main.cpp
+index 6b659a1..bc8f460 100755
+--- a/dry/main.cpp
++++ b/dry/main.cpp
+@@ -1,25 +1,6 @@
+ #include <iostream>
+-#include "Pirate.h"
+-#include <cstring>
+-
+-using std::cout, std::endl;
+-
+ 
+ int main() {
+-
+-    Pirate luffy("Luffy");
+-    Pirate zoro("Zoro");
+-
+-    const int crewSize = 2;
+-    
+-    Pirate strawHatCrew[2];
+-    strawHatCrew[0] = luffy;
+-    strawHatCrew[1] = zoro;
+-    
+-    cout << "Straw Hat crew contains:" << endl;
+-    for (int i = 0; i < crewSize; i++) {
+-        cout << strawHatCrew[i] << endl;
+-    }
+-
++    std::cout << "Hello, World!" << std::endl;
+     return 0;
+ }
+
+commit 67a992620c204243a3c94749804df35fcebbf6d3
+Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
+Date:   Fri Dec 13 02:44:01 2024 +0200
+
+    [Feature] Add devil fruit feature
+
+diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
+index c96892e..fc3c314 100755
+--- a/dry/Pirate.cpp
++++ b/dry/Pirate.cpp
+@@ -2,7 +2,7 @@
+ #include "Pirate.h"
+ 
+ 
+-Pirate::Pirate(const string& name): name(name) {}
++Pirate::Pirate(const string& name, DEVIL_FRUIT devilFruit): name(name), devilFruit(devilFruit) {}
+ 
+ 
+ void Pirate::setName(const string& name){
+@@ -10,12 +10,32 @@ void Pirate::setName(const string& name){
+ }
+ 
+ 
++void Pirate::setDevilFruit(DEVIL_FRUIT devilFruit){
++    this->devilFruit = devilFruit;
++}
++
++
+ std::string Pirate::getName(){
+     return name;
+ }
+ 
+ 
++DEVIL_FRUIT Pirate::getDevilFruit(){
++    return devilFruit;
++}
++
++
++const char* const devilFruitNames[] = {
++    "Gum Gum",
++    "Smoke Smoke",
++    "Flame Flame",
++    "Rumble Rumble",
++    "String String",
++    "Ice Ice",
++    "None"
++};
++
+ std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
+-    os << pirate.name;
++    os << pirate.name << " (Devil Fruit: " << devilFruitNames[pirate.devilFruit] << ")";
+     return os;
+ }
+diff --git a/dry/Pirate.h b/dry/Pirate.h
+index 7769667..4c044b1 100755
+--- a/dry/Pirate.h
++++ b/dry/Pirate.h
+@@ -5,18 +5,31 @@
+ 
+ using std::string;
+ 
++enum DEVIL_FRUIT {
++    GUM_GUM_FRUIT,
++    SMOKE_SMOKE_FRUIT,
++    FLAME_FLAME_FRUIT,
++    RUMBLE_RUMBLE_FRUIT,
++    STRING_STRING_FRUIT,
++    ICE_ICE_FRUIT,
++    NONE
++};
++
+ class Pirate {
+ private:
+     string name;
++    DEVIL_FRUIT devilFruit;
+ 
+ public:
+-    Pirate(const string& name);
++    Pirate(const string& name, DEVIL_FRUIT devilFruit = DEVIL_FRUIT::NONE);
+ 
+     ~Pirate() = default;
+ 
+     void setName(const string& name);
++    void setDevilFruit(DEVIL_FRUIT devilFruit);
+ 
+     string getName();
++    DEVIL_FRUIT getDevilFruit();
+ 
+     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
+ };
+diff --git a/dry/main.cpp b/dry/main.cpp
+index 6b659a1..2911f71 100755
+--- a/dry/main.cpp
++++ b/dry/main.cpp
+@@ -7,7 +7,7 @@ using std::cout, std::endl;
+ 
+ int main() {
+ 
+-    Pirate luffy("Luffy");
++    Pirate luffy("Luffy", GUM_GUM_FRUIT);
+     Pirate zoro("Zoro");
+ 
+     const int crewSize = 2;
+
+commit 74f6b97bc53ce50d65642ddedae20581be903ddf
+Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
+Date:   Fri Dec 13 02:41:38 2024 +0200
+
+    Initial Commit
+
+diff --git a/README.md b/README.md
+new file mode 100644
+index 0000000..0a4b9a1
+--- /dev/null
++++ b/README.md
+@@ -0,0 +1,7 @@
++# Matam Homework 2
++
++This repository contains all supplied files for the second homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
++
++You may find the full instructions for this assignment on the [course's website](https://webcourse.cs.technion.ac.il/02340124/Winter2024-2025).
++
++Good luck and have fun!
+diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
+new file mode 100755
+index 0000000..c96892e
+--- /dev/null
++++ b/dry/Pirate.cpp
+@@ -0,0 +1,21 @@
++
++#include "Pirate.h"
++
++
++Pirate::Pirate(const string& name): name(name) {}
++
++
++void Pirate::setName(const string& name){
++    this->name = name;
++}
++
++
++std::string Pirate::getName(){
++    return name;
++}
++
++
++std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
++    os << pirate.name;
++    return os;
++}
+diff --git a/dry/Pirate.h b/dry/Pirate.h
+new file mode 100755
+index 0000000..7769667
+--- /dev/null
++++ b/dry/Pirate.h
+@@ -0,0 +1,22 @@
++
++#pragma once
++
++#include <iostream>
++
++using std::string;
++
++class Pirate {
++private:
++    string name;
++
++public:
++    Pirate(const string& name);
++
++    ~Pirate() = default;
++
++    void setName(const string& name);
++
++    string getName();
++
++    friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
++};
+diff --git a/dry/main.cpp b/dry/main.cpp
+new file mode 100755
+index 0000000..6b659a1
+--- /dev/null
++++ b/dry/main.cpp
+@@ -0,0 +1,25 @@
++#include <iostream>
++#include "Pirate.h"
++#include <cstring>
++
++using std::cout, std::endl;
++
++
++int main() {
++
++    Pirate luffy("Luffy");
++    Pirate zoro("Zoro");
++
++    const int crewSize = 2;
++    
++    Pirate strawHatCrew[2];
++    strawHatCrew[0] = luffy;
++    strawHatCrew[1] = zoro;
++    
++    cout << "Straw Hat crew contains:" << endl;
++    for (int i = 0; i < crewSize; i++) {
++        cout << strawHatCrew[i] << endl;
++    }
++
++    return 0;
++}
+diff --git a/wet/Utilities.cpp b/wet/Utilities.cpp
+new file mode 100755
+index 0000000..c35944f
+--- /dev/null
++++ b/wet/Utilities.cpp
+@@ -0,0 +1,23 @@
++
++#include "Utilities.h"
++
++#include <iostream>
++
++using std::cerr;
++
++
++void exitWithError(MatamErrorType error) {
++    std::cerr << "Matam Error: ";
++    switch (error) {
++        case MatamErrorType::UnmatchedSizes:
++            std::cerr << "Unmatched matrices" << std::endl;
++            break;
++        case MatamErrorType::OutOfBounds:
++            std::cerr << "Out of bounds" << std::endl;
++            break;
++        case MatamErrorType::NotSquareMatrix:
++            std::cerr << "Matrix must be square to calculate determinant" << std::endl;
++            break;
++    }
++    exit(1);
++}
+diff --git a/wet/Utilities.h b/wet/Utilities.h
+new file mode 100755
+index 0000000..c07958d
+--- /dev/null
++++ b/wet/Utilities.h
+@@ -0,0 +1,10 @@
++
++#pragma once
++
++enum class MatamErrorType {
++    UnmatchedSizes,
++    OutOfBounds,
++    NotSquareMatrix
++};
++
++void exitWithError(MatamErrorType error);
+diff --git a/wet/test.expected b/wet/test.expected
+new file mode 100755
+index 0000000..d107ab8
+--- /dev/null
++++ b/wet/test.expected
+@@ -0,0 +1,19 @@
++|5|6|
++|7|8|
++
++Movie Name: MataMatrix
++Author: Baraa Egbaria
++
++Frame 0:
++|1|2|
++|3|4|
++
++Frame 1:
++|5|6|
++|7|8|
++
++Frame 2:
++|1|2|
++|3|4|
++
++-----End of Movie-----
+diff --git a/wet/tests.cpp b/wet/tests.cpp
+new file mode 100755
+index 0000000..d8bc5a7
+--- /dev/null
++++ b/wet/tests.cpp
+@@ -0,0 +1,130 @@
++
++
++#include <string>
++#include <iostream>
++
++#include "Matrix.h"
++#include "MataMvidia.h"
++
++using namespace std;
++typedef bool (*testFunc)(void);
++
++bool testMatrix(std::ostream& out);
++bool testMataMvidia(std::ostream& out);
++
++
++#define ASSERT_TEST(expr)                                                      \
++do {                                                                           \
++    if (!(expr)) {                                                             \
++        std::cout << "\nAssertion failed at ";                                 \
++        std::cout << __FILE__ << ":" << __LINE__ << ": " << #expr << std::endl;\
++        exit(1);                                                               \
++    }                                                                          \
++} while (0)
++
++
++int main() {
++    testMatrix(std::cout);
++    testMataMvidia(std::cout);
++    return 0;
++}
++
++bool testMatrix(std::ostream& out) {
++    Matrix m1(2,2);
++    Matrix m2(2,2);
++
++    m1(0,0) = 1;
++    m1(0,1) = 2;
++    m1(1,0) = 3;
++    m1(1,1) = 4;
++
++    m2(0,0) = 5;
++    m2(0,1) = 6;
++    m2(1,0) = 7;
++    m2(1,1) = 8;
++
++    Matrix m3 = m1 + m2;
++    ASSERT_TEST(m3(0,0) == 6);
++    ASSERT_TEST(m3(0,1) == 8);
++    ASSERT_TEST(m3(1,0) == 10);
++    ASSERT_TEST(m3(1,1) == 12);
++
++    Matrix m4 = m1 * m2;
++    m4 *= 1;
++    ASSERT_TEST(m4(0,0) == 19);
++    ASSERT_TEST(m4(0,1) == 22);
++    ASSERT_TEST(m4(1,0) == 43);
++    ASSERT_TEST(m4(1,1) == 50);
++
++    m1 += m2;
++    m1 *= m2;
++    m1 -= m2;
++    m1 = m3 - m2;
++
++    ASSERT_TEST(-m1 == -1*m1);
++    ASSERT_TEST(-m1 == m1*-1);
++
++    ASSERT_TEST(m2.rotateClockwise().rotateCounterClockwise() == m2);
++
++    ASSERT_TEST(m1.transpose().transpose() == m1);
++
++    out << m2 << std::endl;
++
++    return true;
++}
++
++bool testMataMvidia(std::ostream& out) {
++    Matrix frame1(2,2);
++    Matrix frame2(2,2);
++
++    frame1(0,0) = 1;
++    frame1(0,1) = 2;
++    frame1(1,0) = 3;
++    frame1(1,1) = 4;
++
++    frame2(0,0) = 5;
++    frame2(0,1) = 6;
++    frame2(1,0) = 7;
++    frame2(1,1) = 8;
++
++    Matrix array[2];
++    array[0] = frame1;
++    array[1] = frame2;
++
++    MataMvidia movie("MataMatrix","Baraa Egbaria",array, 2);
++
++    ASSERT_TEST(movie[0] == frame1);
++
++    movie += frame1;
++
++    ASSERT_TEST(movie[2] == frame1);
++
++    Matrix frame01(2,2);
++    Matrix frame11(2,2);
++
++    frame01(0,0) = 10;
++    frame01(0,1) = 20;
++    frame01(1,0) = 30;
++    frame01(1,1) = 40;
++
++    frame11(0,0) = 50;
++    frame11(0,1) = 60;
++    frame11(1,0) = 70;
++    frame11(1,1) = 80;
++
++    Matrix array1[2];
++    array1[0] = frame01;
++    array1[1] = frame11;
++
++    MataMvidia movie1("MataMatrix and the chamber of secrets","Baraa Egbaria",array1, 2);
++
++    ASSERT_TEST(movie1[0] == frame01);
++
++    //test output
++    out << movie;
++
++    MataMvidia movie2 = movie + movie1;
++    movie += movie1;
++
++    return true;
++}

commit 6aab0ebca949f9d5671e40b3c8fd1b71379a4908
Merge: b3ba67d 67a9926
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 00:16:45 2024 +0200

    Merge branch 'devil_fruit'

commit b3ba67d97db771e212417253b02af29f761b363f
Author: nooryass <nooryassin059@gmail.com>
Date:   Sun Dec 29 00:00:44 2024 +0200

    3.3 - extending the program

diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
index c96892e..fc56fe0 100755
--- a/dry/Pirate.cpp
+++ b/dry/Pirate.cpp
@@ -2,20 +2,27 @@
 #include "Pirate.h"
 
 
-Pirate::Pirate(const string& name): name(name) {}
+Pirate::Pirate(const string& name,int bounty): name(name) ,bounty(bounty){}
 
 
 void Pirate::setName(const string& name){
     this->name = name;
 }
 
+void Pirate::setBounty(int bounty) {
+    this->bounty = bounty;
+}
+
+int Pirate::getBounty() const {
+    return bounty;
+}
 
 std::string Pirate::getName(){
     return name;
 }
 
 
-std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
-    os << pirate.name;
+std::ostream &operator<<(std::ostream &os, const Pirate &pirate) {
+    os << "Pirate: " << pirate.name << ", Bounty: " << pirate.bounty; // Updated output
     return os;
 }
diff --git a/dry/Pirate.h b/dry/Pirate.h
index 39a883a..2ec3a2d 100755
--- a/dry/Pirate.h
+++ b/dry/Pirate.h
@@ -8,9 +8,11 @@ using std::string;
 class Pirate {
 private:
     string name;
+    int bounty;
+
 
 public:
-    Pirate(const string& name);
+    Pirate(const string& name,int bounty);
 
     Pirate() = default;
 
@@ -19,6 +21,8 @@ public:
     void setName(const string& name);
 
     string getName();
+    void setBounty(int bounty);
 
+    int getBounty() const;
     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
 };
diff --git a/dry/main.cpp b/dry/main.cpp
index ea71e37..9261be1 100755
--- a/dry/main.cpp
+++ b/dry/main.cpp
@@ -7,8 +7,8 @@ using std::cout, std::endl;
 
 int main() {
 
-    Pirate luffy("Luffy");
-    Pirate zoro("Zoro");
+    Pirate luffy("Luffy",1000000);
+    Pirate zoro("Zoro",500000);
 
     const int crewSize = 2;
 

commit 5fdae2d23c4f337cd61a9eaf0c1eef526a1ec88c
Author: nooryass <nooryassin059@gmail.com>
Date:   Sat Dec 28 23:51:00 2024 +0200

    switching to c++ 17

diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
index 1d63d19..6a08078 100644
--- a/dry/CMakeLists.txt
+++ b/dry/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 3.17)
 project(dry)
 
-set(CMAKE_CXX_STANDARD 14)
+set(CMAKE_CXX_STANDARD 17)
 
 add_executable(dry main.cpp Pirate.cpp Pirate.h)
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
deleted file mode 100644
index 7b4d68d..0000000
--- a/dry/cmake-build-debug/CMakeFiles/Progress/1
+++ /dev/null
@@ -1 +0,0 @@
-empty
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
deleted file mode 100644
index 00750ed..0000000
--- a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
+++ /dev/null
@@ -1 +0,0 @@
-3
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
index 1842398..dcff284 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
@@ -6,6 +6,10 @@
 
 #IncludeRegexTransform: 
 
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
+Pirate.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+
 C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
 iostream
 -
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
index 458c3e0..656acfb 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
index dee4354..d1f851f 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
@@ -2,7 +2,7 @@
 # Generated by "MinGW Makefiles" Generator, CMake Version 3.17
 
 # compile CXX with C:/TDM-GCC-64/bin/g++.exe
-CXX_FLAGS = -g   -std=gnu++14
+CXX_FLAGS = -g   -std=gnu++17
 
 CXX_DEFINES = 
 
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
new file mode 100644
index 0000000..8b64ffd
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
index 7fd194a..0a3d353 100644
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
index 768c9c7..795c51e 100644
Binary files a/dry/cmake-build-debug/dry.exe and b/dry/cmake-build-debug/dry.exe differ

commit ada39baffc007a678dc86423012942a6990f86e2
Author: nooryass <nooryassin059@gmail.com>
Date:   Sat Dec 28 23:50:51 2024 +0200

    first fix - adding default cto'r

diff --git a/dry/Pirate.h b/dry/Pirate.h
index 7769667..39a883a 100755
--- a/dry/Pirate.h
+++ b/dry/Pirate.h
@@ -12,6 +12,8 @@ private:
 public:
     Pirate(const string& name);
 
+    Pirate() = default;
+
     ~Pirate() = default;
 
     void setName(const string& name);

commit 3d05a61fb9c3223fd7d16e60b9ba9884924e19e6
Author: nooryass <nooryassin059@gmail.com>
Date:   Sat Dec 28 23:48:25 2024 +0200

    revert changes in main

diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/1 b/dry/cmake-build-debug/CMakeFiles/Progress/1
new file mode 100644
index 0000000..7b4d68d
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/Progress/1
@@ -0,0 +1 @@
+empty
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeFiles/Progress/count.txt b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
new file mode 100644
index 0000000..00750ed
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/Progress/count.txt
@@ -0,0 +1 @@
+3
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
index 79f3388..1842398 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
@@ -6,11 +6,15 @@
 
 #IncludeRegexTransform: 
 
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
-Pirate.h
 C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+iostream
+-
 
-C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
 iostream
 -
+Pirate.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+cstring
+-
 
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
index 51eeb9b..d191e23 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
@@ -5,4 +5,5 @@ CMakeFiles/dry.dir/Pirate.cpp.obj
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
 CMakeFiles/dry.dir/main.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
  C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
index 3b9c994..19c8fb9 100644
--- a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
@@ -4,5 +4,6 @@
 CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
 CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
 
+CMakeFiles/dry.dir/main.cpp.obj: ../Pirate.h
 CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
 
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
deleted file mode 100644
index 052a66b..0000000
Binary files a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj and /dev/null differ
diff --git a/dry/main.cpp b/dry/main.cpp
index bc8f460..ea71e37 100755
--- a/dry/main.cpp
+++ b/dry/main.cpp
@@ -1,6 +1,25 @@
 #include <iostream>
+#include "Pirate.h"
+#include <cstring>
+
+using std::cout, std::endl;
+
 
 int main() {
-    std::cout << "Hello, World!" << std::endl;
+
+    Pirate luffy("Luffy");
+    Pirate zoro("Zoro");
+
+    const int crewSize = 2;
+
+    Pirate strawHatCrew[2];
+    strawHatCrew[0] = luffy;
+    strawHatCrew[1] = zoro;
+
+    cout << "Straw Hat crew contains:" << endl;
+    for (int i = 0; i < crewSize; i++) {
+        cout << strawHatCrew[i] << endl;
+    }
+
     return 0;
-}
+}
\ No newline at end of file

commit e7b2c938044dcdb20c43620a9c9810694ad6c907
Author: nooryass <nooryassin059@gmail.com>
Date:   Sat Dec 28 23:46:11 2024 +0200

    init

diff --git a/.idea/HW2_2425A.iml b/.idea/HW2_2425A.iml
new file mode 100644
index 0000000..bc2cd87
--- /dev/null
+++ b/.idea/HW2_2425A.iml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="CPP_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
index 0000000..9c699dc
--- /dev/null
+++ b/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/HW2_2425A.iml" filepath="$PROJECT_DIR$/.idea/HW2_2425A.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
index 0000000..94a25f7
--- /dev/null
+++ b/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
new file mode 100644
index 0000000..681113a
--- /dev/null
+++ b/.idea/workspace.xml
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
+    <generated />
+  </component>
+  <component name="CMakeSettings">
+    <configurations>
+      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
+    </configurations>
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="ClangdSettings">
+    <option name="formatViaClangd" value="false" />
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+  </component>
+  <component name="ProjectId" id="2qrXyuysjftbJsYtr5fXKioj3ZV" />
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent">
+    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
+    <property name="WebServerToolWindowFactoryState" value="false" />
+    <property name="cf.first.check.clang-format" value="false" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+  </component>
+  <component name="RunManager">
+    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
+      <method v="2">
+        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="faa8664d-df6a-49db-9daa-65c966eea845" name="Default Changelist" comment="" />
+      <created>1735421926159</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1735421926159</updated>
+      <workItem from="1735421929242" duration="213000" />
+    </task>
+    <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
+  <component name="WindowStateProjectService">
+    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1735421978514">
+      <screen x="0" y="0" width="1536" height="824" />
+    </state>
+    <state x="223" y="67" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.0.1536.824@0.0.1536.824" timestamp="1735421978514" />
+    <state x="549" y="153" key="FileChooserDialogImpl" timestamp="1735422132361">
+      <screen x="0" y="0" width="1536" height="824" />
+    </state>
+    <state x="549" y="153" key="FileChooserDialogImpl/0.0.1536.824@0.0.1536.824" timestamp="1735422132361" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/dry/.idea/.gitignore b/dry/.idea/.gitignore
new file mode 100644
index 0000000..634d575
--- /dev/null
+++ b/dry/.idea/.gitignore
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Datasource local storage ignored files
+/../../../../../../../../../:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\.idea/dataSources/
+/dataSources.local.xml
+# Editor-based HTTP Client requests
+/httpRequests/
diff --git a/dry/.idea/dry.iml b/dry/.idea/dry.iml
new file mode 100644
index 0000000..f08604b
--- /dev/null
+++ b/dry/.idea/dry.iml
@@ -0,0 +1,2 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module classpath="CMake" type="CPP_MODULE" version="4" />
\ No newline at end of file
diff --git a/dry/.idea/misc.xml b/dry/.idea/misc.xml
new file mode 100644
index 0000000..79b3c94
--- /dev/null
+++ b/dry/.idea/misc.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakeWorkspace" PROJECT_DIR="$PROJECT_DIR$" />
+</project>
\ No newline at end of file
diff --git a/dry/.idea/modules.xml b/dry/.idea/modules.xml
new file mode 100644
index 0000000..4700199
--- /dev/null
+++ b/dry/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/dry.iml" filepath="$PROJECT_DIR$/.idea/dry.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/dry/.idea/vcs.xml b/dry/.idea/vcs.xml
new file mode 100644
index 0000000..6c0b863
--- /dev/null
+++ b/dry/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/dry/CMakeLists.txt b/dry/CMakeLists.txt
new file mode 100644
index 0000000..1d63d19
--- /dev/null
+++ b/dry/CMakeLists.txt
@@ -0,0 +1,6 @@
+cmake_minimum_required(VERSION 3.17)
+project(dry)
+
+set(CMAKE_CXX_STANDARD 14)
+
+add_executable(dry main.cpp Pirate.cpp Pirate.h)
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeCache.txt b/dry/cmake-build-debug/CMakeCache.txt
new file mode 100644
index 0000000..d275abe
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeCache.txt
@@ -0,0 +1,420 @@
+# This is the CMakeCache file.
+# For build in directory: c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+# It was generated by CMake: C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
+# You can edit this file to change values found and used by cmake.
+# If you do not want to change any of the values, simply exit the editor.
+# If you do want to change a value, simply edit, save, and exit the editor.
+# The syntax for the file is as follows:
+# KEY:TYPE=VALUE
+# KEY is the name of a variable in the cache.
+# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
+# VALUE is the current value for the KEY.
+
+########################
+# EXTERNAL cache entries
+########################
+
+//Path to a program.
+CMAKE_ADDR2LINE:FILEPATH=C:/TDM-GCC-64/bin/addr2line.exe
+
+//Path to a program.
+CMAKE_AR:FILEPATH=C:/TDM-GCC-64/bin/ar.exe
+
+//Choose the type of build, options are: None Debug Release RelWithDebInfo
+// MinSizeRel ...
+CMAKE_BUILD_TYPE:STRING=Debug
+
+//Id string of the compiler for the CodeBlocks IDE. Automatically
+// detected when left empty
+CMAKE_CODEBLOCKS_COMPILER_ID:STRING=
+
+//The CodeBlocks executable
+CMAKE_CODEBLOCKS_EXECUTABLE:FILEPATH=CMAKE_CODEBLOCKS_EXECUTABLE-NOTFOUND
+
+//Additional command line arguments when CodeBlocks invokes make.
+// Enter e.g. -j<some_number> to get parallel builds
+CMAKE_CODEBLOCKS_MAKE_ARGUMENTS:STRING=
+
+//Enable/Disable color output during build.
+CMAKE_COLOR_MAKEFILE:BOOL=ON
+
+//CXX compiler
+CMAKE_CXX_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/g++.exe
+
+//A wrapper around 'ar' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
+
+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_CXX_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
+
+//Flags used by the CXX compiler during all build types.
+CMAKE_CXX_FLAGS:STRING=
+
+//Flags used by the CXX compiler during DEBUG builds.
+CMAKE_CXX_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the CXX compiler during MINSIZEREL builds.
+CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the CXX compiler during RELEASE builds.
+CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the CXX compiler during RELWITHDEBINFO builds.
+CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Libraries linked by default with all C++ applications.
+CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
+
+//C compiler
+CMAKE_C_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/gcc.exe
+
+//A wrapper around 'ar' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_C_COMPILER_AR:FILEPATH=C:/TDM-GCC-64/bin/gcc-ar.exe
+
+//A wrapper around 'ranlib' adding the appropriate '--plugin' option
+// for the GCC compiler
+CMAKE_C_COMPILER_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/gcc-ranlib.exe
+
+//Flags used by the C compiler during all build types.
+CMAKE_C_FLAGS:STRING=
+
+//Flags used by the C compiler during DEBUG builds.
+CMAKE_C_FLAGS_DEBUG:STRING=-g
+
+//Flags used by the C compiler during MINSIZEREL builds.
+CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG
+
+//Flags used by the C compiler during RELEASE builds.
+CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG
+
+//Flags used by the C compiler during RELWITHDEBINFO builds.
+CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG
+
+//Libraries linked by default with all C applications.
+CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
+
+//Path to a program.
+CMAKE_DLLTOOL:FILEPATH=C:/TDM-GCC-64/bin/dlltool.exe
+
+//Flags used by the linker during all build types.
+CMAKE_EXE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during DEBUG builds.
+CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during MINSIZEREL builds.
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during RELEASE builds.
+CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during RELWITHDEBINFO builds.
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Convert GNU import libraries to MS format (requires Visual Studio)
+CMAKE_GNUtoMS:BOOL=OFF
+
+//Install path prefix, prepended onto install directories.
+CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/dry
+
+//Path to a program.
+CMAKE_LINKER:FILEPATH=C:/TDM-GCC-64/bin/ld.exe
+
+//Path to a program.
+CMAKE_MAKE_PROGRAM:FILEPATH=C:/TDM-GCC-64/bin/mingw32-make.exe
+
+//Flags used by the linker during the creation of modules during
+// all build types.
+CMAKE_MODULE_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of modules during
+// DEBUG builds.
+CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of modules during
+// MINSIZEREL builds.
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELEASE builds.
+CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of modules during
+// RELWITHDEBINFO builds.
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_NM:FILEPATH=C:/TDM-GCC-64/bin/nm.exe
+
+//Path to a program.
+CMAKE_OBJCOPY:FILEPATH=C:/TDM-GCC-64/bin/objcopy.exe
+
+//Path to a program.
+CMAKE_OBJDUMP:FILEPATH=C:/TDM-GCC-64/bin/objdump.exe
+
+//Value Computed by CMake
+CMAKE_PROJECT_DESCRIPTION:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_HOMEPAGE_URL:STATIC=
+
+//Value Computed by CMake
+CMAKE_PROJECT_NAME:STATIC=dry
+
+//Path to a program.
+CMAKE_RANLIB:FILEPATH=C:/TDM-GCC-64/bin/ranlib.exe
+
+//RC compiler
+CMAKE_RC_COMPILER:FILEPATH=C:/TDM-GCC-64/bin/windres.exe
+
+//Flags for Windows Resource Compiler during all build types.
+CMAKE_RC_FLAGS:STRING=
+
+//Flags for Windows Resource Compiler during DEBUG builds.
+CMAKE_RC_FLAGS_DEBUG:STRING=
+
+//Flags for Windows Resource Compiler during MINSIZEREL builds.
+CMAKE_RC_FLAGS_MINSIZEREL:STRING=
+
+//Flags for Windows Resource Compiler during RELEASE builds.
+CMAKE_RC_FLAGS_RELEASE:STRING=
+
+//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
+CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_READELF:FILEPATH=C:/TDM-GCC-64/bin/readelf.exe
+
+//Flags used by the linker during the creation of shared libraries
+// during all build types.
+CMAKE_SHARED_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during DEBUG builds.
+CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during MINSIZEREL builds.
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELEASE builds.
+CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of shared libraries
+// during RELWITHDEBINFO builds.
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//If set, runtime paths are not added when installing shared libraries,
+// but are added when building.
+CMAKE_SKIP_INSTALL_RPATH:BOOL=NO
+
+//If set, runtime paths are not added when using shared libraries.
+CMAKE_SKIP_RPATH:BOOL=NO
+
+//Flags used by the linker during the creation of static libraries
+// during all build types.
+CMAKE_STATIC_LINKER_FLAGS:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during DEBUG builds.
+CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during MINSIZEREL builds.
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELEASE builds.
+CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=
+
+//Flags used by the linker during the creation of static libraries
+// during RELWITHDEBINFO builds.
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=
+
+//Path to a program.
+CMAKE_STRIP:FILEPATH=C:/TDM-GCC-64/bin/strip.exe
+
+//If this value is on, makefiles will be generated without the
+// .SILENT directive, and all commands will be echoed to the console
+// during the make.  This is useful for debugging only. With Visual
+// Studio IDE projects all commands are done without /nologo.
+CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE
+
+//Value Computed by CMake
+dry_BINARY_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+
+//Value Computed by CMake
+dry_SOURCE_DIR:STATIC=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+
+
+########################
+# INTERNAL cache entries
+########################
+
+//ADVANCED property for variable: CMAKE_ADDR2LINE
+CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_AR
+CMAKE_AR-ADVANCED:INTERNAL=1
+//This is the directory where this CMakeCache.txt was created
+CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
+//Major version of cmake used to create the current loaded cache
+CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
+//Minor version of cmake used to create the current loaded cache
+CMAKE_CACHE_MINOR_VERSION:INTERNAL=17
+//Patch version of cmake used to create the current loaded cache
+CMAKE_CACHE_PATCH_VERSION:INTERNAL=3
+//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
+CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
+//Path to CMake executable.
+CMAKE_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cmake.exe
+//Path to cpack program executable.
+CMAKE_CPACK_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/cpack.exe
+//Path to ctest program executable.
+CMAKE_CTEST_COMMAND:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/bin/ctest.exe
+//ADVANCED property for variable: CMAKE_CXX_COMPILER
+CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
+CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
+CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS
+CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
+CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
+CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
+CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
+CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
+CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER
+CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER_AR
+CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
+CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS
+CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
+CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
+CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
+CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
+CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
+CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_DLLTOOL
+CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
+//Executable file format
+CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
+CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
+CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
+CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
+CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//Name of external makefile project generator.
+CMAKE_EXTRA_GENERATOR:INTERNAL=CodeBlocks
+//CXX compiler system defined macros
+CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1;__STDC__;1;__cplusplus;201402L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__GNUG__;9;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_WEAK__;1;__DEPRECATED;1;__GXX_RTTI;1;__cpp_rtti;199711;__GXX_EXPERIMENTAL_CXX0X__;1;__cpp_binary_literals;201304;__cpp_hex_float;201603;__cpp_runtime_arrays;198712;__cpp_unicode_characters;200704;__cpp_raw_strings;200710;__cpp_unicode_literals;200710;__cpp_user_defined_literals;200809;__cpp_lambdas;200907;__cpp_range_based_for;200907;__cpp_static_assert;200410;__cpp_decltype;200707;__cpp_attributes;200809;__cpp_rvalue_reference;200610;__cpp_rvalue_references;200610;__cpp_variadic_templates;200704;__cpp_initializer_lists;200806;__cpp_delegating_constructors;200604;__cpp_nsdmi;200809;__cpp_inheriting_constructors;201511;__cpp_ref_qualifiers;200710;__cpp_alias_templates;200704;__cpp_return_type_deduction;201304;__cpp_init_captures;201304;__cpp_generic_lambdas;201304;__cpp_constexpr;201304;__cpp_decltype_auto;201304;__cpp_aggregate_nsdmi;201304;__cpp_variable_templates;201304;__cpp_digit_separators;201309;__cpp_sized_deallocation;201309;__cpp_threadsafe_static_init;200806;__EXCEPTIONS;1;__cpp_exceptions;199711;__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__GLIBCXX_TYPE_INT_N_0;__int128;__GLIBCXX_BITSIZE_INT_N_0;128;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;double(1.79769313486231570814527423731704357e+308L);__DBL_MIN__;double(2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;double(2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;double(4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__WCHAR_UNSIGNED__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
+//CXX compiler system include directories
+CMAKE_EXTRA_GENERATOR_CXX_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
+//C compiler system defined macros
+CMAKE_EXTRA_GENERATOR_C_SYSTEM_DEFINED_MACROS:INTERNAL=__STDC__;1;__STDC_VERSION__;201710L;__STDC_UTF_16__;1;__STDC_UTF_32__;1;__STDC_HOSTED__;1;__GNUC__;9;__GNUC_MINOR__;2;__GNUC_PATCHLEVEL__;0;__VERSION__;"9.2.0";__ATOMIC_RELAXED;0;__ATOMIC_SEQ_CST;5;__ATOMIC_ACQUIRE;2;__ATOMIC_RELEASE;3;__ATOMIC_ACQ_REL;4;__ATOMIC_CONSUME;1;__pic__;1;__PIC__;1;__FINITE_MATH_ONLY__;0;__SIZEOF_INT__;4;__SIZEOF_LONG__;4;__SIZEOF_LONG_LONG__;8;__SIZEOF_SHORT__;2;__SIZEOF_FLOAT__;4;__SIZEOF_DOUBLE__;8;__SIZEOF_LONG_DOUBLE__;16;__SIZEOF_SIZE_T__;8;__CHAR_BIT__;8;__BIGGEST_ALIGNMENT__;16;__ORDER_LITTLE_ENDIAN__;1234;__ORDER_BIG_ENDIAN__;4321;__ORDER_PDP_ENDIAN__;3412;__BYTE_ORDER__;__ORDER_LITTLE_ENDIAN__;__FLOAT_WORD_ORDER__;__ORDER_LITTLE_ENDIAN__;__SIZEOF_POINTER__;8;__SIZE_TYPE__;long long unsigned int;__PTRDIFF_TYPE__;long long int;__WCHAR_TYPE__;short unsigned int;__WINT_TYPE__;short unsigned int;__INTMAX_TYPE__;long long int;__UINTMAX_TYPE__;long long unsigned int;__CHAR16_TYPE__;short unsigned int;__CHAR32_TYPE__;unsigned int;__SIG_ATOMIC_TYPE__;int;__INT8_TYPE__;signed char;__INT16_TYPE__;short int;__INT32_TYPE__;int;__INT64_TYPE__;long long int;__UINT8_TYPE__;unsigned char;__UINT16_TYPE__;short unsigned int;__UINT32_TYPE__;unsigned int;__UINT64_TYPE__;long long unsigned int;__INT_LEAST8_TYPE__;signed char;__INT_LEAST16_TYPE__;short int;__INT_LEAST32_TYPE__;int;__INT_LEAST64_TYPE__;long long int;__UINT_LEAST8_TYPE__;unsigned char;__UINT_LEAST16_TYPE__;short unsigned int;__UINT_LEAST32_TYPE__;unsigned int;__UINT_LEAST64_TYPE__;long long unsigned int;__INT_FAST8_TYPE__;signed char;__INT_FAST16_TYPE__;short int;__INT_FAST32_TYPE__;int;__INT_FAST64_TYPE__;long long int;__UINT_FAST8_TYPE__;unsigned char;__UINT_FAST16_TYPE__;short unsigned int;__UINT_FAST32_TYPE__;unsigned int;__UINT_FAST64_TYPE__;long long unsigned int;__INTPTR_TYPE__;long long int;__UINTPTR_TYPE__;long long unsigned int;__has_include(STR);__has_include__(STR);__has_include_next(STR);__has_include_next__(STR);__GXX_ABI_VERSION;1013;__SCHAR_MAX__;0x7f;__SHRT_MAX__;0x7fff;__INT_MAX__;0x7fffffff;__LONG_MAX__;0x7fffffffL;__LONG_LONG_MAX__;0x7fffffffffffffffLL;__WCHAR_MAX__;0xffff;__WCHAR_MIN__;0;__WINT_MAX__;0xffff;__WINT_MIN__;0;__PTRDIFF_MAX__;0x7fffffffffffffffLL;__SIZE_MAX__;0xffffffffffffffffULL;__SCHAR_WIDTH__;8;__SHRT_WIDTH__;16;__INT_WIDTH__;32;__LONG_WIDTH__;32;__LONG_LONG_WIDTH__;64;__WCHAR_WIDTH__;16;__WINT_WIDTH__;16;__PTRDIFF_WIDTH__;64;__SIZE_WIDTH__;64;__INTMAX_MAX__;0x7fffffffffffffffLL;__INTMAX_C(c);c ## LL;__UINTMAX_MAX__;0xffffffffffffffffULL;__UINTMAX_C(c);c ## ULL;__INTMAX_WIDTH__;64;__SIG_ATOMIC_MAX__;0x7fffffff;__SIG_ATOMIC_MIN__;(-__SIG_ATOMIC_MAX__ - 1);__SIG_ATOMIC_WIDTH__;32;__INT8_MAX__;0x7f;__INT16_MAX__;0x7fff;__INT32_MAX__;0x7fffffff;__INT64_MAX__;0x7fffffffffffffffLL;__UINT8_MAX__;0xff;__UINT16_MAX__;0xffff;__UINT32_MAX__;0xffffffffU;__UINT64_MAX__;0xffffffffffffffffULL;__INT_LEAST8_MAX__;0x7f;__INT8_C(c);c;__INT_LEAST8_WIDTH__;8;__INT_LEAST16_MAX__;0x7fff;__INT16_C(c);c;__INT_LEAST16_WIDTH__;16;__INT_LEAST32_MAX__;0x7fffffff;__INT32_C(c);c;__INT_LEAST32_WIDTH__;32;__INT_LEAST64_MAX__;0x7fffffffffffffffLL;__INT64_C(c);c ## LL;__INT_LEAST64_WIDTH__;64;__UINT_LEAST8_MAX__;0xff;__UINT8_C(c);c;__UINT_LEAST16_MAX__;0xffff;__UINT16_C(c);c;__UINT_LEAST32_MAX__;0xffffffffU;__UINT32_C(c);c ## U;__UINT_LEAST64_MAX__;0xffffffffffffffffULL;__UINT64_C(c);c ## ULL;__INT_FAST8_MAX__;0x7f;__INT_FAST8_WIDTH__;8;__INT_FAST16_MAX__;0x7fff;__INT_FAST16_WIDTH__;16;__INT_FAST32_MAX__;0x7fffffff;__INT_FAST32_WIDTH__;32;__INT_FAST64_MAX__;0x7fffffffffffffffLL;__INT_FAST64_WIDTH__;64;__UINT_FAST8_MAX__;0xff;__UINT_FAST16_MAX__;0xffff;__UINT_FAST32_MAX__;0xffffffffU;__UINT_FAST64_MAX__;0xffffffffffffffffULL;__INTPTR_MAX__;0x7fffffffffffffffLL;__INTPTR_WIDTH__;64;__UINTPTR_MAX__;0xffffffffffffffffULL;__GCC_IEC_559;2;__GCC_IEC_559_COMPLEX;2;__FLT_EVAL_METHOD__;0;__FLT_EVAL_METHOD_TS_18661_3__;0;__DEC_EVAL_METHOD__;2;__FLT_RADIX__;2;__FLT_MANT_DIG__;24;__FLT_DIG__;6;__FLT_MIN_EXP__;(-125);__FLT_MIN_10_EXP__;(-37);__FLT_MAX_EXP__;128;__FLT_MAX_10_EXP__;38;__FLT_DECIMAL_DIG__;9;__FLT_MAX__;3.40282346638528859811704183484516925e+38F;__FLT_MIN__;1.17549435082228750796873653722224568e-38F;__FLT_EPSILON__;1.19209289550781250000000000000000000e-7F;__FLT_DENORM_MIN__;1.40129846432481707092372958328991613e-45F;__FLT_HAS_DENORM__;1;__FLT_HAS_INFINITY__;1;__FLT_HAS_QUIET_NAN__;1;__DBL_MANT_DIG__;53;__DBL_DIG__;15;__DBL_MIN_EXP__;(-1021);__DBL_MIN_10_EXP__;(-307);__DBL_MAX_EXP__;1024;__DBL_MAX_10_EXP__;308;__DBL_DECIMAL_DIG__;17;__DBL_MAX__;((double)1.79769313486231570814527423731704357e+308L);__DBL_MIN__;((double)2.22507385850720138309023271733240406e-308L);__DBL_EPSILON__;((double)2.22044604925031308084726333618164062e-16L);__DBL_DENORM_MIN__;((double)4.94065645841246544176568792868221372e-324L);__DBL_HAS_DENORM__;1;__DBL_HAS_INFINITY__;1;__DBL_HAS_QUIET_NAN__;1;__LDBL_MANT_DIG__;64;__LDBL_DIG__;18;__LDBL_MIN_EXP__;(-16381);__LDBL_MIN_10_EXP__;(-4931);__LDBL_MAX_EXP__;16384;__LDBL_MAX_10_EXP__;4932;__DECIMAL_DIG__;21;__LDBL_DECIMAL_DIG__;21;__LDBL_MAX__;1.18973149535723176502126385303097021e+4932L;__LDBL_MIN__;3.36210314311209350626267781732175260e-4932L;__LDBL_EPSILON__;1.08420217248550443400745280086994171e-19L;__LDBL_DENORM_MIN__;3.64519953188247460252840593361941982e-4951L;__LDBL_HAS_DENORM__;1;__LDBL_HAS_INFINITY__;1;__LDBL_HAS_QUIET_NAN__;1;__FLT32_MANT_DIG__;24;__FLT32_DIG__;6;__FLT32_MIN_EXP__;(-125);__FLT32_MIN_10_EXP__;(-37);__FLT32_MAX_EXP__;128;__FLT32_MAX_10_EXP__;38;__FLT32_DECIMAL_DIG__;9;__FLT32_MAX__;3.40282346638528859811704183484516925e+38F32;__FLT32_MIN__;1.17549435082228750796873653722224568e-38F32;__FLT32_EPSILON__;1.19209289550781250000000000000000000e-7F32;__FLT32_DENORM_MIN__;1.40129846432481707092372958328991613e-45F32;__FLT32_HAS_DENORM__;1;__FLT32_HAS_INFINITY__;1;__FLT32_HAS_QUIET_NAN__;1;__FLT64_MANT_DIG__;53;__FLT64_DIG__;15;__FLT64_MIN_EXP__;(-1021);__FLT64_MIN_10_EXP__;(-307);__FLT64_MAX_EXP__;1024;__FLT64_MAX_10_EXP__;308;__FLT64_DECIMAL_DIG__;17;__FLT64_MAX__;1.79769313486231570814527423731704357e+308F64;__FLT64_MIN__;2.22507385850720138309023271733240406e-308F64;__FLT64_EPSILON__;2.22044604925031308084726333618164062e-16F64;__FLT64_DENORM_MIN__;4.94065645841246544176568792868221372e-324F64;__FLT64_HAS_DENORM__;1;__FLT64_HAS_INFINITY__;1;__FLT64_HAS_QUIET_NAN__;1;__FLT128_MANT_DIG__;113;__FLT128_DIG__;33;__FLT128_MIN_EXP__;(-16381);__FLT128_MIN_10_EXP__;(-4931);__FLT128_MAX_EXP__;16384;__FLT128_MAX_10_EXP__;4932;__FLT128_DECIMAL_DIG__;36;__FLT128_MAX__;1.18973149535723176508575932662800702e+4932F128;__FLT128_MIN__;3.36210314311209350626267781732175260e-4932F128;__FLT128_EPSILON__;1.92592994438723585305597794258492732e-34F128;__FLT128_DENORM_MIN__;6.47517511943802511092443895822764655e-4966F128;__FLT128_HAS_DENORM__;1;__FLT128_HAS_INFINITY__;1;__FLT128_HAS_QUIET_NAN__;1;__FLT32X_MANT_DIG__;53;__FLT32X_DIG__;15;__FLT32X_MIN_EXP__;(-1021);__FLT32X_MIN_10_EXP__;(-307);__FLT32X_MAX_EXP__;1024;__FLT32X_MAX_10_EXP__;308;__FLT32X_DECIMAL_DIG__;17;__FLT32X_MAX__;1.79769313486231570814527423731704357e+308F32x;__FLT32X_MIN__;2.22507385850720138309023271733240406e-308F32x;__FLT32X_EPSILON__;2.22044604925031308084726333618164062e-16F32x;__FLT32X_DENORM_MIN__;4.94065645841246544176568792868221372e-324F32x;__FLT32X_HAS_DENORM__;1;__FLT32X_HAS_INFINITY__;1;__FLT32X_HAS_QUIET_NAN__;1;__FLT64X_MANT_DIG__;64;__FLT64X_DIG__;18;__FLT64X_MIN_EXP__;(-16381);__FLT64X_MIN_10_EXP__;(-4931);__FLT64X_MAX_EXP__;16384;__FLT64X_MAX_10_EXP__;4932;__FLT64X_DECIMAL_DIG__;21;__FLT64X_MAX__;1.18973149535723176502126385303097021e+4932F64x;__FLT64X_MIN__;3.36210314311209350626267781732175260e-4932F64x;__FLT64X_EPSILON__;1.08420217248550443400745280086994171e-19F64x;__FLT64X_DENORM_MIN__;3.64519953188247460252840593361941982e-4951F64x;__FLT64X_HAS_DENORM__;1;__FLT64X_HAS_INFINITY__;1;__FLT64X_HAS_QUIET_NAN__;1;__DEC32_MANT_DIG__;7;__DEC32_MIN_EXP__;(-94);__DEC32_MAX_EXP__;97;__DEC32_MIN__;1E-95DF;__DEC32_MAX__;9.999999E96DF;__DEC32_EPSILON__;1E-6DF;__DEC32_SUBNORMAL_MIN__;0.000001E-95DF;__DEC64_MANT_DIG__;16;__DEC64_MIN_EXP__;(-382);__DEC64_MAX_EXP__;385;__DEC64_MIN__;1E-383DD;__DEC64_MAX__;9.999999999999999E384DD;__DEC64_EPSILON__;1E-15DD;__DEC64_SUBNORMAL_MIN__;0.000000000000001E-383DD;__DEC128_MANT_DIG__;34;__DEC128_MIN_EXP__;(-6142);__DEC128_MAX_EXP__;6145;__DEC128_MIN__;1E-6143DL;__DEC128_MAX__;9.999999999999999999999999999999999E6144DL;__DEC128_EPSILON__;1E-33DL;__DEC128_SUBNORMAL_MIN__;0.000000000000000000000000000000001E-6143DL;__REGISTER_PREFIX__; ;__USER_LABEL_PREFIX__; ;__GNUC_STDC_INLINE__;1;__NO_INLINE__;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4;1;__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8;1;__GCC_ATOMIC_BOOL_LOCK_FREE;2;__GCC_ATOMIC_CHAR_LOCK_FREE;2;__GCC_ATOMIC_CHAR16_T_LOCK_FREE;2;__GCC_ATOMIC_CHAR32_T_LOCK_FREE;2;__GCC_ATOMIC_WCHAR_T_LOCK_FREE;2;__GCC_ATOMIC_SHORT_LOCK_FREE;2;__GCC_ATOMIC_INT_LOCK_FREE;2;__GCC_ATOMIC_LONG_LOCK_FREE;2;__GCC_ATOMIC_LLONG_LOCK_FREE;2;__GCC_ATOMIC_TEST_AND_SET_TRUEVAL;1;__GCC_ATOMIC_POINTER_LOCK_FREE;2;__HAVE_SPECULATION_SAFE_VALUE;1;__PRAGMA_REDEFINE_EXTNAME;1;__SIZEOF_INT128__;16;__SIZEOF_WCHAR_T__;2;__SIZEOF_WINT_T__;2;__SIZEOF_PTRDIFF_T__;8;__amd64;1;__amd64__;1;__x86_64;1;__x86_64__;1;__SIZEOF_FLOAT80__;16;__SIZEOF_FLOAT128__;16;__ATOMIC_HLE_ACQUIRE;65536;__ATOMIC_HLE_RELEASE;131072;__GCC_ASM_FLAG_OUTPUTS__;1;__k8;1;__k8__;1;__code_model_medium__;1;__MMX__;1;__SSE__;1;__SSE2__;1;__FXSR__;1;__SSE_MATH__;1;__SSE2_MATH__;1;__SEG_FS;1;__SEG_GS;1;__SEH__;1;__stdcall;__attribute__((__stdcall__));__fastcall;__attribute__((__fastcall__));__thiscall;__attribute__((__thiscall__));__cdecl;__attribute__((__cdecl__));_stdcall;__attribute__((__stdcall__));_fastcall;__attribute__((__fastcall__));_thiscall;__attribute__((__thiscall__));_cdecl;__attribute__((__cdecl__));__GXX_MERGED_TYPEINFO_NAMES;0;__GXX_TYPEINFO_EQUALITY_INLINE;0;__MSVCRT__;1;__MINGW32__;1;_WIN32;1;__WIN32;1;__WIN32__;1;WIN32;1;__WINNT;1;__WINNT__;1;WINNT;1;_INTEGRAL_MAX_BITS;64;__MINGW64__;1;__WIN64;1;__WIN64__;1;WIN64;1;_WIN64;1;__declspec(x);__attribute__((x));__DECIMAL_BID_FORMAT__;1;_REENTRANT;1
+//C compiler system include directories
+CMAKE_EXTRA_GENERATOR_C_SYSTEM_INCLUDE_DIRS:INTERNAL=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
+//Name of generator.
+CMAKE_GENERATOR:INTERNAL=MinGW Makefiles
+//Generator instance identifier.
+CMAKE_GENERATOR_INSTANCE:INTERNAL=
+//Name of generator platform.
+CMAKE_GENERATOR_PLATFORM:INTERNAL=
+//Name of generator toolset.
+CMAKE_GENERATOR_TOOLSET:INTERNAL=
+//Source directory with the top level CMakeLists.txt file for this
+// project
+CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+//ADVANCED property for variable: CMAKE_LINKER
+CMAKE_LINKER-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
+CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
+CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
+CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
+CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
+CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_NM
+CMAKE_NM-ADVANCED:INTERNAL=1
+//number of local generators
+CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJCOPY
+CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_OBJDUMP
+CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
+//Platform information initialized
+CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RANLIB
+CMAKE_RANLIB-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_COMPILER
+CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
+CMAKE_RC_COMPILER_WORKS:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS
+CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
+CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
+CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
+CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
+CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_READELF
+CMAKE_READELF-ADVANCED:INTERNAL=1
+//Path to CMake installation.
+CMAKE_ROOT:INTERNAL=C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
+CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
+CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
+CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
+CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
+CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_SKIP_RPATH
+CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
+CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
+CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
+CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
+CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
+CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_STRIP
+CMAKE_STRIP-ADVANCED:INTERNAL=1
+//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
+CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
+
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
new file mode 100644
index 0000000..3b86b58
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCCompiler.cmake
@@ -0,0 +1,76 @@
+set(CMAKE_C_COMPILER "C:/TDM-GCC-64/bin/gcc.exe")
+set(CMAKE_C_COMPILER_ARG1 "")
+set(CMAKE_C_COMPILER_ID "GNU")
+set(CMAKE_C_COMPILER_VERSION "9.2.0")
+set(CMAKE_C_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_C_COMPILER_WRAPPER "")
+set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "11")
+set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macros;c_std_11;c_static_assert")
+set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")
+set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")
+set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")
+
+set(CMAKE_C_PLATFORM_ID "MinGW")
+set(CMAKE_C_SIMULATE_ID "")
+set(CMAKE_C_COMPILER_FRONTEND_VARIANT "")
+set(CMAKE_C_SIMULATE_VERSION "")
+
+
+
+set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
+set(CMAKE_C_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
+set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
+set(CMAKE_C_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
+set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCC 1)
+set(CMAKE_C_COMPILER_LOADED 1)
+set(CMAKE_C_COMPILER_WORKS TRUE)
+set(CMAKE_C_ABI_COMPILED TRUE)
+set(CMAKE_COMPILER_IS_MINGW 1)
+set(CMAKE_COMPILER_IS_CYGWIN )
+if(CMAKE_COMPILER_IS_CYGWIN)
+  set(CYGWIN 1)
+  set(UNIX 1)
+endif()
+
+set(CMAKE_C_COMPILER_ENV_VAR "CC")
+
+if(CMAKE_COMPILER_IS_MINGW)
+  set(MINGW 1)
+endif()
+set(CMAKE_C_COMPILER_ID_RUN 1)
+set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)
+set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)
+set(CMAKE_C_LINKER_PREFERENCE 10)
+
+# Save compiler ABI information.
+set(CMAKE_C_SIZEOF_DATA_PTR "8")
+set(CMAKE_C_COMPILER_ABI "")
+set(CMAKE_C_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_C_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_C_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")
+endif()
+
+if(CMAKE_C_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_C_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
+set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
+set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
+set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
new file mode 100644
index 0000000..89fc1fb
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeCXXCompiler.cmake
@@ -0,0 +1,88 @@
+set(CMAKE_CXX_COMPILER "C:/TDM-GCC-64/bin/g++.exe")
+set(CMAKE_CXX_COMPILER_ARG1 "")
+set(CMAKE_CXX_COMPILER_ID "GNU")
+set(CMAKE_CXX_COMPILER_VERSION "9.2.0")
+set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")
+set(CMAKE_CXX_COMPILER_WRAPPER "")
+set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")
+set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates;cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates;cxx_std_17;cxx_std_20")
+set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")
+set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_attributes;cxx_auto_type;cxx_constexpr;cxx_decltype;cxx_decltype_incomplete_return_types;cxx_default_function_template_args;cxx_defaulted_functions;cxx_defaulted_move_initializers;cxx_delegating_constructors;cxx_deleted_functions;cxx_enum_forward_declarations;cxx_explicit_conversions;cxx_extended_friend_declarations;cxx_extern_templates;cxx_final;cxx_func_identifier;cxx_generalized_initializers;cxx_inheriting_constructors;cxx_inline_namespaces;cxx_lambdas;cxx_local_type_template_args;cxx_long_long_type;cxx_noexcept;cxx_nonstatic_member_init;cxx_nullptr;cxx_override;cxx_range_for;cxx_raw_string_literals;cxx_reference_qualified_functions;cxx_right_angle_brackets;cxx_rvalue_references;cxx_sizeof_member;cxx_static_assert;cxx_strong_enums;cxx_thread_local;cxx_trailing_return_types;cxx_unicode_literals;cxx_uniform_initialization;cxx_unrestricted_unions;cxx_user_literals;cxx_variadic_macros;cxx_variadic_templates")
+set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_deprecated;cxx_binary_literals;cxx_contextual_conversions;cxx_decltype_auto;cxx_digit_separators;cxx_generic_lambdas;cxx_lambda_init_captures;cxx_relaxed_constexpr;cxx_return_type_deduction;cxx_variable_templates")
+set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")
+set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")
+
+set(CMAKE_CXX_PLATFORM_ID "MinGW")
+set(CMAKE_CXX_SIMULATE_ID "")
+set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "")
+set(CMAKE_CXX_SIMULATE_VERSION "")
+
+
+
+set(CMAKE_AR "C:/TDM-GCC-64/bin/ar.exe")
+set(CMAKE_CXX_COMPILER_AR "C:/TDM-GCC-64/bin/gcc-ar.exe")
+set(CMAKE_RANLIB "C:/TDM-GCC-64/bin/ranlib.exe")
+set(CMAKE_CXX_COMPILER_RANLIB "C:/TDM-GCC-64/bin/gcc-ranlib.exe")
+set(CMAKE_LINKER "C:/TDM-GCC-64/bin/ld.exe")
+set(CMAKE_MT "")
+set(CMAKE_COMPILER_IS_GNUCXX 1)
+set(CMAKE_CXX_COMPILER_LOADED 1)
+set(CMAKE_CXX_COMPILER_WORKS TRUE)
+set(CMAKE_CXX_ABI_COMPILED TRUE)
+set(CMAKE_COMPILER_IS_MINGW 1)
+set(CMAKE_COMPILER_IS_CYGWIN )
+if(CMAKE_COMPILER_IS_CYGWIN)
+  set(CYGWIN 1)
+  set(UNIX 1)
+endif()
+
+set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")
+
+if(CMAKE_COMPILER_IS_MINGW)
+  set(MINGW 1)
+endif()
+set(CMAKE_CXX_COMPILER_ID_RUN 1)
+set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;CPP)
+set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)
+
+foreach (lang C OBJC OBJCXX)
+  if (CMAKE_${lang}_COMPILER_ID_RUN)
+    foreach(extension IN LISTS CMAKE_${lang}_SOURCE_FILE_EXTENSIONS)
+      list(REMOVE_ITEM CMAKE_CXX_SOURCE_FILE_EXTENSIONS ${extension})
+    endforeach()
+  endif()
+endforeach()
+
+set(CMAKE_CXX_LINKER_PREFERENCE 30)
+set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)
+
+# Save compiler ABI information.
+set(CMAKE_CXX_SIZEOF_DATA_PTR "8")
+set(CMAKE_CXX_COMPILER_ABI "")
+set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")
+
+if(CMAKE_CXX_SIZEOF_DATA_PTR)
+  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")
+endif()
+
+if(CMAKE_CXX_COMPILER_ABI)
+  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")
+endif()
+
+if(CMAKE_CXX_LIBRARY_ARCHITECTURE)
+  set(CMAKE_LIBRARY_ARCHITECTURE "")
+endif()
+
+set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")
+if(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX)
+  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")
+endif()
+
+
+
+
+
+set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include")
+set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex")
+set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib")
+set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin
new file mode 100644
index 0000000..7fab13b
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_C.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin
new file mode 100644
index 0000000..2ac5395
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeDetermineCompilerABI_CXX.bin differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
new file mode 100644
index 0000000..dde22c8
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeRCCompiler.cmake
@@ -0,0 +1,6 @@
+set(CMAKE_RC_COMPILER "C:/TDM-GCC-64/bin/windres.exe")
+set(CMAKE_RC_COMPILER_ARG1 "")
+set(CMAKE_RC_COMPILER_LOADED 1)
+set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)
+set(CMAKE_RC_OUTPUT_EXTENSION .obj)
+set(CMAKE_RC_COMPILER_ENV_VAR "RC")
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
new file mode 100644
index 0000000..909db20
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CMakeSystem.cmake
@@ -0,0 +1,15 @@
+set(CMAKE_HOST_SYSTEM "Windows-10.0.19045")
+set(CMAKE_HOST_SYSTEM_NAME "Windows")
+set(CMAKE_HOST_SYSTEM_VERSION "10.0.19045")
+set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")
+
+
+
+set(CMAKE_SYSTEM "Windows-10.0.19045")
+set(CMAKE_SYSTEM_NAME "Windows")
+set(CMAKE_SYSTEM_VERSION "10.0.19045")
+set(CMAKE_SYSTEM_PROCESSOR "AMD64")
+
+set(CMAKE_CROSSCOMPILING "FALSE")
+
+set(CMAKE_SYSTEM_LOADED 1)
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
new file mode 100644
index 0000000..d884b50
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CMakeCCompilerId.c
@@ -0,0 +1,671 @@
+#ifdef __cplusplus
+# error "A C++ compiler has been selected for C."
+#endif
+
+#if defined(__18CXX)
+# define ID_VOID_MAIN
+#endif
+#if defined(__CLASSIC_C__)
+/* cv-qualifiers did not exist in K&R C */
+# define const
+# define volatile
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+# if defined(__INTEL_COMPILER_UPDATE)
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+# else
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_C)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_C >= 0x5100
+   /* __SUNPRO_C = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_C>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_C>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_C    & 0xF)
+# endif
+
+#elif defined(__HP_cc)
+# define COMPILER_ID "HP"
+  /* __HP_cc = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_cc/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_cc/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_cc     % 100)
+
+#elif defined(__DECC)
+# define COMPILER_ID "Compaq"
+  /* __DECC_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECC_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECC_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECC_VER         % 10000)
+
+#elif defined(__IBMC__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__IBMC__) && !defined(__COMPILER_VER__) && __IBMC__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMC__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMC__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMC__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMC__    % 10)
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
+# define COMPILER_ID "Fujitsu"
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__TINYC__)
+# define COMPILER_ID "TinyCC"
+
+#elif defined(__BCC__)
+# define COMPILER_ID "Bruce"
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__GNUC__)
+# define COMPILER_ID "GNU"
+# define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+# define COMPILER_ID "ADSP"
+#if defined(__VISUALDSPVERSION__)
+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+#elif defined(__SDCC_VERSION_MAJOR) || defined(SDCC)
+# define COMPILER_ID "SDCC"
+# if defined(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MAJOR DEC(__SDCC_VERSION_MAJOR)
+#  define COMPILER_VERSION_MINOR DEC(__SDCC_VERSION_MINOR)
+#  define COMPILER_VERSION_PATCH DEC(__SDCC_VERSION_PATCH)
+# else
+  /* SDCC = VRP */
+#  define COMPILER_VERSION_MAJOR DEC(SDCC/100)
+#  define COMPILER_VERSION_MINOR DEC(SDCC/10 % 10)
+#  define COMPILER_VERSION_PATCH DEC(SDCC    % 10)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXE) || defined(__CRAYXC)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number components. */
+#ifdef COMPILER_VERSION_MAJOR
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+
+#if !defined(__STDC__)
+# if (defined(_MSC_VER) && !defined(__clang__)) \
+  || (defined(__ibmxl__) || defined(__IBMC__))
+#  define C_DIALECT "90"
+# else
+#  define C_DIALECT
+# endif
+#elif __STDC_VERSION__ >= 201000L
+# define C_DIALECT "11"
+#elif __STDC_VERSION__ >= 199901L
+# define C_DIALECT "99"
+#else
+# define C_DIALECT "90"
+#endif
+const char* info_language_dialect_default =
+  "INFO" ":" "dialect_default[" C_DIALECT "]";
+
+/*--------------------------------------------------------------------------*/
+
+#ifdef ID_VOID_MAIN
+void main() {}
+#else
+# if defined(__CLASSIC_C__)
+int main(argc, argv) int argc; char *argv[];
+# else
+int main(int argc, char* argv[])
+# endif
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+  require += info_arch[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXE) || defined(__CRAYXC)
+  require += info_cray[argc];
+#endif
+  require += info_language_dialect_default[argc];
+  (void)argv;
+  return require;
+}
+#endif
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe
new file mode 100644
index 0000000..df42f13
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
new file mode 100644
index 0000000..69cfdba
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
@@ -0,0 +1,660 @@
+/* This source file must have a .cpp extension so that all C++ compilers
+   recognize the extension without flags.  Borland does not know .cxx for
+   example.  */
+#ifndef __cplusplus
+# error "A C compiler has been selected for C++."
+#endif
+
+
+/* Version number components: V=Version, R=Revision, P=Patch
+   Version date components:   YYYY=Year, MM=Month,   DD=Day  */
+
+#if defined(__COMO__)
+# define COMPILER_ID "Comeau"
+  /* __COMO_VERSION__ = VRR */
+# define COMPILER_VERSION_MAJOR DEC(__COMO_VERSION__ / 100)
+# define COMPILER_VERSION_MINOR DEC(__COMO_VERSION__ % 100)
+
+#elif defined(__INTEL_COMPILER) || defined(__ICC)
+# define COMPILER_ID "Intel"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_ID "GNU"
+# endif
+  /* __INTEL_COMPILER = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__INTEL_COMPILER/100)
+# define COMPILER_VERSION_MINOR DEC(__INTEL_COMPILER/10 % 10)
+# if defined(__INTEL_COMPILER_UPDATE)
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER_UPDATE)
+# else
+#  define COMPILER_VERSION_PATCH DEC(__INTEL_COMPILER   % 10)
+# endif
+# if defined(__INTEL_COMPILER_BUILD_DATE)
+  /* __INTEL_COMPILER_BUILD_DATE = YYYYMMDD */
+#  define COMPILER_VERSION_TWEAK DEC(__INTEL_COMPILER_BUILD_DATE)
+# endif
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# if defined(__GNUC__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUC__)
+# elif defined(__GNUG__)
+#  define SIMULATE_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define SIMULATE_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define SIMULATE_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(__PATHCC__)
+# define COMPILER_ID "PathScale"
+# define COMPILER_VERSION_MAJOR DEC(__PATHCC__)
+# define COMPILER_VERSION_MINOR DEC(__PATHCC_MINOR__)
+# if defined(__PATHCC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PATHCC_PATCHLEVEL__)
+# endif
+
+#elif defined(__BORLANDC__) && defined(__CODEGEARC_VERSION__)
+# define COMPILER_ID "Embarcadero"
+# define COMPILER_VERSION_MAJOR HEX(__CODEGEARC_VERSION__>>24 & 0x00FF)
+# define COMPILER_VERSION_MINOR HEX(__CODEGEARC_VERSION__>>16 & 0x00FF)
+# define COMPILER_VERSION_PATCH DEC(__CODEGEARC_VERSION__     & 0xFFFF)
+
+#elif defined(__BORLANDC__)
+# define COMPILER_ID "Borland"
+  /* __BORLANDC__ = 0xVRR */
+# define COMPILER_VERSION_MAJOR HEX(__BORLANDC__>>8)
+# define COMPILER_VERSION_MINOR HEX(__BORLANDC__ & 0xFF)
+
+#elif defined(__WATCOMC__) && __WATCOMC__ < 1200
+# define COMPILER_ID "Watcom"
+   /* __WATCOMC__ = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(__WATCOMC__ / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__WATCOMC__)
+# define COMPILER_ID "OpenWatcom"
+   /* __WATCOMC__ = VVRP + 1100 */
+# define COMPILER_VERSION_MAJOR DEC((__WATCOMC__ - 1100) / 100)
+# define COMPILER_VERSION_MINOR DEC((__WATCOMC__ / 10) % 10)
+# if (__WATCOMC__ % 10) > 0
+#  define COMPILER_VERSION_PATCH DEC(__WATCOMC__ % 10)
+# endif
+
+#elif defined(__SUNPRO_CC)
+# define COMPILER_ID "SunPro"
+# if __SUNPRO_CC >= 0x5100
+   /* __SUNPRO_CC = 0xVRRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>12)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xFF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# else
+   /* __SUNPRO_CC = 0xVRP */
+#  define COMPILER_VERSION_MAJOR HEX(__SUNPRO_CC>>8)
+#  define COMPILER_VERSION_MINOR HEX(__SUNPRO_CC>>4 & 0xF)
+#  define COMPILER_VERSION_PATCH HEX(__SUNPRO_CC    & 0xF)
+# endif
+
+#elif defined(__HP_aCC)
+# define COMPILER_ID "HP"
+  /* __HP_aCC = VVRRPP */
+# define COMPILER_VERSION_MAJOR DEC(__HP_aCC/10000)
+# define COMPILER_VERSION_MINOR DEC(__HP_aCC/100 % 100)
+# define COMPILER_VERSION_PATCH DEC(__HP_aCC     % 100)
+
+#elif defined(__DECCXX)
+# define COMPILER_ID "Compaq"
+  /* __DECCXX_VER = VVRRTPPPP */
+# define COMPILER_VERSION_MAJOR DEC(__DECCXX_VER/10000000)
+# define COMPILER_VERSION_MINOR DEC(__DECCXX_VER/100000  % 100)
+# define COMPILER_VERSION_PATCH DEC(__DECCXX_VER         % 10000)
+
+#elif defined(__IBMCPP__) && defined(__COMPILER_VER__)
+# define COMPILER_ID "zOS"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__ibmxl__) && defined(__clang__)
+# define COMPILER_ID "XLClang"
+# define COMPILER_VERSION_MAJOR DEC(__ibmxl_version__)
+# define COMPILER_VERSION_MINOR DEC(__ibmxl_release__)
+# define COMPILER_VERSION_PATCH DEC(__ibmxl_modification__)
+# define COMPILER_VERSION_TWEAK DEC(__ibmxl_ptf_fix_level__)
+
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ >= 800
+# define COMPILER_ID "XL"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__IBMCPP__) && !defined(__COMPILER_VER__) && __IBMCPP__ < 800
+# define COMPILER_ID "VisualAge"
+  /* __IBMCPP__ = VRP */
+# define COMPILER_VERSION_MAJOR DEC(__IBMCPP__/100)
+# define COMPILER_VERSION_MINOR DEC(__IBMCPP__/10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__IBMCPP__    % 10)
+
+#elif defined(__PGI)
+# define COMPILER_ID "PGI"
+# define COMPILER_VERSION_MAJOR DEC(__PGIC__)
+# define COMPILER_VERSION_MINOR DEC(__PGIC_MINOR__)
+# if defined(__PGIC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__PGIC_PATCHLEVEL__)
+# endif
+
+#elif defined(_CRAYC)
+# define COMPILER_ID "Cray"
+# define COMPILER_VERSION_MAJOR DEC(_RELEASE_MAJOR)
+# define COMPILER_VERSION_MINOR DEC(_RELEASE_MINOR)
+
+#elif defined(__TI_COMPILER_VERSION__)
+# define COMPILER_ID "TI"
+  /* __TI_COMPILER_VERSION__ = VVVRRRPPP */
+# define COMPILER_VERSION_MAJOR DEC(__TI_COMPILER_VERSION__/1000000)
+# define COMPILER_VERSION_MINOR DEC(__TI_COMPILER_VERSION__/1000   % 1000)
+# define COMPILER_VERSION_PATCH DEC(__TI_COMPILER_VERSION__        % 1000)
+
+#elif defined(__FUJITSU) || defined(__FCC_VERSION) || defined(__fcc_version)
+# define COMPILER_ID "Fujitsu"
+
+#elif defined(__ghs__)
+# define COMPILER_ID "GHS"
+/* __GHS_VERSION_NUMBER = VVVVRP */
+# ifdef __GHS_VERSION_NUMBER
+# define COMPILER_VERSION_MAJOR DEC(__GHS_VERSION_NUMBER / 100)
+# define COMPILER_VERSION_MINOR DEC(__GHS_VERSION_NUMBER / 10 % 10)
+# define COMPILER_VERSION_PATCH DEC(__GHS_VERSION_NUMBER      % 10)
+# endif
+
+#elif defined(__SCO_VERSION__)
+# define COMPILER_ID "SCO"
+
+#elif defined(__ARMCC_VERSION) && !defined(__clang__)
+# define COMPILER_ID "ARMCC"
+#if __ARMCC_VERSION >= 1000000
+  /* __ARMCC_VERSION = VRRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION     % 10000)
+#else
+  /* __ARMCC_VERSION = VRPPPP */
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCC_VERSION/100000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCC_VERSION/10000 % 10)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCC_VERSION    % 10000)
+#endif
+
+
+#elif defined(__clang__) && defined(__apple_build_version__)
+# define COMPILER_ID "AppleClang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+# define COMPILER_VERSION_TWEAK DEC(__apple_build_version__)
+
+#elif defined(__clang__) && defined(__ARMCOMPILER_VERSION)
+# define COMPILER_ID "ARMClang"
+  # define COMPILER_VERSION_MAJOR DEC(__ARMCOMPILER_VERSION/1000000)
+  # define COMPILER_VERSION_MINOR DEC(__ARMCOMPILER_VERSION/10000 % 100)
+  # define COMPILER_VERSION_PATCH DEC(__ARMCOMPILER_VERSION     % 10000)
+# define COMPILER_VERSION_INTERNAL DEC(__ARMCOMPILER_VERSION)
+
+#elif defined(__clang__)
+# define COMPILER_ID "Clang"
+# if defined(_MSC_VER)
+#  define SIMULATE_ID "MSVC"
+# endif
+# define COMPILER_VERSION_MAJOR DEC(__clang_major__)
+# define COMPILER_VERSION_MINOR DEC(__clang_minor__)
+# define COMPILER_VERSION_PATCH DEC(__clang_patchlevel__)
+# if defined(_MSC_VER)
+   /* _MSC_VER = VVRR */
+#  define SIMULATE_VERSION_MAJOR DEC(_MSC_VER / 100)
+#  define SIMULATE_VERSION_MINOR DEC(_MSC_VER % 100)
+# endif
+
+#elif defined(__GNUC__) || defined(__GNUG__)
+# define COMPILER_ID "GNU"
+# if defined(__GNUC__)
+#  define COMPILER_VERSION_MAJOR DEC(__GNUC__)
+# else
+#  define COMPILER_VERSION_MAJOR DEC(__GNUG__)
+# endif
+# if defined(__GNUC_MINOR__)
+#  define COMPILER_VERSION_MINOR DEC(__GNUC_MINOR__)
+# endif
+# if defined(__GNUC_PATCHLEVEL__)
+#  define COMPILER_VERSION_PATCH DEC(__GNUC_PATCHLEVEL__)
+# endif
+
+#elif defined(_MSC_VER)
+# define COMPILER_ID "MSVC"
+  /* _MSC_VER = VVRR */
+# define COMPILER_VERSION_MAJOR DEC(_MSC_VER / 100)
+# define COMPILER_VERSION_MINOR DEC(_MSC_VER % 100)
+# if defined(_MSC_FULL_VER)
+#  if _MSC_VER >= 1400
+    /* _MSC_FULL_VER = VVRRPPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 100000)
+#  else
+    /* _MSC_FULL_VER = VVRRPPPP */
+#   define COMPILER_VERSION_PATCH DEC(_MSC_FULL_VER % 10000)
+#  endif
+# endif
+# if defined(_MSC_BUILD)
+#  define COMPILER_VERSION_TWEAK DEC(_MSC_BUILD)
+# endif
+
+#elif defined(__VISUALDSPVERSION__) || defined(__ADSPBLACKFIN__) || defined(__ADSPTS__) || defined(__ADSP21000__)
+# define COMPILER_ID "ADSP"
+#if defined(__VISUALDSPVERSION__)
+  /* __VISUALDSPVERSION__ = 0xVVRRPP00 */
+# define COMPILER_VERSION_MAJOR HEX(__VISUALDSPVERSION__>>24)
+# define COMPILER_VERSION_MINOR HEX(__VISUALDSPVERSION__>>16 & 0xFF)
+# define COMPILER_VERSION_PATCH HEX(__VISUALDSPVERSION__>>8  & 0xFF)
+#endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# define COMPILER_ID "IAR"
+# if defined(__VER__) && defined(__ICCARM__)
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 1000000)
+#  define COMPILER_VERSION_MINOR DEC(((__VER__) / 1000) % 1000)
+#  define COMPILER_VERSION_PATCH DEC((__VER__) % 1000)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# elif defined(__VER__) && (defined(__ICCAVR__) || defined(__ICCRX__) || defined(__ICCRH850__) || defined(__ICCRL78__) || defined(__ICC430__) || defined(__ICCRISCV__) || defined(__ICCV850__) || defined(__ICC8051__))
+#  define COMPILER_VERSION_MAJOR DEC((__VER__) / 100)
+#  define COMPILER_VERSION_MINOR DEC((__VER__) - (((__VER__) / 100)*100))
+#  define COMPILER_VERSION_PATCH DEC(__SUBVERSION__)
+#  define COMPILER_VERSION_INTERNAL DEC(__IAR_SYSTEMS_ICC__)
+# endif
+
+
+/* These compilers are either not known or too old to define an
+  identification macro.  Try to identify the platform and guess that
+  it is the native compiler.  */
+#elif defined(__hpux) || defined(__hpua)
+# define COMPILER_ID "HP"
+
+#else /* unknown compiler */
+# define COMPILER_ID ""
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
+#ifdef SIMULATE_ID
+char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";
+#endif
+
+#ifdef __QNXNTO__
+char const* qnxnto = "INFO" ":" "qnxnto[]";
+#endif
+
+#if defined(__CRAYXE) || defined(__CRAYXC)
+char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";
+#endif
+
+#define STRINGIFY_HELPER(X) #X
+#define STRINGIFY(X) STRINGIFY_HELPER(X)
+
+/* Identify known platforms by name.  */
+#if defined(__linux) || defined(__linux__) || defined(linux)
+# define PLATFORM_ID "Linux"
+
+#elif defined(__CYGWIN__)
+# define PLATFORM_ID "Cygwin"
+
+#elif defined(__MINGW32__)
+# define PLATFORM_ID "MinGW"
+
+#elif defined(__APPLE__)
+# define PLATFORM_ID "Darwin"
+
+#elif defined(_WIN32) || defined(__WIN32__) || defined(WIN32)
+# define PLATFORM_ID "Windows"
+
+#elif defined(__FreeBSD__) || defined(__FreeBSD)
+# define PLATFORM_ID "FreeBSD"
+
+#elif defined(__NetBSD__) || defined(__NetBSD)
+# define PLATFORM_ID "NetBSD"
+
+#elif defined(__OpenBSD__) || defined(__OPENBSD)
+# define PLATFORM_ID "OpenBSD"
+
+#elif defined(__sun) || defined(sun)
+# define PLATFORM_ID "SunOS"
+
+#elif defined(_AIX) || defined(__AIX) || defined(__AIX__) || defined(__aix) || defined(__aix__)
+# define PLATFORM_ID "AIX"
+
+#elif defined(__hpux) || defined(__hpux__)
+# define PLATFORM_ID "HP-UX"
+
+#elif defined(__HAIKU__)
+# define PLATFORM_ID "Haiku"
+
+#elif defined(__BeOS) || defined(__BEOS__) || defined(_BEOS)
+# define PLATFORM_ID "BeOS"
+
+#elif defined(__QNX__) || defined(__QNXNTO__)
+# define PLATFORM_ID "QNX"
+
+#elif defined(__tru64) || defined(_tru64) || defined(__TRU64__)
+# define PLATFORM_ID "Tru64"
+
+#elif defined(__riscos) || defined(__riscos__)
+# define PLATFORM_ID "RISCos"
+
+#elif defined(__sinix) || defined(__sinix__) || defined(__SINIX__)
+# define PLATFORM_ID "SINIX"
+
+#elif defined(__UNIX_SV__)
+# define PLATFORM_ID "UNIX_SV"
+
+#elif defined(__bsdos__)
+# define PLATFORM_ID "BSDOS"
+
+#elif defined(_MPRAS) || defined(MPRAS)
+# define PLATFORM_ID "MP-RAS"
+
+#elif defined(__osf) || defined(__osf__)
+# define PLATFORM_ID "OSF1"
+
+#elif defined(_SCO_SV) || defined(SCO_SV) || defined(sco_sv)
+# define PLATFORM_ID "SCO_SV"
+
+#elif defined(__ultrix) || defined(__ultrix__) || defined(_ULTRIX)
+# define PLATFORM_ID "ULTRIX"
+
+#elif defined(__XENIX__) || defined(_XENIX) || defined(XENIX)
+# define PLATFORM_ID "Xenix"
+
+#elif defined(__WATCOMC__)
+# if defined(__LINUX__)
+#  define PLATFORM_ID "Linux"
+
+# elif defined(__DOS__)
+#  define PLATFORM_ID "DOS"
+
+# elif defined(__OS2__)
+#  define PLATFORM_ID "OS2"
+
+# elif defined(__WINDOWS__)
+#  define PLATFORM_ID "Windows3x"
+
+# else /* unknown platform */
+#  define PLATFORM_ID
+# endif
+
+#elif defined(__INTEGRITY)
+# if defined(INT_178B)
+#  define PLATFORM_ID "Integrity178"
+
+# else /* regular Integrity */
+#  define PLATFORM_ID "Integrity"
+# endif
+
+#else /* unknown platform */
+# define PLATFORM_ID
+
+#endif
+
+/* For windows compilers MSVC and Intel we can determine
+   the architecture of the compiler being used.  This is because
+   the compilers do not have flags that can change the architecture,
+   but rather depend on which compiler is being used
+*/
+#if defined(_WIN32) && defined(_MSC_VER)
+# if defined(_M_IA64)
+#  define ARCHITECTURE_ID "IA64"
+
+# elif defined(_M_X64) || defined(_M_AMD64)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# elif defined(_M_ARM64)
+#  define ARCHITECTURE_ID "ARM64"
+
+# elif defined(_M_ARM)
+#  if _M_ARM == 4
+#   define ARCHITECTURE_ID "ARMV4I"
+#  elif _M_ARM == 5
+#   define ARCHITECTURE_ID "ARMV5I"
+#  else
+#   define ARCHITECTURE_ID "ARMV" STRINGIFY(_M_ARM)
+#  endif
+
+# elif defined(_M_MIPS)
+#  define ARCHITECTURE_ID "MIPS"
+
+# elif defined(_M_SH)
+#  define ARCHITECTURE_ID "SHx"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__WATCOMC__)
+# if defined(_M_I86)
+#  define ARCHITECTURE_ID "I86"
+
+# elif defined(_M_IX86)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__IAR_SYSTEMS_ICC__) || defined(__IAR_SYSTEMS_ICC)
+# if defined(__ICCARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__ICCRX__)
+#  define ARCHITECTURE_ID "RX"
+
+# elif defined(__ICCRH850__)
+#  define ARCHITECTURE_ID "RH850"
+
+# elif defined(__ICCRL78__)
+#  define ARCHITECTURE_ID "RL78"
+
+# elif defined(__ICCRISCV__)
+#  define ARCHITECTURE_ID "RISCV"
+
+# elif defined(__ICCAVR__)
+#  define ARCHITECTURE_ID "AVR"
+
+# elif defined(__ICC430__)
+#  define ARCHITECTURE_ID "MSP430"
+
+# elif defined(__ICCV850__)
+#  define ARCHITECTURE_ID "V850"
+
+# elif defined(__ICC8051__)
+#  define ARCHITECTURE_ID "8051"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+
+#elif defined(__ghs__)
+# if defined(__PPC64__)
+#  define ARCHITECTURE_ID "PPC64"
+
+# elif defined(__ppc__)
+#  define ARCHITECTURE_ID "PPC"
+
+# elif defined(__ARM__)
+#  define ARCHITECTURE_ID "ARM"
+
+# elif defined(__x86_64__)
+#  define ARCHITECTURE_ID "x64"
+
+# elif defined(__i386__)
+#  define ARCHITECTURE_ID "X86"
+
+# else /* unknown architecture */
+#  define ARCHITECTURE_ID ""
+# endif
+#else
+#  define ARCHITECTURE_ID
+#endif
+
+/* Convert integer to decimal digit literals.  */
+#define DEC(n)                   \
+  ('0' + (((n) / 10000000)%10)), \
+  ('0' + (((n) / 1000000)%10)),  \
+  ('0' + (((n) / 100000)%10)),   \
+  ('0' + (((n) / 10000)%10)),    \
+  ('0' + (((n) / 1000)%10)),     \
+  ('0' + (((n) / 100)%10)),      \
+  ('0' + (((n) / 10)%10)),       \
+  ('0' +  ((n) % 10))
+
+/* Convert integer to hex digit literals.  */
+#define HEX(n)             \
+  ('0' + ((n)>>28 & 0xF)), \
+  ('0' + ((n)>>24 & 0xF)), \
+  ('0' + ((n)>>20 & 0xF)), \
+  ('0' + ((n)>>16 & 0xF)), \
+  ('0' + ((n)>>12 & 0xF)), \
+  ('0' + ((n)>>8  & 0xF)), \
+  ('0' + ((n)>>4  & 0xF)), \
+  ('0' + ((n)     & 0xF))
+
+/* Construct a string literal encoding the version number components. */
+#ifdef COMPILER_VERSION_MAJOR
+char const info_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','[',
+  COMPILER_VERSION_MAJOR,
+# ifdef COMPILER_VERSION_MINOR
+  '.', COMPILER_VERSION_MINOR,
+#  ifdef COMPILER_VERSION_PATCH
+   '.', COMPILER_VERSION_PATCH,
+#   ifdef COMPILER_VERSION_TWEAK
+    '.', COMPILER_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct a string literal encoding the internal version number. */
+#ifdef COMPILER_VERSION_INTERNAL
+char const info_version_internal[] = {
+  'I', 'N', 'F', 'O', ':',
+  'c','o','m','p','i','l','e','r','_','v','e','r','s','i','o','n','_',
+  'i','n','t','e','r','n','a','l','[',
+  COMPILER_VERSION_INTERNAL,']','\0'};
+#endif
+
+/* Construct a string literal encoding the version number components. */
+#ifdef SIMULATE_VERSION_MAJOR
+char const info_simulate_version[] = {
+  'I', 'N', 'F', 'O', ':',
+  's','i','m','u','l','a','t','e','_','v','e','r','s','i','o','n','[',
+  SIMULATE_VERSION_MAJOR,
+# ifdef SIMULATE_VERSION_MINOR
+  '.', SIMULATE_VERSION_MINOR,
+#  ifdef SIMULATE_VERSION_PATCH
+   '.', SIMULATE_VERSION_PATCH,
+#   ifdef SIMULATE_VERSION_TWEAK
+    '.', SIMULATE_VERSION_TWEAK,
+#   endif
+#  endif
+# endif
+  ']','\0'};
+#endif
+
+/* Construct the string literal in pieces to prevent the source from
+   getting matched.  Store it in a pointer rather than an array
+   because some compilers will just produce instructions to fill the
+   array rather than assigning a pointer to a static array.  */
+char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
+char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
+
+
+
+
+#if defined(__INTEL_COMPILER) && defined(_MSVC_LANG) && _MSVC_LANG < 201403L
+#  if defined(__INTEL_CXX11_MODE__)
+#    if defined(__cpp_aggregate_nsdmi)
+#      define CXX_STD 201402L
+#    else
+#      define CXX_STD 201103L
+#    endif
+#  else
+#    define CXX_STD 199711L
+#  endif
+#elif defined(_MSC_VER) && defined(_MSVC_LANG)
+#  define CXX_STD _MSVC_LANG
+#else
+#  define CXX_STD __cplusplus
+#endif
+
+const char* info_language_dialect_default = "INFO" ":" "dialect_default["
+#if CXX_STD > 201703L
+  "20"
+#elif CXX_STD >= 201703L
+  "17"
+#elif CXX_STD >= 201402L
+  "14"
+#elif CXX_STD >= 201103L
+  "11"
+#else
+  "98"
+#endif
+"]";
+
+/*--------------------------------------------------------------------------*/
+
+int main(int argc, char* argv[])
+{
+  int require = 0;
+  require += info_compiler[argc];
+  require += info_platform[argc];
+#ifdef COMPILER_VERSION_MAJOR
+  require += info_version[argc];
+#endif
+#ifdef COMPILER_VERSION_INTERNAL
+  require += info_version_internal[argc];
+#endif
+#ifdef SIMULATE_ID
+  require += info_simulate[argc];
+#endif
+#ifdef SIMULATE_VERSION_MAJOR
+  require += info_simulate_version[argc];
+#endif
+#if defined(__CRAYXE) || defined(__CRAYXC)
+  require += info_cray[argc];
+#endif
+  require += info_language_dialect_default[argc];
+  (void)argv;
+  return require;
+}
diff --git a/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe
new file mode 100644
index 0000000..916985a
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe differ
diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
new file mode 100644
index 0000000..7511877
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/CMakeDirectoryInformation.cmake
@@ -0,0 +1,16 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# Relative path conversion top directories.
+set(CMAKE_RELATIVE_PATH_TOP_SOURCE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry")
+set(CMAKE_RELATIVE_PATH_TOP_BINARY "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug")
+
+# Force unix paths in dependencies.
+set(CMAKE_FORCE_UNIX_PATHS 1)
+
+
+# The C and CXX include file regular expressions for this directory.
+set(CMAKE_C_INCLUDE_REGEX_SCAN "^.*$")
+set(CMAKE_C_INCLUDE_REGEX_COMPLAIN "^$")
+set(CMAKE_CXX_INCLUDE_REGEX_SCAN ${CMAKE_C_INCLUDE_REGEX_SCAN})
+set(CMAKE_CXX_INCLUDE_REGEX_COMPLAIN ${CMAKE_C_INCLUDE_REGEX_COMPLAIN})
diff --git a/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
new file mode 100644
index 0000000..6b7a874
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/CMakeOutput.log
@@ -0,0 +1,524 @@
+The system is: Windows - 10.0.19045 - AMD64
+Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
+Compiler: C:/TDM-GCC-64/bin/gcc.exe 
+Build flags: 
+Id flags:  
+
+The output was:
+0
+
+
+Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.exe"
+
+The C compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/a.exe"
+
+Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
+Compiler: C:/TDM-GCC-64/bin/g++.exe 
+Build flags: 
+Id flags:  
+
+The output was:
+0
+
+
+Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.exe"
+
+The CXX compiler identification is GNU, found in "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/a.exe"
+
+Determining if the C compiler works passed with the following output:
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_16a13/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_16a13.dir\build.make CMakeFiles/cmTC_16a13.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building C object CMakeFiles/cmTC_16a13.dir/testCCompiler.c.obj
+C:\TDM-GCC-64\bin\gcc.exe    -o CMakeFiles\cmTC_16a13.dir\testCCompiler.c.obj   -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
+Linking C executable cmTC_16a13.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_16a13.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_16a13.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_16a13.dir/objects.a @CMakeFiles\cmTC_16a13.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe      -Wl,--whole-archive CMakeFiles\cmTC_16a13.dir/objects.a -Wl,--no-whole-archive  -o cmTC_16a13.exe -Wl,--out-implib,libcmTC_16a13.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_16a13.dir\linklibs.rsp
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+
+
+
+Detecting C compiler ABI info compiled with the following output:
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj
+C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
+Using built-in specs.
+COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
+Target: x86_64-w64-mingw32
+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
+Thread model: posix
+gcc version 9.2.0 (tdm64-1) 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
+GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
+
+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
+#include "..." search starts here:
+#include <...> search starts here:
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
+End of search list.
+GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
+
+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s
+GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking C executable cmTC_882c2.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp
+C:\TDM-GCC-64\bin\gcc.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl,--no-whole-archive  -o cmTC_882c2.exe -Wl,--out-implib,libcmTC_882c2.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+Using built-in specs.
+COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe
+COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
+Target: x86_64-w64-mingw32
+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
+Thread model: posix
+gcc version 9.2.0 (tdm64-1) 
+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64'
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+
+
+
+Parsed C implicit include dir info from above output: rv=done
+  found start of include info
+  found start of implicit include info
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
+  end of search list found
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
+  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
+
+
+Parsed C implicit link information from above output:
+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
+  ignore line: []
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_882c2/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_882c2.dir\build.make CMakeFiles/cmTC_882c2.dir/build]
+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
+  ignore line: [Building C object CMakeFiles/cmTC_882c2.dir/CMakeCCompilerABI.c.obj]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe   -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj   -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
+  ignore line: [Target: x86_64-w64-mingw32]
+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c -quiet -dumpbase CMakeCCompilerABI.c -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj -version -o C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
+  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
+  ignore line: []
+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
+  ignore line: [#include "..." search starts here:]
+  ignore line: [#include <...> search starts here:]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
+  ignore line: [End of search list.]
+  ignore line: [GNU C17 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
+  ignore line: []
+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+  ignore line: [Compiler executable checksum: 28379e31cc2f1f6d7a657691ed425dfd]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj C:\Users\m7mds\AppData\Local\Temp\cc1i5RCU.s]
+  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_882c2.dir\CMakeCCompilerABI.c.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking C executable cmTC_882c2.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_882c2.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_882c2.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_882c2.dir/objects.a @CMakeFiles\cmTC_882c2.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\gcc.exe     -v -Wl --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a -Wl --no-whole-archive  -o cmTC_882c2.exe -Wl --out-implib libcmTC_882c2.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\gcc.exe]
+  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
+  ignore line: [Target: x86_64-w64-mingw32]
+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_882c2.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_882c2.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_882c2.dir/objects.a --no-whole-archive --out-implib libcmTC_882c2.dll.a --major-image-version 0 --minor-image-version 0 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
+    arg [-plugin] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
+    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccqxS7na.res] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
+    arg [-m] ==> ignore
+    arg [i386pep] ==> ignore
+    arg [--exclude-libs=libpthread.a] ==> ignore
+    arg [-Bdynamic] ==> ignore
+    arg [-o] ==> ignore
+    arg [cmTC_882c2.exe] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
+    arg [--whole-archive] ==> ignore
+    arg [CMakeFiles\cmTC_882c2.dir/objects.a] ==> ignore
+    arg [--no-whole-archive] ==> ignore
+    arg [--out-implib] ==> ignore
+    arg [libcmTC_882c2.dll.a] ==> ignore
+    arg [--major-image-version] ==> ignore
+    arg [0] ==> ignore
+    arg [--minor-image-version] ==> ignore
+    arg [0] ==> ignore
+    arg [-lmingw32] ==> lib [mingw32]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lmoldname] ==> lib [moldname]
+    arg [-lmingwex] ==> lib [mingwex]
+    arg [-lmsvcrt] ==> lib [msvcrt]
+    arg [-lpthread] ==> lib [pthread]
+    arg [-ladvapi32] ==> lib [advapi32]
+    arg [-lshell32] ==> lib [shell32]
+    arg [-luser32] ==> lib [user32]
+    arg [-lkernel32] ==> lib [kernel32]
+    arg [-lmingw32] ==> lib [mingw32]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lmoldname] ==> lib [moldname]
+    arg [-lmingwex] ==> lib [mingwex]
+    arg [-lmsvcrt] ==> lib [msvcrt]
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
+  remove lib [msvcrt]
+  remove lib [msvcrt]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
+  implicit libs: [mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
+  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
+  implicit fwks: []
+
+
+Determining if the CXX compiler works passed with the following output:
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_6e85e/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_6e85e.dir\build.make CMakeFiles/cmTC_6e85e.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_6e85e.dir/testCXXCompiler.cxx.obj
+C:\TDM-GCC-64\bin\g++.exe     -o CMakeFiles\cmTC_6e85e.dir\testCXXCompiler.cxx.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
+Linking CXX executable cmTC_6e85e.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_6e85e.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_6e85e.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_6e85e.dir/objects.a @CMakeFiles\cmTC_6e85e.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe      -Wl,--whole-archive CMakeFiles\cmTC_6e85e.dir/objects.a -Wl,--no-whole-archive  -o cmTC_6e85e.exe -Wl,--out-implib,libcmTC_6e85e.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\cmTC_6e85e.dir\linklibs.rsp
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+
+
+
+Detecting CXX compiler ABI info compiled with the following output:
+Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp
+
+Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build
+mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj
+C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
+Using built-in specs.
+COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
+Target: x86_64-w64-mingw32
+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
+Thread model: posix
+gcc version 9.2.0 (tdm64-1) 
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
+GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
+
+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"
+ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"
+#include "..." search starts here:
+#include <...> search starts here:
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include
+End of search list.
+GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)
+	compiled by GNU C version 9.2.0, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.3, isl version isl-0.18-GMP
+
+GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
+Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s
+GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1
+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
+COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64'
+Linking CXX executable cmTC_bedbe.exe
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe     -v -Wl,--whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl,--no-whole-archive  -o cmTC_bedbe.exe -Wl,--out-implib,libcmTC_bedbe.dll.a -Wl,--major-image-version,0,--minor-image-version,0 
+Using built-in specs.
+COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe
+COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
+Target: x86_64-w64-mingw32
+Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs
+Thread model: posix
+gcc version 9.2.0 (tdm64-1) 
+COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../libexec/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/
+LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/;C:/TDM-GCC-64/bin/../lib/gcc/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/;C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
+ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o
+COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64'
+mingw32-make.exe[1]: Leaving directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp'
+
+
+
+Parsed CXX implicit include dir info from above output: rv=done
+  found start of include info
+  found start of implicit include info
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+    add: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
+  end of search list found
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include] ==> [C:/TDM-GCC-64/include]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+  collapse include dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/include]
+  implicit include dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include;C:/TDM-GCC-64/include;C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed;C:/TDM-GCC-64/x86_64-w64-mingw32/include]
+
+
+Parsed CXX implicit link information from above output:
+  link line regex: [^( *|.*[/\])(ld\.exe|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\]+-)?ld|collect2)[^/\]*( |$)]
+  ignore line: [Change Dir: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp]
+  ignore line: []
+  ignore line: [Run Build Command(s):C:/TDM-GCC-64/bin/mingw32-make.exe cmTC_bedbe/fast && C:/TDM-GCC-64/bin/mingw32-make.exe  -f CMakeFiles\cmTC_bedbe.dir\build.make CMakeFiles/cmTC_bedbe.dir/build]
+  ignore line: [mingw32-make.exe[1]: Entering directory 'C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/CMakeTmp']
+  ignore line: [Building CXX object CMakeFiles/cmTC_bedbe.dir/CMakeCXXCompilerABI.cpp.obj]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe    -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -c "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
+  ignore line: [Target: x86_64-w64-mingw32]
+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/cc1plus.exe -quiet -v -iprefix C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/ -D_REENTRANT C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp -quiet -dumpbase CMakeCXXCompilerABI.cpp -mtune=generic -march=x86-64 -auxbase-strip CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj -version -o C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
+  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
+  ignore line: []
+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"]
+  ignore line: [ignoring duplicate directory "C:/TDM-GCC-64/lib/gcc/../../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"]
+  ignore line: [#include "..." search starts here:]
+  ignore line: [#include <...> search starts here:]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed]
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include]
+  ignore line: [End of search list.]
+  ignore line: [GNU C++14 (tdm64-1) version 9.2.0 (x86_64-w64-mingw32)]
+  ignore line: [	compiled by GNU C version 9.2.0  GMP version 6.1.0  MPFR version 3.1.4  MPC version 1.0.3  isl version isl-0.18-GMP]
+  ignore line: []
+  ignore line: [GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072]
+  ignore line: [Compiler executable checksum: 75884ba1d8f1274f120b97d05d513c01]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [ C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/as.exe -v -o CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj C:\Users\m7mds\AppData\Local\Temp\ccYn3Nwl.s]
+  ignore line: [GNU assembler version 2.33.1 (x86_64-w64-mingw32) using BFD version (GNU Binutils) 2.33.1]
+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'CMakeFiles\cmTC_bedbe.dir\CMakeCXXCompilerABI.cpp.obj' '-c' '-mtune=generic' '-march=x86-64']
+  ignore line: [Linking CXX executable cmTC_bedbe.exe]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E cmake_link_script CMakeFiles\cmTC_bedbe.dir\link.txt --verbose=1]
+  ignore line: ["C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\cmTC_bedbe.dir/objects.a]
+  ignore line: [C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\cmTC_bedbe.dir/objects.a @CMakeFiles\cmTC_bedbe.dir\objects1.rsp]
+  ignore line: [C:\TDM-GCC-64\bin\g++.exe     -v -Wl --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a -Wl --no-whole-archive  -o cmTC_bedbe.exe -Wl --out-implib libcmTC_bedbe.dll.a -Wl --major-image-version 0 --minor-image-version 0 ]
+  ignore line: [Using built-in specs.]
+  ignore line: [COLLECT_GCC=C:\TDM-GCC-64\bin\g++.exe]
+  ignore line: [COLLECT_LTO_WRAPPER=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe]
+  ignore line: [Target: x86_64-w64-mingw32]
+  ignore line: [Configured with: ../../../src/gcc-git-9.2.0/configure --build=x86_64-w64-mingw32 --enable-targets=all --enable-languages=ada,c,c++,fortran,lto,objc,obj-c++ --enable-libgomp --enable-lto --enable-graphite --enable-cxx-flags=-DWINPTHREAD_STATIC --disable-build-with-cxx --disable-build-poststage1-with-cxx --enable-libstdcxx-debug --enable-threads=posix --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libstdcxx-threads --enable-libstdcxx-time --with-gnu-ld --disable-werror --disable-nls --disable-win32-registry --enable-large-address-aware --disable-rpath --disable-symvers --prefix=/mingw64tdm --with-local-prefix=/mingw64tdm --with-pkgversion=tdm64-1 --with-bugurl=http://tdm-gcc.tdragon.net/bugs]
+  ignore line: [Thread model: posix]
+  ignore line: [gcc version 9.2.0 (tdm64-1) ]
+  ignore line: [COMPILER_PATH=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../libexec/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/bin/]
+  ignore line: [LIBRARY_PATH=C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/]
+  ignore line: [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../]
+  ignore line: [COLLECT_GCC_OPTIONS='-v' '-o' 'cmTC_bedbe.exe' '-mtune=generic' '-march=x86-64']
+  link line: [ C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe -plugin C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll -plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe -plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -plugin-opt=-pass-through=-lpthread -plugin-opt=-pass-through=-ladvapi32 -plugin-opt=-pass-through=-lshell32 -plugin-opt=-pass-through=-luser32 -plugin-opt=-pass-through=-lkernel32 -plugin-opt=-pass-through=-lmingw32 -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lmoldname -plugin-opt=-pass-through=-lmingwex -plugin-opt=-pass-through=-lmsvcrt -m i386pep --exclude-libs=libpthread.a -Bdynamic -o cmTC_bedbe.exe C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0 -LC:/TDM-GCC-64/bin/../lib/gcc -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib -LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../.. --whole-archive CMakeFiles\cmTC_bedbe.dir/objects.a --no-whole-archive --out-implib libcmTC_bedbe.dll.a --major-image-version 0 --minor-image-version 0 -Bstatic -lstdc++ -Bdynamic -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt -lpthread -ladvapi32 -lshell32 -luser32 -lkernel32 -lmingw32 -lgcc -lmoldname -lmingwex -lmsvcrt C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o]
+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/collect2.exe] ==> ignore
+    arg [-plugin] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/liblto_plugin-0.dll] ==> ignore
+    arg [-plugin-opt=C:/TDM-GCC-64/bin/../libexec/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe] ==> ignore
+    arg [-plugin-opt=-fresolution=C:\Users\m7mds\AppData\Local\Temp\ccCSXW3M.res] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
+    arg [-plugin-opt=-pass-through=-lpthread] ==> ignore
+    arg [-plugin-opt=-pass-through=-ladvapi32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lshell32] ==> ignore
+    arg [-plugin-opt=-pass-through=-luser32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lkernel32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingw32] ==> ignore
+    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmoldname] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmingwex] ==> ignore
+    arg [-plugin-opt=-pass-through=-lmsvcrt] ==> ignore
+    arg [-m] ==> ignore
+    arg [i386pep] ==> ignore
+    arg [--exclude-libs=libpthread.a] ==> ignore
+    arg [-Bdynamic] ==> ignore
+    arg [-o] ==> ignore
+    arg [cmTC_bedbe.exe] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/crt2.o] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtbegin.o] ==> ignore
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib]
+    arg [-LC:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..]
+    arg [--whole-archive] ==> ignore
+    arg [CMakeFiles\cmTC_bedbe.dir/objects.a] ==> ignore
+    arg [--no-whole-archive] ==> ignore
+    arg [--out-implib] ==> ignore
+    arg [libcmTC_bedbe.dll.a] ==> ignore
+    arg [--major-image-version] ==> ignore
+    arg [0] ==> ignore
+    arg [--minor-image-version] ==> ignore
+    arg [0] ==> ignore
+    arg [-Bstatic] ==> ignore
+    arg [-lstdc++] ==> lib [stdc++]
+    arg [-Bdynamic] ==> ignore
+    arg [-lmingw32] ==> lib [mingw32]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lmoldname] ==> lib [moldname]
+    arg [-lmingwex] ==> lib [mingwex]
+    arg [-lmsvcrt] ==> lib [msvcrt]
+    arg [-lpthread] ==> lib [pthread]
+    arg [-ladvapi32] ==> lib [advapi32]
+    arg [-lshell32] ==> lib [shell32]
+    arg [-luser32] ==> lib [user32]
+    arg [-lkernel32] ==> lib [kernel32]
+    arg [-lmingw32] ==> lib [mingw32]
+    arg [-lgcc] ==> lib [gcc]
+    arg [-lmoldname] ==> lib [moldname]
+    arg [-lmingwex] ==> lib [mingwex]
+    arg [-lmsvcrt] ==> lib [msvcrt]
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib/default-manifest.o] ==> ignore
+    arg [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/crtend.o] ==> ignore
+  remove lib [msvcrt]
+  remove lib [msvcrt]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0] ==> [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc] ==> [C:/TDM-GCC-64/lib/gcc]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib/../lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../lib] ==> [C:/TDM-GCC-64/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/lib] ==> [C:/TDM-GCC-64/x86_64-w64-mingw32/lib]
+  collapse library dir [C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../..] ==> [C:/TDM-GCC-64/lib]
+  implicit libs: [stdc++;mingw32;gcc;moldname;mingwex;pthread;advapi32;shell32;user32;kernel32;mingw32;gcc;moldname;mingwex]
+  implicit dirs: [C:/TDM-GCC-64/lib/gcc/x86_64-w64-mingw32/9.2.0;C:/TDM-GCC-64/lib/gcc;C:/TDM-GCC-64/x86_64-w64-mingw32/lib;C:/TDM-GCC-64/lib]
+  implicit fwks: []
+
+
diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile.cmake b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
new file mode 100644
index 0000000..75be321
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/Makefile.cmake
@@ -0,0 +1,57 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# The generator used is:
+set(CMAKE_DEPENDS_GENERATOR "MinGW Makefiles")
+
+# The top level Makefile was generated from the following files:
+set(CMAKE_MAKEFILE_DEPENDS
+  "CMakeCache.txt"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCInformation.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCXXInformation.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeCommonLanguageInclude.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeExtraGeneratorDetermineCompilerMacrosAndIncludeDirs.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeFindCodeBlocks.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeGenericSystem.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeInitializeConfigs.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeLanguageInformation.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeRCInformation.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInformation.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/CMakeSystemSpecificInitialize.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/CMakeCommonCompilerMacros.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-C.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU-CXX.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Compiler/GNU.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Internal/CMakeCheckCompilerFlag.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C-ABI.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-C.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX-ABI.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU-CXX.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-GNU.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows-windres.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/Windows.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/Platform/WindowsPaths.cmake"
+  "C:/Program Files/JetBrains/CLion 2020.2.4/bin/cmake/win/share/cmake-3.17/Modules/ProcessorCount.cmake"
+  "../CMakeLists.txt"
+  "CMakeFiles/3.17.3/CMakeCCompiler.cmake"
+  "CMakeFiles/3.17.3/CMakeCXXCompiler.cmake"
+  "CMakeFiles/3.17.3/CMakeRCCompiler.cmake"
+  "CMakeFiles/3.17.3/CMakeSystem.cmake"
+  )
+
+# The corresponding makefile is:
+set(CMAKE_MAKEFILE_OUTPUTS
+  "Makefile"
+  "CMakeFiles/cmake.check_cache"
+  )
+
+# Byproducts of CMake generate step:
+set(CMAKE_MAKEFILE_PRODUCTS
+  "CMakeFiles/CMakeDirectoryInformation.cmake"
+  )
+
+# Dependency information for all targets:
+set(CMAKE_DEPEND_INFO_FILES
+  "CMakeFiles/dry.dir/DependInfo.cmake"
+  )
diff --git a/dry/cmake-build-debug/CMakeFiles/Makefile2 b/dry/cmake-build-debug/CMakeFiles/Makefile2
new file mode 100644
index 0000000..bbf8d8a
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/Makefile2
@@ -0,0 +1,125 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# Default target executed when no arguments are given to make.
+default_target: all
+
+.PHONY : default_target
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Disable VCS-based implicit rules.
+% : %,v
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%,v
+
+
+# Disable VCS-based implicit rules.
+% : SCCS/s.%
+
+
+# Disable VCS-based implicit rules.
+% : s.%
+
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Command-line flag to silence nested $(MAKE).
+$(VERBOSE)MAKESILENT = -s
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+SHELL = cmd.exe
+
+# The CMake executable.
+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
+
+# The command to remove a file.
+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
+
+#=============================================================================
+# Directory level rules for the build root directory
+
+# The main recursive "all" target.
+all: CMakeFiles/dry.dir/all
+
+.PHONY : all
+
+# The main recursive "preinstall" target.
+preinstall:
+
+.PHONY : preinstall
+
+# The main recursive "clean" target.
+clean: CMakeFiles/dry.dir/clean
+
+.PHONY : clean
+
+#=============================================================================
+# Target rules for target CMakeFiles/dry.dir
+
+# All Build rule for target.
+CMakeFiles/dry.dir/all:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/depend
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=1,2,3 "Built target dry"
+.PHONY : CMakeFiles/dry.dir/all
+
+# Build rule for subdir invocation for target.
+CMakeFiles/dry.dir/rule: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 3
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 CMakeFiles/dry.dir/all
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
+.PHONY : CMakeFiles/dry.dir/rule
+
+# Convenience name for target.
+dry: CMakeFiles/dry.dir/rule
+
+.PHONY : dry
+
+# clean rule for target.
+CMakeFiles/dry.dir/clean:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/clean
+.PHONY : CMakeFiles/dry.dir/clean
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
diff --git a/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
new file mode 100644
index 0000000..3e82961
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/TargetDirectories.txt
@@ -0,0 +1,3 @@
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/edit_cache.dir
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/rebuild_cache.dir
diff --git a/dry/cmake-build-debug/CMakeFiles/clion-environment.txt b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
new file mode 100644
index 0000000..59a47ca
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/clion-environment.txt
@@ -0,0 +1,4 @@
+ToolSet: w64 7.0 (local)@C:\TDM-GCC-64
+Options: 
+
+Options:
\ No newline at end of file
diff --git a/dry/cmake-build-debug/CMakeFiles/clion-log.txt b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
new file mode 100644
index 0000000..a544d62
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/clion-log.txt
@@ -0,0 +1,4 @@
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+-- Configuring done
+-- Generating done
+-- Build files have been written to: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug
diff --git a/dry/cmake-build-debug/CMakeFiles/cmake.check_cache b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
new file mode 100644
index 0000000..3dccd73
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/cmake.check_cache
@@ -0,0 +1 @@
+# This file is generated by cmake for dependency checking of the CMakeCache.txt file
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
new file mode 100644
index 0000000..79f3388
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/CXX.includecache
@@ -0,0 +1,16 @@
+#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])
+
+#IncludeRegexScan: ^.*$
+
+#IncludeRegexComplain: ^$
+
+#IncludeRegexTransform: 
+
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
+Pirate.h
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+
+C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+iostream
+-
+
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
new file mode 100644
index 0000000..0f0b9bc
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/DependInfo.cmake
@@ -0,0 +1,21 @@
+# The set of languages for which implicit dependencies are needed:
+set(CMAKE_DEPENDS_LANGUAGES
+  "CXX"
+  )
+# The set of files for implicit dependencies of each language:
+set(CMAKE_DEPENDS_CHECK_CXX
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj"
+  "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp" "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj"
+  )
+set(CMAKE_CXX_COMPILER_ID "GNU")
+
+# The include file search paths:
+set(CMAKE_CXX_TARGET_INCLUDE_PATH
+  )
+
+# Targets to which this target links.
+set(CMAKE_TARGET_LINKED_INFO_FILES
+  )
+
+# Fortran module output directory.
+set(CMAKE_Fortran_TARGET_MODULE_DIR "")
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj
new file mode 100644
index 0000000..458c3e0
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/Pirate.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
new file mode 100644
index 0000000..7086ad8
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/build.make
@@ -0,0 +1,134 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# Delete rule output on recipe failure.
+.DELETE_ON_ERROR:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Disable VCS-based implicit rules.
+% : %,v
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%,v
+
+
+# Disable VCS-based implicit rules.
+% : SCCS/s.%
+
+
+# Disable VCS-based implicit rules.
+% : s.%
+
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Command-line flag to silence nested $(MAKE).
+$(VERBOSE)MAKESILENT = -s
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+SHELL = cmd.exe
+
+# The CMake executable.
+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
+
+# The command to remove a file.
+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
+
+# Include any dependencies generated for this target.
+include CMakeFiles/dry.dir/depend.make
+
+# Include the progress variables for this target.
+include CMakeFiles/dry.dir/progress.make
+
+# Include the compile flags for this target's objects.
+include CMakeFiles/dry.dir/flags.make
+
+CMakeFiles/dry.dir/main.cpp.obj: CMakeFiles/dry.dir/flags.make
+CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_1) "Building CXX object CMakeFiles/dry.dir/main.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\main.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp"
+
+CMakeFiles/dry.dir/main.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/main.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" > CMakeFiles\dry.dir\main.cpp.i
+
+CMakeFiles/dry.dir/main.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/main.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\main.cpp" -o CMakeFiles\dry.dir\main.cpp.s
+
+CMakeFiles/dry.dir/Pirate.cpp.obj: CMakeFiles/dry.dir/flags.make
+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_2) "Building CXX object CMakeFiles/dry.dir/Pirate.cpp.obj"
+	C:\TDM-GCC-64\bin\g++.exe  $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -o CMakeFiles\dry.dir\Pirate.cpp.obj -c "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp"
+
+CMakeFiles/dry.dir/Pirate.cpp.i: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Preprocessing CXX source to CMakeFiles/dry.dir/Pirate.cpp.i"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -E "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" > CMakeFiles\dry.dir\Pirate.cpp.i
+
+CMakeFiles/dry.dir/Pirate.cpp.s: cmake_force
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green "Compiling CXX source to assembly CMakeFiles/dry.dir/Pirate.cpp.s"
+	C:\TDM-GCC-64\bin\g++.exe $(CXX_DEFINES) $(CXX_INCLUDES) $(CXX_FLAGS) -S "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\Pirate.cpp" -o CMakeFiles\dry.dir\Pirate.cpp.s
+
+# Object files for target dry
+dry_OBJECTS = \
+"CMakeFiles/dry.dir/main.cpp.obj" \
+"CMakeFiles/dry.dir/Pirate.cpp.obj"
+
+# External object files for target dry
+dry_EXTERNAL_OBJECTS =
+
+dry.exe: CMakeFiles/dry.dir/main.cpp.obj
+dry.exe: CMakeFiles/dry.dir/Pirate.cpp.obj
+dry.exe: CMakeFiles/dry.dir/build.make
+dry.exe: CMakeFiles/dry.dir/linklibs.rsp
+dry.exe: CMakeFiles/dry.dir/objects1.rsp
+dry.exe: CMakeFiles/dry.dir/link.txt
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --green --bold --progress-dir="C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" --progress-num=$(CMAKE_PROGRESS_3) "Linking CXX executable dry.exe"
+	$(CMAKE_COMMAND) -E cmake_link_script CMakeFiles\dry.dir\link.txt --verbose=$(VERBOSE)
+
+# Rule to build all files generated by this target.
+CMakeFiles/dry.dir/build: dry.exe
+
+.PHONY : CMakeFiles/dry.dir/build
+
+CMakeFiles/dry.dir/clean:
+	$(CMAKE_COMMAND) -P CMakeFiles\dry.dir\cmake_clean.cmake
+.PHONY : CMakeFiles/dry.dir/clean
+
+CMakeFiles/dry.dir/depend:
+	$(CMAKE_COMMAND) -E cmake_depends "MinGW Makefiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\dry.dir\DependInfo.cmake" --color=$(COLOR)
+.PHONY : CMakeFiles/dry.dir/depend
+
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
new file mode 100644
index 0000000..d58f6e3
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/cmake_clean.cmake
@@ -0,0 +1,13 @@
+file(REMOVE_RECURSE
+  "CMakeFiles/dry.dir/Pirate.cpp.obj"
+  "CMakeFiles/dry.dir/main.cpp.obj"
+  "dry.exe"
+  "dry.exe.manifest"
+  "dry.pdb"
+  "libdry.dll.a"
+)
+
+# Per-language clean rules from dependency scanning.
+foreach(lang CXX)
+  include(CMakeFiles/dry.dir/cmake_clean_${lang}.cmake OPTIONAL)
+endforeach()
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
new file mode 100644
index 0000000..51eeb9b
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.internal
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+CMakeFiles/dry.dir/Pirate.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h
+CMakeFiles/dry.dir/main.cpp.obj
+ C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
new file mode 100644
index 0000000..3b9c994
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/depend.make
@@ -0,0 +1,8 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.cpp
+CMakeFiles/dry.dir/Pirate.cpp.obj: ../Pirate.h
+
+CMakeFiles/dry.dir/main.cpp.obj: ../main.cpp
+
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
new file mode 100644
index 0000000..dee4354
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/flags.make
@@ -0,0 +1,10 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# compile CXX with C:/TDM-GCC-64/bin/g++.exe
+CXX_FLAGS = -g   -std=gnu++14
+
+CXX_DEFINES = 
+
+CXX_INCLUDES = 
+
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
new file mode 100644
index 0000000..81d1196
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/link.txt
@@ -0,0 +1,3 @@
+"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f CMakeFiles\dry.dir/objects.a
+C:\TDM-GCC-64\bin\ar.exe cr CMakeFiles\dry.dir/objects.a @CMakeFiles\dry.dir\objects1.rsp
+C:\TDM-GCC-64\bin\g++.exe -g   -Wl,--whole-archive CMakeFiles\dry.dir/objects.a -Wl,--no-whole-archive  -o dry.exe -Wl,--out-implib,libdry.dll.a -Wl,--major-image-version,0,--minor-image-version,0 @CMakeFiles\dry.dir\linklibs.rsp
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
new file mode 100644
index 0000000..8ed353a
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/linklibs.rsp
@@ -0,0 +1 @@
+ -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32 
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj
new file mode 100644
index 0000000..052a66b
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/main.cpp.obj differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a
new file mode 100644
index 0000000..7fd194a
Binary files /dev/null and b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects.a differ
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
new file mode 100644
index 0000000..a83fd1c
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/objects1.rsp
@@ -0,0 +1 @@
+CMakeFiles/dry.dir/main.cpp.obj CMakeFiles/dry.dir/Pirate.cpp.obj
diff --git a/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
new file mode 100644
index 0000000..6a9dc74
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/dry.dir/progress.make
@@ -0,0 +1,4 @@
+CMAKE_PROGRESS_1 = 1
+CMAKE_PROGRESS_2 = 2
+CMAKE_PROGRESS_3 = 3
+
diff --git a/dry/cmake-build-debug/CMakeFiles/progress.marks b/dry/cmake-build-debug/CMakeFiles/progress.marks
new file mode 100644
index 0000000..00750ed
--- /dev/null
+++ b/dry/cmake-build-debug/CMakeFiles/progress.marks
@@ -0,0 +1 @@
+3
diff --git a/dry/cmake-build-debug/Makefile b/dry/cmake-build-debug/Makefile
new file mode 100644
index 0000000..d181146
--- /dev/null
+++ b/dry/cmake-build-debug/Makefile
@@ -0,0 +1,227 @@
+# CMAKE generated file: DO NOT EDIT!
+# Generated by "MinGW Makefiles" Generator, CMake Version 3.17
+
+# Default target executed when no arguments are given to make.
+default_target: all
+
+.PHONY : default_target
+
+# Allow only one "make -f Makefile2" at a time, but pass parallelism.
+.NOTPARALLEL:
+
+
+#=============================================================================
+# Special targets provided by cmake.
+
+# Disable implicit rules so canonical targets will work.
+.SUFFIXES:
+
+
+# Disable VCS-based implicit rules.
+% : %,v
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%
+
+
+# Disable VCS-based implicit rules.
+% : RCS/%,v
+
+
+# Disable VCS-based implicit rules.
+% : SCCS/s.%
+
+
+# Disable VCS-based implicit rules.
+% : s.%
+
+
+.SUFFIXES: .hpux_make_needs_suffix_list
+
+
+# Command-line flag to silence nested $(MAKE).
+$(VERBOSE)MAKESILENT = -s
+
+# Suppress display of executed commands.
+$(VERBOSE).SILENT:
+
+
+# A target that is always out of date.
+cmake_force:
+
+.PHONY : cmake_force
+
+#=============================================================================
+# Set environment variables for the build.
+
+SHELL = cmd.exe
+
+# The CMake executable.
+CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe"
+
+# The command to remove a file.
+RM = "C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E rm -f
+
+# Escaping for special characters.
+EQUALS = =
+
+# The top-level source directory on which CMake was run.
+CMAKE_SOURCE_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry"
+
+# The top-level build directory on which CMake was run.
+CMAKE_BINARY_DIR = "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug"
+
+#=============================================================================
+# Targets provided globally by CMake.
+
+# Special rule for the target edit_cache
+edit_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
+	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
+.PHONY : edit_cache
+
+# Special rule for the target edit_cache
+edit_cache/fast: edit_cache
+
+.PHONY : edit_cache/fast
+
+# Special rule for the target rebuild_cache
+rebuild_cache:
+	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
+	"C:\Program Files\JetBrains\CLion 2020.2.4\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
+.PHONY : rebuild_cache
+
+# Special rule for the target rebuild_cache
+rebuild_cache/fast: rebuild_cache
+
+.PHONY : rebuild_cache/fast
+
+# The main all target
+all: cmake_check_build_system
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles\progress.marks"
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 all
+	$(CMAKE_COMMAND) -E cmake_progress_start "C:\Users\m7mds\OneDrive - Technion\Documents\GitHub\HW2_2425A\dry\cmake-build-debug\CMakeFiles" 0
+.PHONY : all
+
+# The main clean target
+clean:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 clean
+.PHONY : clean
+
+# The main clean target
+clean/fast: clean
+
+.PHONY : clean/fast
+
+# Prepare targets for installation.
+preinstall: all
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
+.PHONY : preinstall
+
+# Prepare targets for installation.
+preinstall/fast:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
+.PHONY : preinstall/fast
+
+# clear depends
+depend:
+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
+.PHONY : depend
+
+#=============================================================================
+# Target rules for targets named dry
+
+# Build rule for target.
+dry: cmake_check_build_system
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 dry
+.PHONY : dry
+
+# fast build rule for target.
+dry/fast:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/build
+.PHONY : dry/fast
+
+Pirate.obj: Pirate.cpp.obj
+
+.PHONY : Pirate.obj
+
+# target to build an object file
+Pirate.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.obj
+.PHONY : Pirate.cpp.obj
+
+Pirate.i: Pirate.cpp.i
+
+.PHONY : Pirate.i
+
+# target to preprocess a source file
+Pirate.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.i
+.PHONY : Pirate.cpp.i
+
+Pirate.s: Pirate.cpp.s
+
+.PHONY : Pirate.s
+
+# target to generate assembly for a file
+Pirate.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/Pirate.cpp.s
+.PHONY : Pirate.cpp.s
+
+main.obj: main.cpp.obj
+
+.PHONY : main.obj
+
+# target to build an object file
+main.cpp.obj:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.obj
+.PHONY : main.cpp.obj
+
+main.i: main.cpp.i
+
+.PHONY : main.i
+
+# target to preprocess a source file
+main.cpp.i:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.i
+.PHONY : main.cpp.i
+
+main.s: main.cpp.s
+
+.PHONY : main.s
+
+# target to generate assembly for a file
+main.cpp.s:
+	$(MAKE) $(MAKESILENT) -f CMakeFiles\dry.dir\build.make CMakeFiles/dry.dir/main.cpp.s
+.PHONY : main.cpp.s
+
+# Help Target
+help:
+	@echo The following are some of the valid targets for this Makefile:
+	@echo ... all (the default if no target is provided)
+	@echo ... clean
+	@echo ... depend
+	@echo ... edit_cache
+	@echo ... rebuild_cache
+	@echo ... dry
+	@echo ... Pirate.obj
+	@echo ... Pirate.i
+	@echo ... Pirate.s
+	@echo ... main.obj
+	@echo ... main.i
+	@echo ... main.s
+.PHONY : help
+
+
+
+#=============================================================================
+# Special targets to cleanup operation of make.
+
+# Special rule to run CMake to check the build system integrity.
+# No rule that depends on this can have commands that come from listfiles
+# because they might be regenerated.
+cmake_check_build_system:
+	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
+.PHONY : cmake_check_build_system
+
diff --git a/dry/cmake-build-debug/cmake_install.cmake b/dry/cmake-build-debug/cmake_install.cmake
new file mode 100644
index 0000000..472ee00
--- /dev/null
+++ b/dry/cmake-build-debug/cmake_install.cmake
@@ -0,0 +1,44 @@
+# Install script for directory: C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry
+
+# Set the install prefix
+if(NOT DEFINED CMAKE_INSTALL_PREFIX)
+  set(CMAKE_INSTALL_PREFIX "C:/Program Files (x86)/dry")
+endif()
+string(REGEX REPLACE "/$" "" CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}")
+
+# Set the install configuration name.
+if(NOT DEFINED CMAKE_INSTALL_CONFIG_NAME)
+  if(BUILD_TYPE)
+    string(REGEX REPLACE "^[^A-Za-z0-9_]+" ""
+           CMAKE_INSTALL_CONFIG_NAME "${BUILD_TYPE}")
+  else()
+    set(CMAKE_INSTALL_CONFIG_NAME "Debug")
+  endif()
+  message(STATUS "Install configuration: \"${CMAKE_INSTALL_CONFIG_NAME}\"")
+endif()
+
+# Set the component getting installed.
+if(NOT CMAKE_INSTALL_COMPONENT)
+  if(COMPONENT)
+    message(STATUS "Install component: \"${COMPONENT}\"")
+    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")
+  else()
+    set(CMAKE_INSTALL_COMPONENT)
+  endif()
+endif()
+
+# Is this installation the result of a crosscompile?
+if(NOT DEFINED CMAKE_CROSSCOMPILING)
+  set(CMAKE_CROSSCOMPILING "FALSE")
+endif()
+
+if(CMAKE_INSTALL_COMPONENT)
+  set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")
+else()
+  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")
+endif()
+
+string(REPLACE ";" "\n" CMAKE_INSTALL_MANIFEST_CONTENT
+       "${CMAKE_INSTALL_MANIFEST_FILES}")
+file(WRITE "C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/${CMAKE_INSTALL_MANIFEST}"
+     "${CMAKE_INSTALL_MANIFEST_CONTENT}")
diff --git a/dry/cmake-build-debug/dry.cbp b/dry/cmake-build-debug/dry.cbp
new file mode 100644
index 0000000..6929279
--- /dev/null
+++ b/dry/cmake-build-debug/dry.cbp
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<CodeBlocks_project_file>
+	<FileVersion major="1" minor="6"/>
+	<Project>
+		<Option title="dry"/>
+		<Option makefile_is_custom="1"/>
+		<Option compiler="gcc"/>
+		<Option virtualFolders="CMake Files\;"/>
+		<Build>
+			<Target title="all">
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option type="4"/>
+				<MakeCommands>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 all"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+				</MakeCommands>
+			</Target>
+			<Target title="dry">
+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option object_output="./"/>
+				<Option type="1"/>
+				<Option compiler="gcc"/>
+				<Compiler>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
+				</Compiler>
+				<MakeCommands>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+				</MakeCommands>
+			</Target>
+			<Target title="dry/fast">
+				<Option output="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/dry.exe" prefix_auto="0" extension_auto="0"/>
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option object_output="./"/>
+				<Option type="1"/>
+				<Option compiler="gcc"/>
+				<Compiler>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/x86_64-w64-mingw32"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include/c++/backward"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../include"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/include-fixed"/>
+					<Add directory="C:/TDM-GCC-64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/../../../../x86_64-w64-mingw32/include"/>
+				</Compiler>
+				<MakeCommands>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 dry/fast"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+				</MakeCommands>
+			</Target>
+			<Target title="edit_cache">
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option type="4"/>
+				<MakeCommands>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 edit_cache"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+				</MakeCommands>
+			</Target>
+			<Target title="rebuild_cache">
+				<Option working_dir="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug"/>
+				<Option type="4"/>
+				<MakeCommands>
+					<Build command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 rebuild_cache"/>
+					<CompileFile command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 &quot;$file&quot;"/>
+					<Clean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+					<DistClean command="C:/TDM-GCC-64/bin/mingw32-make.exe -f &quot;C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/cmake-build-debug/Makefile&quot;  VERBOSE=1 clean"/>
+				</MakeCommands>
+			</Target>
+		</Build>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.cpp">
+			<Option target="dry"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/Pirate.h">
+			<Option target="dry"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/main.cpp">
+			<Option target="dry"/>
+		</Unit>
+		<Unit filename="C:/Users/m7mds/OneDrive - Technion/Documents/GitHub/HW2_2425A/dry/CMakeLists.txt">
+			<Option virtualFolder="CMake Files\"/>
+		</Unit>
+	</Project>
+</CodeBlocks_project_file>
diff --git a/dry/cmake-build-debug/dry.exe b/dry/cmake-build-debug/dry.exe
new file mode 100644
index 0000000..768c9c7
Binary files /dev/null and b/dry/cmake-build-debug/dry.exe differ
diff --git a/dry/main.cpp b/dry/main.cpp
index 6b659a1..bc8f460 100755
--- a/dry/main.cpp
+++ b/dry/main.cpp
@@ -1,25 +1,6 @@
 #include <iostream>
-#include "Pirate.h"
-#include <cstring>
-
-using std::cout, std::endl;
-
 
 int main() {
-
-    Pirate luffy("Luffy");
-    Pirate zoro("Zoro");
-
-    const int crewSize = 2;
-    
-    Pirate strawHatCrew[2];
-    strawHatCrew[0] = luffy;
-    strawHatCrew[1] = zoro;
-    
-    cout << "Straw Hat crew contains:" << endl;
-    for (int i = 0; i < crewSize; i++) {
-        cout << strawHatCrew[i] << endl;
-    }
-
+    std::cout << "Hello, World!" << std::endl;
     return 0;
 }

commit 67a992620c204243a3c94749804df35fcebbf6d3
Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
Date:   Fri Dec 13 02:44:01 2024 +0200

    [Feature] Add devil fruit feature

diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
index c96892e..fc3c314 100755
--- a/dry/Pirate.cpp
+++ b/dry/Pirate.cpp
@@ -2,7 +2,7 @@
 #include "Pirate.h"
 
 
-Pirate::Pirate(const string& name): name(name) {}
+Pirate::Pirate(const string& name, DEVIL_FRUIT devilFruit): name(name), devilFruit(devilFruit) {}
 
 
 void Pirate::setName(const string& name){
@@ -10,12 +10,32 @@ void Pirate::setName(const string& name){
 }
 
 
+void Pirate::setDevilFruit(DEVIL_FRUIT devilFruit){
+    this->devilFruit = devilFruit;
+}
+
+
 std::string Pirate::getName(){
     return name;
 }
 
 
+DEVIL_FRUIT Pirate::getDevilFruit(){
+    return devilFruit;
+}
+
+
+const char* const devilFruitNames[] = {
+    "Gum Gum",
+    "Smoke Smoke",
+    "Flame Flame",
+    "Rumble Rumble",
+    "String String",
+    "Ice Ice",
+    "None"
+};
+
 std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
-    os << pirate.name;
+    os << pirate.name << " (Devil Fruit: " << devilFruitNames[pirate.devilFruit] << ")";
     return os;
 }
diff --git a/dry/Pirate.h b/dry/Pirate.h
index 7769667..4c044b1 100755
--- a/dry/Pirate.h
+++ b/dry/Pirate.h
@@ -5,18 +5,31 @@
 
 using std::string;
 
+enum DEVIL_FRUIT {
+    GUM_GUM_FRUIT,
+    SMOKE_SMOKE_FRUIT,
+    FLAME_FLAME_FRUIT,
+    RUMBLE_RUMBLE_FRUIT,
+    STRING_STRING_FRUIT,
+    ICE_ICE_FRUIT,
+    NONE
+};
+
 class Pirate {
 private:
     string name;
+    DEVIL_FRUIT devilFruit;
 
 public:
-    Pirate(const string& name);
+    Pirate(const string& name, DEVIL_FRUIT devilFruit = DEVIL_FRUIT::NONE);
 
     ~Pirate() = default;
 
     void setName(const string& name);
+    void setDevilFruit(DEVIL_FRUIT devilFruit);
 
     string getName();
+    DEVIL_FRUIT getDevilFruit();
 
     friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
 };
diff --git a/dry/main.cpp b/dry/main.cpp
index 6b659a1..2911f71 100755
--- a/dry/main.cpp
+++ b/dry/main.cpp
@@ -7,7 +7,7 @@ using std::cout, std::endl;
 
 int main() {
 
-    Pirate luffy("Luffy");
+    Pirate luffy("Luffy", GUM_GUM_FRUIT);
     Pirate zoro("Zoro");
 
     const int crewSize = 2;

commit 74f6b97bc53ce50d65642ddedae20581be903ddf
Author: Baraa Egbaria <mohammadegbaria@Mohammads-MacBook-Pro.local>
Date:   Fri Dec 13 02:41:38 2024 +0200

    Initial Commit

diff --git a/README.md b/README.md
new file mode 100644
index 0000000..0a4b9a1
--- /dev/null
+++ b/README.md
@@ -0,0 +1,7 @@
+# Matam Homework 2
+
+This repository contains all supplied files for the second homework assignment in the course "Introduction to Systems Programming" (234124) at the Technion.
+
+You may find the full instructions for this assignment on the [course's website](https://webcourse.cs.technion.ac.il/02340124/Winter2024-2025).
+
+Good luck and have fun!
diff --git a/dry/Pirate.cpp b/dry/Pirate.cpp
new file mode 100755
index 0000000..c96892e
--- /dev/null
+++ b/dry/Pirate.cpp
@@ -0,0 +1,21 @@
+
+#include "Pirate.h"
+
+
+Pirate::Pirate(const string& name): name(name) {}
+
+
+void Pirate::setName(const string& name){
+    this->name = name;
+}
+
+
+std::string Pirate::getName(){
+    return name;
+}
+
+
+std::ostream &operator<<(std::ostream &os, const Pirate &pirate){
+    os << pirate.name;
+    return os;
+}
diff --git a/dry/Pirate.h b/dry/Pirate.h
new file mode 100755
index 0000000..7769667
--- /dev/null
+++ b/dry/Pirate.h
@@ -0,0 +1,22 @@
+
+#pragma once
+
+#include <iostream>
+
+using std::string;
+
+class Pirate {
+private:
+    string name;
+
+public:
+    Pirate(const string& name);
+
+    ~Pirate() = default;
+
+    void setName(const string& name);
+
+    string getName();
+
+    friend std::ostream &operator<<(std::ostream &os, const Pirate &pirate);
+};
diff --git a/dry/main.cpp b/dry/main.cpp
new file mode 100755
index 0000000..6b659a1
--- /dev/null
+++ b/dry/main.cpp
@@ -0,0 +1,25 @@
+#include <iostream>
+#include "Pirate.h"
+#include <cstring>
+
+using std::cout, std::endl;
+
+
+int main() {
+
+    Pirate luffy("Luffy");
+    Pirate zoro("Zoro");
+
+    const int crewSize = 2;
+    
+    Pirate strawHatCrew[2];
+    strawHatCrew[0] = luffy;
+    strawHatCrew[1] = zoro;
+    
+    cout << "Straw Hat crew contains:" << endl;
+    for (int i = 0; i < crewSize; i++) {
+        cout << strawHatCrew[i] << endl;
+    }
+
+    return 0;
+}
diff --git a/wet/Utilities.cpp b/wet/Utilities.cpp
new file mode 100755
index 0000000..c35944f
--- /dev/null
+++ b/wet/Utilities.cpp
@@ -0,0 +1,23 @@
+
+#include "Utilities.h"
+
+#include <iostream>
+
+using std::cerr;
+
+
+void exitWithError(MatamErrorType error) {
+    std::cerr << "Matam Error: ";
+    switch (error) {
+        case MatamErrorType::UnmatchedSizes:
+            std::cerr << "Unmatched matrices" << std::endl;
+            break;
+        case MatamErrorType::OutOfBounds:
+            std::cerr << "Out of bounds" << std::endl;
+            break;
+        case MatamErrorType::NotSquareMatrix:
+            std::cerr << "Matrix must be square to calculate determinant" << std::endl;
+            break;
+    }
+    exit(1);
+}
diff --git a/wet/Utilities.h b/wet/Utilities.h
new file mode 100755
index 0000000..c07958d
--- /dev/null
+++ b/wet/Utilities.h
@@ -0,0 +1,10 @@
+
+#pragma once
+
+enum class MatamErrorType {
+    UnmatchedSizes,
+    OutOfBounds,
+    NotSquareMatrix
+};
+
+void exitWithError(MatamErrorType error);
diff --git a/wet/test.expected b/wet/test.expected
new file mode 100755
index 0000000..d107ab8
--- /dev/null
+++ b/wet/test.expected
@@ -0,0 +1,19 @@
+|5|6|
+|7|8|
+
+Movie Name: MataMatrix
+Author: Baraa Egbaria
+
+Frame 0:
+|1|2|
+|3|4|
+
+Frame 1:
+|5|6|
+|7|8|
+
+Frame 2:
+|1|2|
+|3|4|
+
+-----End of Movie-----
diff --git a/wet/tests.cpp b/wet/tests.cpp
new file mode 100755
index 0000000..d8bc5a7
--- /dev/null
+++ b/wet/tests.cpp
@@ -0,0 +1,130 @@
+
+
+#include <string>
+#include <iostream>
+
+#include "Matrix.h"
+#include "MataMvidia.h"
+
+using namespace std;
+typedef bool (*testFunc)(void);
+
+bool testMatrix(std::ostream& out);
+bool testMataMvidia(std::ostream& out);
+
+
+#define ASSERT_TEST(expr)                                                      \
+do {                                                                           \
+    if (!(expr)) {                                                             \
+        std::cout << "\nAssertion failed at ";                                 \
+        std::cout << __FILE__ << ":" << __LINE__ << ": " << #expr << std::endl;\
+        exit(1);                                                               \
+    }                                                                          \
+} while (0)
+
+
+int main() {
+    testMatrix(std::cout);
+    testMataMvidia(std::cout);
+    return 0;
+}
+
+bool testMatrix(std::ostream& out) {
+    Matrix m1(2,2);
+    Matrix m2(2,2);
+
+    m1(0,0) = 1;
+    m1(0,1) = 2;
+    m1(1,0) = 3;
+    m1(1,1) = 4;
+
+    m2(0,0) = 5;
+    m2(0,1) = 6;
+    m2(1,0) = 7;
+    m2(1,1) = 8;
+
+    Matrix m3 = m1 + m2;
+    ASSERT_TEST(m3(0,0) == 6);
+    ASSERT_TEST(m3(0,1) == 8);
+    ASSERT_TEST(m3(1,0) == 10);
+    ASSERT_TEST(m3(1,1) == 12);
+
+    Matrix m4 = m1 * m2;
+    m4 *= 1;
+    ASSERT_TEST(m4(0,0) == 19);
+    ASSERT_TEST(m4(0,1) == 22);
+    ASSERT_TEST(m4(1,0) == 43);
+    ASSERT_TEST(m4(1,1) == 50);
+
+    m1 += m2;
+    m1 *= m2;
+    m1 -= m2;
+    m1 = m3 - m2;
+
+    ASSERT_TEST(-m1 == -1*m1);
+    ASSERT_TEST(-m1 == m1*-1);
+
+    ASSERT_TEST(m2.rotateClockwise().rotateCounterClockwise() == m2);
+
+    ASSERT_TEST(m1.transpose().transpose() == m1);
+
+    out << m2 << std::endl;
+
+    return true;
+}
+
+bool testMataMvidia(std::ostream& out) {
+    Matrix frame1(2,2);
+    Matrix frame2(2,2);
+
+    frame1(0,0) = 1;
+    frame1(0,1) = 2;
+    frame1(1,0) = 3;
+    frame1(1,1) = 4;
+
+    frame2(0,0) = 5;
+    frame2(0,1) = 6;
+    frame2(1,0) = 7;
+    frame2(1,1) = 8;
+
+    Matrix array[2];
+    array[0] = frame1;
+    array[1] = frame2;
+
+    MataMvidia movie("MataMatrix","Baraa Egbaria",array, 2);
+
+    ASSERT_TEST(movie[0] == frame1);
+
+    movie += frame1;
+
+    ASSERT_TEST(movie[2] == frame1);
+
+    Matrix frame01(2,2);
+    Matrix frame11(2,2);
+
+    frame01(0,0) = 10;
+    frame01(0,1) = 20;
+    frame01(1,0) = 30;
+    frame01(1,1) = 40;
+
+    frame11(0,0) = 50;
+    frame11(0,1) = 60;
+    frame11(1,0) = 70;
+    frame11(1,1) = 80;
+
+    Matrix array1[2];
+    array1[0] = frame01;
+    array1[1] = frame11;
+
+    MataMvidia movie1("MataMatrix and the chamber of secrets","Baraa Egbaria",array1, 2);
+
+    ASSERT_TEST(movie1[0] == frame01);
+
+    //test output
+    out << movie;
+
+    MataMvidia movie2 = movie + movie1;
+    movie += movie1;
+
+    return true;
+}
